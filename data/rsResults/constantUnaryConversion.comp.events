Ok(EnterFile { file_id: FileId(0), path: "../data/constantUnaryConversion.comp", canonical_path: "/home/vincent/Applications/apps/glsl-lang/data/constantUnaryConversion.comp" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..14, kind: Version(Version { number: 450, profile: Core }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 14..16 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@16..78, kind: Extension(Extension { name: Specific(Atom('GL_EXT_shader_explicit_arithmetic_types' type=dynamic)), behavior: Require }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 78..80 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 80..85 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 85..86 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 86..90 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 90..91 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 91..100 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 100..101 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 101..102 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 102..103 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 103..107 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 107..108 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 108..110 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 110..115 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 115..116 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 116..122 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 122..123 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 123..134 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 134..135 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 135..136 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 136..137 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 137..143 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 143..144 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 144..145 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 145..146 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 146..147 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 147..148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 148..150 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 150..155 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 155..156 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 156..163 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 163..164 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 164..176 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 176..177 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 177..178 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 178..179 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 179..186 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 186..187 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 187..188 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 188..189 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 189..190 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 190..191 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 191..193 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 193..198 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 198..199 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 199..206 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 206..207 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 207..219 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 219..220 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 220..221 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 221..222 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 222..229 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 229..230 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 230..231 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 231..232 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 232..233 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 233..234 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 234..236 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 236..241 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 241..242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 242..249 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 249..250 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 250..262 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 262..263 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 263..264 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 264..265 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 265..272 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 272..273 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 273..274 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 274..275 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 275..276 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 276..277 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 277..279 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 279..284 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 284..285 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 285..292 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 292..293 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 293..305 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 305..306 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 306..307 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 307..308 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 308..315 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 315..316 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 316..317 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 317..318 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 318..319 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 319..321 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 321..326 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 326..327 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 327..335 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 335..336 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 336..349 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 349..350 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 350..351 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 351..352 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 352..360 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 360..361 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 361..362 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 362..363 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 363..364 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 364..366 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 366..371 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 371..372 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 372..380 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 380..381 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 381..394 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 394..395 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 395..396 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 396..397 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 397..405 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 405..406 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 406..407 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 407..408 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 408..409 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 409..411 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 411..416 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 416..417 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 417..425 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 425..426 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 426..439 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 439..440 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 440..441 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 441..442 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 442..450 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 450..451 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 451..452 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 452..453 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 453..454 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 454..456 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 456..461 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 461..462 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 462..471 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 471..472 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 472..486 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 486..487 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 487..488 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 488..489 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 489..498 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 498..499 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 499..503 } "42.0", token_kind: FLOAT_CONST(42.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 503..504 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 504..505 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 505..507 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 507..512 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 512..513 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 513..522 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 522..523 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 523..537 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 537..538 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 538..539 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 539..540 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 540..549 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 549..550 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 550..554 } "13.0", token_kind: FLOAT_CONST(13.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 554..555 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 555..556 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 556..558 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 558..563 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 563..564 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 564..573 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 573..574 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 574..588 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 588..589 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 589..590 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 590..591 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 591..600 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 600..601 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 601..602 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 602..605 } "4.0", token_kind: FLOAT_CONST(4.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 605..606 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 606..607 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 607..609 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 609..611 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@611..679, kind: Define(Define { name: "TYPE_TO_TYPE", kind: Function(DefineFunction { args: ["x", "y"], tokens: PP_DEFINE_BODY@645..677 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 679..681 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@681..1133, kind: Define(Define { name: "TYPE_TO", kind: Function(DefineFunction { args: ["x"], tokens: PP_DEFINE_BODY@720..1131 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1133..1135 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool_to_bool", token_kind: IDENT("bool_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int8_t_to_bool", token_kind: IDENT("int8_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int16_t_to_bool", token_kind: IDENT("int16_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int32_t_to_bool", token_kind: IDENT("int32_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int64_t_to_bool", token_kind: IDENT("int64_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint8_t_to_bool", token_kind: IDENT("uint8_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint16_t_to_bool", token_kind: IDENT("uint16_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint32_t_to_bool", token_kind: IDENT("uint32_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint64_t_to_bool", token_kind: IDENT("uint64_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "float16_t_to_bool", token_kind: IDENT("float16_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "float32_t_to_bool", token_kind: IDENT("float32_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "float64_t_to_bool", token_kind: IDENT("float64_t_to_bool"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1135..1148 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1148 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1135..1148 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1148..1149 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1149..1151 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "bool_to_int8_t", token_kind: IDENT("bool_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t_to_int8_t", token_kind: IDENT("int8_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int16_t_to_int8_t", token_kind: IDENT("int16_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int32_t_to_int8_t", token_kind: IDENT("int32_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int64_t_to_int8_t", token_kind: IDENT("int64_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint8_t_to_int8_t", token_kind: IDENT("uint8_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint16_t_to_int8_t", token_kind: IDENT("uint16_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint32_t_to_int8_t", token_kind: IDENT("uint32_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint64_t_to_int8_t", token_kind: IDENT("uint64_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "float16_t_to_int8_t", token_kind: IDENT("float16_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "float32_t_to_int8_t", token_kind: IDENT("float32_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1166 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "float64_t_to_int8_t", token_kind: IDENT("float64_t_to_int8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1151..1166 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1151..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1151..1166 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1151..1166 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1166..1167 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1167..1169 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "bool_to_int16_t", token_kind: IDENT("bool_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int8_t_to_int16_t", token_kind: IDENT("int8_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t_to_int16_t", token_kind: IDENT("int16_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int32_t_to_int16_t", token_kind: IDENT("int32_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int64_t_to_int16_t", token_kind: IDENT("int64_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint8_t_to_int16_t", token_kind: IDENT("uint8_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint16_t_to_int16_t", token_kind: IDENT("uint16_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint32_t_to_int16_t", token_kind: IDENT("uint32_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint64_t_to_int16_t", token_kind: IDENT("uint64_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "float16_t_to_int16_t", token_kind: IDENT("float16_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "float32_t_to_int16_t", token_kind: IDENT("float32_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1169..1185 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "float64_t_to_int16_t", token_kind: IDENT("float64_t_to_int16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1169..1185 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1169..1185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1169..1185 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1169..1185 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1185..1186 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1186..1188 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "bool_to_int32_t", token_kind: IDENT("bool_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int8_t_to_int32_t", token_kind: IDENT("int8_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int16_t_to_int32_t", token_kind: IDENT("int16_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t_to_int32_t", token_kind: IDENT("int32_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int64_t_to_int32_t", token_kind: IDENT("int64_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint8_t_to_int32_t", token_kind: IDENT("uint8_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint16_t_to_int32_t", token_kind: IDENT("uint16_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint32_t_to_int32_t", token_kind: IDENT("uint32_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint64_t_to_int32_t", token_kind: IDENT("uint64_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "float16_t_to_int32_t", token_kind: IDENT("float16_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "float32_t_to_int32_t", token_kind: IDENT("float32_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1204 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "float64_t_to_int32_t", token_kind: IDENT("float64_t_to_int32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1188..1204 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1188..1204 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1188..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1204..1205 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1205..1207 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "bool_to_int64_t", token_kind: IDENT("bool_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int8_t_to_int64_t", token_kind: IDENT("int8_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int16_t_to_int64_t", token_kind: IDENT("int16_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int32_t_to_int64_t", token_kind: IDENT("int32_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t_to_int64_t", token_kind: IDENT("int64_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint8_t_to_int64_t", token_kind: IDENT("uint8_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint16_t_to_int64_t", token_kind: IDENT("uint16_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint32_t_to_int64_t", token_kind: IDENT("uint32_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint64_t_to_int64_t", token_kind: IDENT("uint64_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "float16_t_to_int64_t", token_kind: IDENT("float16_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "float32_t_to_int64_t", token_kind: IDENT("float32_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1207..1223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "float64_t_to_int64_t", token_kind: IDENT("float64_t_to_int64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1207..1223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1223 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1207..1223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1223..1224 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1224..1226 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "bool_to_uint8_t", token_kind: IDENT("bool_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int8_t_to_uint8_t", token_kind: IDENT("int8_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int16_t_to_uint8_t", token_kind: IDENT("int16_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int32_t_to_uint8_t", token_kind: IDENT("int32_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int64_t_to_uint8_t", token_kind: IDENT("int64_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t_to_uint8_t", token_kind: IDENT("uint8_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint16_t_to_uint8_t", token_kind: IDENT("uint16_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint32_t_to_uint8_t", token_kind: IDENT("uint32_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint64_t_to_uint8_t", token_kind: IDENT("uint64_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "float16_t_to_uint8_t", token_kind: IDENT("float16_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "float32_t_to_uint8_t", token_kind: IDENT("float32_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1226..1242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "float64_t_to_uint8_t", token_kind: IDENT("float64_t_to_uint8_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1226..1242 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "uint8_t", token_kind: TYPE_NAME(OTHER(Atom('uint8_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1226..1242 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1226..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1242..1243 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1243..1245 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "bool_to_uint16_t", token_kind: IDENT("bool_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int8_t_to_uint16_t", token_kind: IDENT("int8_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int16_t_to_uint16_t", token_kind: IDENT("int16_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int32_t_to_uint16_t", token_kind: IDENT("int32_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int64_t_to_uint16_t", token_kind: IDENT("int64_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint8_t_to_uint16_t", token_kind: IDENT("uint8_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t_to_uint16_t", token_kind: IDENT("uint16_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint32_t_to_uint16_t", token_kind: IDENT("uint32_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint64_t_to_uint16_t", token_kind: IDENT("uint64_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "float16_t_to_uint16_t", token_kind: IDENT("float16_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "float32_t_to_uint16_t", token_kind: IDENT("float32_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1245..1262 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "float64_t_to_uint16_t", token_kind: IDENT("float64_t_to_uint16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1245..1262 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1245..1262 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "uint16_t", token_kind: TYPE_NAME(OTHER(Atom('uint16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1245..1262 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1245..1262 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1262..1263 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1263..1265 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "bool_to_uint32_t", token_kind: IDENT("bool_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int8_t_to_uint32_t", token_kind: IDENT("int8_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int16_t_to_uint32_t", token_kind: IDENT("int16_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int32_t_to_uint32_t", token_kind: IDENT("int32_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int64_t_to_uint32_t", token_kind: IDENT("int64_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint8_t_to_uint32_t", token_kind: IDENT("uint8_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint16_t_to_uint32_t", token_kind: IDENT("uint16_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t_to_uint32_t", token_kind: IDENT("uint32_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint64_t_to_uint32_t", token_kind: IDENT("uint64_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "float16_t_to_uint32_t", token_kind: IDENT("float16_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "float32_t_to_uint32_t", token_kind: IDENT("float32_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1265..1282 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "float64_t_to_uint32_t", token_kind: IDENT("float64_t_to_uint32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1265..1282 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "uint32_t", token_kind: TYPE_NAME(OTHER(Atom('uint32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1282 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1265..1282 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1282..1283 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1283..1285 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "bool_to_uint64_t", token_kind: IDENT("bool_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int8_t_to_uint64_t", token_kind: IDENT("int8_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int16_t_to_uint64_t", token_kind: IDENT("int16_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int32_t_to_uint64_t", token_kind: IDENT("int32_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int64_t_to_uint64_t", token_kind: IDENT("int64_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint8_t_to_uint64_t", token_kind: IDENT("uint8_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint16_t_to_uint64_t", token_kind: IDENT("uint16_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint32_t_to_uint64_t", token_kind: IDENT("uint32_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t_to_uint64_t", token_kind: IDENT("uint64_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "float16_t_to_uint64_t", token_kind: IDENT("float16_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "float32_t_to_uint64_t", token_kind: IDENT("float32_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1285..1302 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "float64_t_to_uint64_t", token_kind: IDENT("float64_t_to_uint64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1285..1302 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1285..1302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "uint64_t", token_kind: TYPE_NAME(OTHER(Atom('uint64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1285..1302 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1285..1302 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1302..1303 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1303..1305 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "bool_to_float16_t", token_kind: IDENT("bool_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int8_t_to_float16_t", token_kind: IDENT("int8_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int16_t_to_float16_t", token_kind: IDENT("int16_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int32_t_to_float16_t", token_kind: IDENT("int32_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int64_t_to_float16_t", token_kind: IDENT("int64_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint8_t_to_float16_t", token_kind: IDENT("uint8_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint16_t_to_float16_t", token_kind: IDENT("uint16_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint32_t_to_float16_t", token_kind: IDENT("uint32_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint64_t_to_float16_t", token_kind: IDENT("uint64_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t_to_float16_t", token_kind: IDENT("float16_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float32_t_to_float16_t", token_kind: IDENT("float32_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1305..1323 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float64_t_to_float16_t", token_kind: IDENT("float64_t_to_float16_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1305..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1305..1323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1305..1323 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1305..1323 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1323..1324 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1324..1326 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "bool_to_float32_t", token_kind: IDENT("bool_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int8_t_to_float32_t", token_kind: IDENT("int8_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int16_t_to_float32_t", token_kind: IDENT("int16_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int32_t_to_float32_t", token_kind: IDENT("int32_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int64_t_to_float32_t", token_kind: IDENT("int64_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint8_t_to_float32_t", token_kind: IDENT("uint8_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint16_t_to_float32_t", token_kind: IDENT("uint16_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint32_t_to_float32_t", token_kind: IDENT("uint32_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint64_t_to_float32_t", token_kind: IDENT("uint64_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float16_t_to_float32_t", token_kind: IDENT("float16_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t_to_float32_t", token_kind: IDENT("float32_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1326..1344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float64_t_to_float32_t", token_kind: IDENT("float64_t_to_float32_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1326..1344 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1326..1344 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1326..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1344..1345 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1345..1347 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "bool_to_float64_t", token_kind: IDENT("bool_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "bool_init", token_kind: IDENT("bool_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int8_t_to_float64_t", token_kind: IDENT("int8_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int8_t_init", token_kind: IDENT("int8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int16_t_to_float64_t", token_kind: IDENT("int16_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int16_t_init", token_kind: IDENT("int16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int32_t_to_float64_t", token_kind: IDENT("int32_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int32_t_init", token_kind: IDENT("int32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int64_t_to_float64_t", token_kind: IDENT("int64_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "int64_t_init", token_kind: IDENT("int64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint8_t_to_float64_t", token_kind: IDENT("uint8_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint8_t_init", token_kind: IDENT("uint8_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint16_t_to_float64_t", token_kind: IDENT("uint16_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint16_t_init", token_kind: IDENT("uint16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint32_t_to_float64_t", token_kind: IDENT("uint32_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint32_t_init", token_kind: IDENT("uint32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint64_t_to_float64_t", token_kind: IDENT("uint64_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "uint64_t_init", token_kind: IDENT("uint64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float16_t_to_float64_t", token_kind: IDENT("float16_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float16_t_init", token_kind: IDENT("float16_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float32_t_to_float64_t", token_kind: IDENT("float32_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float32_t_init", token_kind: IDENT("float32_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1347..1365 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t_to_float64_t", token_kind: IDENT("float64_t_to_float64_t"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1347..1365 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1347..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1347..1365 } "float64_t_init", token_kind: IDENT("float64_t_init"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1347..1365 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1365..1366 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1366..1368 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1368..1370 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1370..1374 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1374..1375 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1375..1379 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1379..1380 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1380..1381 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1381..1382 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 1382..1383 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1383..1384 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1384..1386 } "\r\n", token_kind: WS, state: Active })
