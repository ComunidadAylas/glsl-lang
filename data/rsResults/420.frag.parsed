ROOT@0..1467
  PP_VERSION@0..18
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "420"
    WS@12..13 " "
    PP_VERSION_PROFILE@13..17
      IDENT_KW@13..17 "core"
    NEWLINE@17..18 "\n"
  NEWLINE@18..19 "\n"
  IDENT_KW@19..25 "layout"
  LPAREN@25..26 "("
  IDENT_KW@26..35 "depth_any"
  RPAREN@35..36 ")"
  WS@36..37 " "
  IDENT_KW@37..40 "out"
  WS@40..41 " "
  IDENT_KW@41..46 "float"
  WS@46..47 " "
  IDENT_KW@47..59 "gl_FragDepth"
  SEMICOLON@59..60 ";"
  NEWLINE@60..61 "\n"
  IDENT_KW@61..67 "layout"
  LPAREN@67..68 "("
  IDENT_KW@68..81 "depth_greater"
  RPAREN@81..82 ")"
  WS@82..83 " "
  IDENT_KW@83..86 "out"
  WS@86..87 " "
  IDENT_KW@87..92 "float"
  WS@92..93 " "
  IDENT_KW@93..105 "gl_FragDepth"
  SEMICOLON@105..106 ";"
  WS@106..107 " "
  COMMENT@107..155 "// ERROR: redeclarati ..."
  NEWLINE@155..156 "\n"
  NEWLINE@156..157 "\n"
  IDENT_KW@157..161 "void"
  WS@161..162 " "
  IDENT_KW@162..166 "main"
  LPAREN@166..167 "("
  RPAREN@167..168 ")"
  NEWLINE@168..169 "\n"
  LBRACE@169..170 "{"
  NEWLINE@170..171 "\n"
  WS@171..175 "    "
  IDENT_KW@175..187 "gl_FragDepth"
  WS@187..188 " "
  EQUAL@188..189 "="
  WS@189..190 " "
  DIGITS@190..193 "0.3"
  SEMICOLON@193..194 ";"
  NEWLINE@194..195 "\n"
  RBRACE@195..196 "}"
  NEWLINE@196..197 "\n"
  NEWLINE@197..198 "\n"
  IDENT_KW@198..204 "layout"
  LPAREN@204..205 "("
  IDENT_KW@205..215 "depth_less"
  RPAREN@215..216 ")"
  WS@216..217 " "
  IDENT_KW@217..219 "in"
  WS@219..220 " "
  IDENT_KW@220..225 "float"
  WS@225..226 " "
  IDENT_KW@226..231 "depth"
  SEMICOLON@231..232 ";"
  WS@232..233 " "
  COMMENT@233..282 "// ERROR: depth_less  ..."
  NEWLINE@282..283 "\n"
  IDENT_KW@283..289 "layout"
  LPAREN@289..290 "("
  IDENT_KW@290..299 "depth_any"
  RPAREN@299..300 ")"
  WS@300..301 " "
  IDENT_KW@301..304 "out"
  WS@304..305 " "
  IDENT_KW@305..310 "float"
  WS@310..311 " "
  IDENT_KW@311..323 "gl_FragDepth"
  SEMICOLON@323..324 ";"
  WS@324..326 "  "
  COMMENT@326..350 "// ERROR, done after use"
  NEWLINE@350..351 "\n"
  NEWLINE@351..352 "\n"
  IDENT_KW@352..358 "layout"
  LPAREN@358..359 "("
  IDENT_KW@359..366 "binding"
  EQUAL@366..367 "="
  DIGITS@367..368 "0"
  RPAREN@368..369 ")"
  WS@369..370 " "
  IDENT_KW@370..377 "uniform"
  WS@377..378 " "
  IDENT_KW@378..389 "atomic_uint"
  WS@389..390 " "
  IDENT_KW@390..391 "a"
  LBRACKET@391..392 "["
  RBRACKET@392..393 "]"
  SEMICOLON@393..394 ";"
  NEWLINE@394..395 "\n"
  NEWLINE@395..396 "\n"
  IDENT_KW@396..403 "uniform"
  WS@403..404 " "
  IDENT_KW@404..413 "writeonly"
  WS@413..414 " "
  IDENT_KW@414..421 "image2D"
  WS@421..427 "      "
  IDENT_KW@427..430 "i2D"
  SEMICOLON@430..431 ";"
  NEWLINE@431..432 "\n"
  IDENT_KW@432..437 "ivec2"
  WS@437..438 " "
  IDENT_KW@438..444 "iv2dim"
  WS@444..445 " "
  EQUAL@445..446 "="
  WS@446..447 " "
  IDENT_KW@447..456 "imageSize"
  LPAREN@456..457 "("
  IDENT_KW@457..460 "i2D"
  RPAREN@460..461 ")"
  SEMICOLON@461..462 ";"
  WS@462..463 " "
  COMMENT@463..541 "// ERROR: imageSize c ..."
  NEWLINE@541..542 "\n"
  PP_EXTENSION@542..587
    HASH@542..543 "#"
    IDENT_KW@543..552 "extension"
    WS@552..553 " "
    IDENT_KW@553..577 "GL_ARB_shader_image_size"
    WS@577..578 " "
    COLON@578..579 ":"
    WS@579..580 " "
    IDENT_KW@580..586 "enable"
    NEWLINE@586..587 "\n"
  IDENT_KW@587..592 "ivec2"
  WS@592..593 " "
  IDENT_KW@593..600 "iv2dim1"
  WS@600..601 " "
  EQUAL@601..602 "="
  WS@602..603 " "
  IDENT_KW@603..612 "imageSize"
  LPAREN@612..613 "("
  IDENT_KW@613..616 "i2D"
  RPAREN@616..617 ")"
  SEMICOLON@617..618 ";"
  NEWLINE@618..619 "\n"
  NEWLINE@619..620 "\n"
  PP_EXTENSION@620..676
    HASH@620..621 "#"
    IDENT_KW@621..630 "extension"
    WS@630..631 " "
    IDENT_KW@631..666 "GL_ARB_shader_storage ..."
    WS@666..667 " "
    COLON@667..668 ":"
    WS@668..669 " "
    IDENT_KW@669..675 "enable"
    NEWLINE@675..676 "\n"
  NEWLINE@676..677 "\n"
  IDENT_KW@677..683 "layout"
  LPAREN@683..684 "("
  IDENT_KW@684..691 "binding"
  WS@691..692 " "
  EQUAL@692..693 "="
  WS@693..694 " "
  DIGITS@694..695 "0"
  COMMA@695..696 ","
  IDENT_KW@696..702 "std430"
  RPAREN@702..703 ")"
  WS@703..704 " "
  IDENT_KW@704..710 "buffer"
  WS@710..711 " "
  IDENT_KW@711..717 "Buffer"
  NEWLINE@717..718 "\n"
  LBRACE@718..719 "{"
  NEWLINE@719..720 "\n"
  WS@720..724 "    "
  IDENT_KW@724..727 "int"
  WS@727..728 " "
  IDENT_KW@728..733 "atomi"
  SEMICOLON@733..734 ";"
  NEWLINE@734..735 "\n"
  WS@735..739 "    "
  IDENT_KW@739..743 "uint"
  WS@743..744 " "
  IDENT_KW@744..749 "atomu"
  SEMICOLON@749..750 ";"
  NEWLINE@750..751 "\n"
  RBRACE@751..752 "}"
  SEMICOLON@752..753 ";"
  NEWLINE@753..754 "\n"
  NEWLINE@754..755 "\n"
  IDENT_KW@755..759 "void"
  WS@759..760 " "
  IDENT_KW@760..772 "atomicOpPass"
  LPAREN@772..773 "("
  RPAREN@773..774 ")"
  NEWLINE@774..775 "\n"
  LBRACE@775..776 "{"
  NEWLINE@776..777 "\n"
  WS@777..781 "    "
  IDENT_KW@781..784 "int"
  WS@784..785 " "
  IDENT_KW@785..790 "origi"
  WS@790..791 " "
  EQUAL@791..792 "="
  WS@792..793 " "
  IDENT_KW@793..802 "atomicAdd"
  LPAREN@802..803 "("
  IDENT_KW@803..808 "atomi"
  COMMA@808..809 ","
  WS@809..810 " "
  DIGITS@810..811 "3"
  RPAREN@811..812 ")"
  SEMICOLON@812..813 ";"
  NEWLINE@813..814 "\n"
  WS@814..818 "    "
  IDENT_KW@818..822 "uint"
  WS@822..823 " "
  IDENT_KW@823..828 "origu"
  WS@828..829 " "
  EQUAL@829..830 "="
  WS@830..831 " "
  IDENT_KW@831..840 "atomicAnd"
  LPAREN@840..841 "("
  IDENT_KW@841..846 "atomu"
  COMMA@846..847 ","
  WS@847..848 " "
  DIGITS@848..850 "7u"
  RPAREN@850..851 ")"
  SEMICOLON@851..852 ";"
  NEWLINE@852..853 "\n"
  WS@853..857 "    "
  IDENT_KW@857..862 "origi"
  WS@862..863 " "
  EQUAL@863..864 "="
  WS@864..865 " "
  IDENT_KW@865..879 "atomicExchange"
  LPAREN@879..880 "("
  IDENT_KW@880..885 "atomi"
  COMMA@885..886 ","
  WS@886..887 " "
  DIGITS@887..888 "4"
  RPAREN@888..889 ")"
  SEMICOLON@889..890 ";"
  NEWLINE@890..891 "\n"
  WS@891..895 "    "
  IDENT_KW@895..900 "origu"
  WS@900..901 " "
  EQUAL@901..902 "="
  WS@902..903 " "
  IDENT_KW@903..917 "atomicCompSwap"
  LPAREN@917..918 "("
  IDENT_KW@918..923 "atomu"
  COMMA@923..924 ","
  WS@924..925 " "
  DIGITS@925..928 "10u"
  COMMA@928..929 ","
  WS@929..930 " "
  DIGITS@930..932 "8u"
  RPAREN@932..933 ")"
  SEMICOLON@933..934 ";"
  NEWLINE@934..935 "\n"
  RBRACE@935..936 "}"
  NEWLINE@936..937 "\n"
  NEWLINE@937..938 "\n"
  IDENT_KW@938..944 "layout"
  LPAREN@944..945 "("
  IDENT_KW@945..952 "binding"
  WS@952..953 " "
  EQUAL@953..954 "="
  WS@954..955 " "
  DIGITS@955..956 "2"
  COMMA@956..957 ","
  IDENT_KW@957..963 "std430"
  RPAREN@963..964 ")"
  WS@964..965 " "
  IDENT_KW@965..971 "buffer"
  WS@971..972 " "
  IDENT_KW@972..982 "ssboElem01"
  NEWLINE@982..983 "\n"
  LBRACE@983..984 "{"
  NEWLINE@984..985 "\n"
  WS@985..989 "    "
  IDENT_KW@989..992 "int"
  WS@992..993 " "
  IDENT_KW@993..1001 "member01"
  SEMICOLON@1001..1002 ";"
  NEWLINE@1002..1003 "\n"
  WS@1003..1007 "    "
  IDENT_KW@1007..1010 "int"
  WS@1010..1011 " "
  IDENT_KW@1011..1022 "memberArr01"
  LBRACKET@1022..1023 "["
  DIGITS@1023..1024 "2"
  RBRACKET@1024..1025 "]"
  SEMICOLON@1025..1026 ";"
  NEWLINE@1026..1027 "\n"
  WS@1027..1031 "    "
  IDENT_KW@1031..1034 "int"
  WS@1034..1035 " "
  IDENT_KW@1035..1053 "memberUnsizedArr01"
  LBRACKET@1053..1054 "["
  RBRACKET@1054..1055 "]"
  SEMICOLON@1055..1056 ";"
  NEWLINE@1056..1057 "\n"
  RBRACE@1057..1058 "}"
  WS@1058..1059 " "
  IDENT_KW@1059..1072 "ssboStd430Arr"
  LBRACKET@1072..1073 "["
  DIGITS@1073..1074 "2"
  RBRACKET@1074..1075 "]"
  SEMICOLON@1075..1076 ";"
  NEWLINE@1076..1077 "\n"
  NEWLINE@1077..1078 "\n"
  COMMENT@1078..1149 "// if turns on EShRef ..."
  NEWLINE@1149..1150 "\n"
  IDENT_KW@1150..1156 "layout"
  LPAREN@1156..1157 "("
  IDENT_KW@1157..1164 "binding"
  WS@1164..1165 " "
  EQUAL@1165..1166 "="
  WS@1166..1167 " "
  DIGITS@1167..1168 "3"
  COMMA@1168..1169 ","
  IDENT_KW@1169..1175 "shared"
  RPAREN@1175..1176 ")"
  WS@1176..1177 " "
  IDENT_KW@1177..1183 "buffer"
  WS@1183..1184 " "
  IDENT_KW@1184..1194 "ssboElem02"
  NEWLINE@1194..1195 "\n"
  LBRACE@1195..1196 "{"
  NEWLINE@1196..1197 "\n"
  WS@1197..1201 "    "
  IDENT_KW@1201..1204 "int"
  WS@1204..1205 " "
  IDENT_KW@1205..1213 "member02"
  SEMICOLON@1213..1214 ";"
  NEWLINE@1214..1215 "\n"
  WS@1215..1219 "    "
  IDENT_KW@1219..1222 "int"
  WS@1222..1223 " "
  IDENT_KW@1223..1234 "memberArr02"
  LBRACKET@1234..1235 "["
  DIGITS@1235..1236 "2"
  RBRACKET@1236..1237 "]"
  SEMICOLON@1237..1238 ";"
  NEWLINE@1238..1239 "\n"
  WS@1239..1243 "    "
  IDENT_KW@1243..1246 "int"
  WS@1246..1247 " "
  IDENT_KW@1247..1265 "memberUnsizedArr02"
  LBRACKET@1265..1266 "["
  RBRACKET@1266..1267 "]"
  SEMICOLON@1267..1268 ";"
  NEWLINE@1268..1269 "\n"
  RBRACE@1269..1270 "}"
  WS@1270..1271 " "
  IDENT_KW@1271..1284 "ssboSharedArr"
  LBRACKET@1284..1285 "["
  DIGITS@1285..1286 "2"
  RBRACKET@1286..1287 "]"
  SEMICOLON@1287..1288 ";"
  NEWLINE@1288..1289 "\n"
  NEWLINE@1289..1290 "\n"
  PP_EXTENSION@1290..1347
    HASH@1290..1291 "#"
    IDENT_KW@1291..1300 "extension"
    WS@1300..1301 " "
    IDENT_KW@1301..1336 "GL_ARB_shader_storage ..."
    WS@1336..1337 " "
    COLON@1337..1338 ":"
    WS@1338..1339 " "
    IDENT_KW@1339..1346 "disable"
    NEWLINE@1346..1347 "\n"
  NEWLINE@1347..1348 "\n"
  IDENT_KW@1348..1354 "layout"
  LPAREN@1354..1355 "("
  IDENT_KW@1355..1362 "binding"
  WS@1362..1363 " "
  EQUAL@1363..1364 "="
  WS@1364..1365 " "
  DIGITS@1365..1366 "1"
  COMMA@1366..1367 ","
  IDENT_KW@1367..1373 "std430"
  RPAREN@1373..1374 ")"
  WS@1374..1375 " "
  IDENT_KW@1375..1381 "buffer"
  WS@1381..1382 " "
  IDENT_KW@1382..1392 "BufferFail"
  WS@1392..1393 " "
  COMMENT@1393..1445 "// Error std430 and \" ..."
  NEWLINE@1445..1446 "\n"
  LBRACE@1446..1447 "{"
  NEWLINE@1447..1448 "\n"
  WS@1448..1452 "    "
  IDENT_KW@1452..1455 "int"
  WS@1455..1456 " "
  IDENT_KW@1456..1462 "atom1i"
  SEMICOLON@1462..1463 ";"
  NEWLINE@1463..1464 "\n"
  RBRACE@1464..1465 "}"
  SEMICOLON@1465..1466 ";"
  NEWLINE@1466..1467 "\n"
