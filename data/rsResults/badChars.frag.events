Ok(EnterFile { file_id: FileId(1), path: "" })
Ok(Directive { directive: EventDirective { node: PP_IF@0..6, kind: If(If { file_id: FileId(1), body: PP_IF_EXPR@3..5 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(ERROR@NodeSpan { source_id: FileId(1), range: 3..5 } "þ") }))), pos: 0..6, current_file: Some(FileId(1)), path: None, file_override: None, line_number: 0, column: 0 }], source_id: FileId(1) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@6..13, kind: EndIf(EndIf), errors: [], source_id: FileId(1) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@13..25, kind: Error(Error { message: "AÿB" }), errors: [Located { inner: Processing(ErrorDirective { message: "AÿB" }), pos: 13..25, current_file: Some(FileId(1)), path: None, file_override: None, line_number: 2, column: 0 }], source_id: FileId(1) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@25..30, kind: If(If { file_id: FileId(1), body: PP_IF_EXPR@28..29 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(ERROR@NodeSpan { source_id: FileId(1), range: 28..29 } "\u{1}") }))), pos: 25..30, current_file: Some(FileId(1)), path: None, file_override: None, line_number: 3, column: 0 }], source_id: FileId(1) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@30..37, kind: EndIf(EndIf), errors: [], source_id: FileId(1) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(1), range: 37..40 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(1), range: 40..41 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(1), range: 41..42 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: ERROR@NodeSpan { source_id: FileId(1), range: 42..44 } "ÿ", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(1), range: 44..45 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@45..58, kind: Define(Define { name: "A", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@55..58 }), protected: false }), errors: [], source_id: FileId(1) }, masked: false })
