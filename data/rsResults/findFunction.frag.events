Ok(EnterFile { file_id: FileId(0), path: "../data/findFunction.frag", canonical_path: "/data/findFunction.frag" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 450, profile: Core, parsed_profile: Some(None) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@14..73, kind: Extension(Extension { name: Specific(Atom('GL_EXT_shader_explicit_arithmetic_types' type=dynamic)), behavior: Enable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 73..74 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 74..81 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 81..82 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 82..86 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 86..87 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 87..93 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 93..94 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 94..95 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 95..96 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 96..97 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 97..104 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 104..105 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 105..106 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 106..107 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 107..108 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 108..115 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 115..116 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 116..117 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 117..118 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 118..119 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 119..120 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 120..121 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 121..125 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 125..131 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 131..132 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 132..139 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 139..140 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 140..141 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 141..142 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: BAR@NodeSpan { source_id: FileId(0), range: 142..143 } "|", token_kind: BAR, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 143..144 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 144..145 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 145..146 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 146..147 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 147..148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 148..149 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 149..150 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 150..151 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 151..152 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 152..153 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 153..154 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 154..155 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 155..162 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 162..163 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 163..167 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 167..168 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 168..174 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 174..175 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 175..176 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 176..177 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 177..178 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 178..185 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 185..186 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 186..187 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 187..188 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 188..189 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 189..196 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 196..197 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 197..198 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 198..199 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 199..200 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 200..201 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 201..202 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 202..206 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 206..212 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 212..213 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 213..220 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 220..221 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 221..222 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 222..223 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: BAR@NodeSpan { source_id: FileId(0), range: 223..224 } "|", token_kind: BAR, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 224..225 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 225..226 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 226..227 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 227..228 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 228..229 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 229..230 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 230..231 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 231..232 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 232..233 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 233..234 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 234..235 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 235..236 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 236..243 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 243..244 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 244..248 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 248..249 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 249..256 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 256..257 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 257..258 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 258..259 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 259..260 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 260..267 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 267..268 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 268..269 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 269..270 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 270..271 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 271..278 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 278..279 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 279..280 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 280..281 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 281..282 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 282..283 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 283..284 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 284..288 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 288..294 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 294..295 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 295..302 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 302..303 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 303..304 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 304..305 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: SLASH@NodeSpan { source_id: FileId(0), range: 305..306 } "/", token_kind: SLASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 306..307 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 307..308 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 308..309 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 309..310 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 310..311 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 311..312 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 312..313 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 313..314 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 314..315 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 315..316 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 316..317 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 317..318 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 318..325 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 325..326 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 326..330 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 330..331 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 331..340 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 340..341 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 341..342 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 342..343 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 343..344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 344..353 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 353..354 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 354..355 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 355..356 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 356..357 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 357..366 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 366..367 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 367..368 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 368..369 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 369..370 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 370..371 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 371..372 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 372..376 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 376..382 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 382..383 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 383..390 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 390..391 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 391..392 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 392..393 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 393..394 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 394..395 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 395..396 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 396..397 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 397..398 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 398..399 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 399..400 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 400..401 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 401..402 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 402..403 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 403..404 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 404..405 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 405..406 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 406..413 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 413..414 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 414..418 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 418..419 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 419..428 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 428..429 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 429..430 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 430..431 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 431..432 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 432..439 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 439..440 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 440..441 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 441..442 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 442..443 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 443..452 } "float32_t", token_kind: TYPE_NAME(OTHER(Atom('float32_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 452..453 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 453..454 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 454..455 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 455..456 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 456..457 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 457..458 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 458..462 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 462..468 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 468..469 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 469..476 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 476..477 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 477..478 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 478..479 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DASH@NodeSpan { source_id: FileId(0), range: 479..480 } "-", token_kind: DASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 480..481 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 481..482 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 482..483 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 483..484 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 484..485 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 485..486 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 486..487 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 487..488 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 488..489 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 489..490 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 490..491 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 491..492 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 492..496 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 496..497 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 497..501 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 501..502 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 502..503 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 503..504 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 504..505 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 505..506 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 506..510 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 510..516 } "int8_t", token_kind: TYPE_NAME(OTHER(Atom('int8_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 516..518 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 518..519 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 519..520 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 520..521 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 521..525 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 525..532 } "int16_t", token_kind: TYPE_NAME(OTHER(Atom('int16_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 532..533 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 533..534 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 534..535 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 535..536 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 536..540 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 540..547 } "int32_t", token_kind: TYPE_NAME(OTHER(Atom('int32_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 547..548 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 548..549 } "z", token_kind: IDENT("z"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 549..550 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 550..551 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 551..555 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 555..562 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 562..563 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 563..564 } "w", token_kind: IDENT("w"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 564..565 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 565..566 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 566..570 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 570..579 } "float16_t", token_kind: TYPE_NAME(OTHER(Atom('float16_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 579..580 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 580..583 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 583..584 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 584..585 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 585..589 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 589..598 } "float64_t", token_kind: TYPE_NAME(OTHER(Atom('float64_t' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 598..599 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 599..602 } "f64", token_kind: IDENT("f64"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 602..603 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 603..604 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 604..608 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 608..615 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 615..616 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 616..618 } "b1", token_kind: IDENT("b1"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 618..619 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 619..620 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 620..621 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 621..625 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 625..626 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 626..627 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 627..628 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 628..629 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 629..630 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 630..631 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 631..632 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 632..633 } "z", token_kind: IDENT("z"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 633..634 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 634..635 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 635..636 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 636..640 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 640..647 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 647..648 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 648..650 } "b2", token_kind: IDENT("b2"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 650..651 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 651..652 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 652..653 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 653..657 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 657..658 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 658..659 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 659..660 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 660..661 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 661..662 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 662..663 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 663..664 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 664..665 } "z", token_kind: IDENT("z"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 665..666 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 666..667 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 667..668 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 668..674 } "// tie", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 674..675 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 675..679 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 679..686 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 686..687 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 687..689 } "b3", token_kind: IDENT("b3"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 689..690 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 690..691 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 691..692 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 692..696 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 696..697 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 697..698 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 698..699 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 699..700 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 700..701 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 701..702 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 702..703 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 703..704 } "w", token_kind: IDENT("w"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 704..705 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 705..706 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 706..707 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 707..718 } "// No match", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 718..719 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 719..723 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 723..730 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 730..731 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 731..733 } "b4", token_kind: IDENT("b4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 733..734 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 734..735 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 735..736 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 736..740 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 740..741 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 741..742 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 742..743 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 743..744 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 744..745 } "z", token_kind: IDENT("z"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 745..746 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 746..747 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 747..750 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 750..751 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 751..752 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 752..753 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 753..764 } "// No match", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 764..765 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 765..769 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 769..776 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 776..777 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 777..779 } "b5", token_kind: IDENT("b5"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 779..780 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 780..781 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 781..782 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 782..786 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 786..787 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 787..788 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 788..789 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 789..790 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 790..791 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 791..792 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 792..793 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 793..796 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 796..797 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 797..798 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 798..799 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 799..803 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 803..810 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 810..811 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 811..813 } "b7", token_kind: IDENT("b7"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 813..814 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 814..815 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 815..816 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 816..820 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 820..821 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 821..824 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 824..825 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 825..826 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 826..829 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 829..830 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 830..831 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 831..832 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 832..833 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 833..834 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 834..835 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..839 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 839..846 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 846..847 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 847..849 } "b8", token_kind: IDENT("b8"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 849..850 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 850..851 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 851..852 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 852..856 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 856..857 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 857..860 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 860..861 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 861..862 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 862..865 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 865..866 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 866..867 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 867..870 } "f64", token_kind: IDENT("f64"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 870..871 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 871..872 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 872..873 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 873..884 } "// No match", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 884..885 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 885..889 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 889..896 } "int64_t", token_kind: TYPE_NAME(OTHER(Atom('int64_t' type=inline))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 896..897 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 897..899 } "b9", token_kind: IDENT("b9"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 899..900 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 900..901 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 901..902 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 902..906 } "func", token_kind: IDENT("func"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 906..907 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 907..910 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 910..911 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 911..912 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 912..913 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 913..914 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 914..915 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 915..918 } "f16", token_kind: IDENT("f16"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 918..919 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 919..920 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 920..921 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 921..927 } "// tie", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 927..928 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 928..929 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 929..930 } "\n", token_kind: WS, state: Active })
