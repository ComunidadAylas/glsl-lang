Ok(EnterFile { file_id: FileId(0), path: "../data/glsl.es320.subgroupVote.comp", canonical_path: "/data/glsl.es320.subgroupVote.comp" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..17, kind: Version(Version { number: 320, profile: Es, parsed_profile: Some(Es) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 17..19 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@19..67, kind: Extension(Extension { name: Specific(Atom('GL_KHR_shader_subgroup_vote' type=dynamic)), behavior: Enable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 67..69 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 69..75 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 75..76 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 76..77 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 77..89 } "local_size_x", token_kind: IDENT("local_size_x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 89..90 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 90..91 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 91..92 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 92..93 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 93..94 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 94..95 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 95..107 } "local_size_y", token_kind: IDENT("local_size_y"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 107..108 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 108..109 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 109..110 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 110..111 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 111..112 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 112..113 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 113..125 } "local_size_z", token_kind: IDENT("local_size_z"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 125..126 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 126..127 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 127..128 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 128..129 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 129..130 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 130..131 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 131..133 } "in", token_kind: IN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 133..134 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 134..136 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 136..138 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 138..144 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 144..145 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 145..152 } "binding", token_kind: IDENT("binding"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 152..153 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 153..154 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 154..155 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 155..156 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 156..157 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 157..158 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 158..164 } "buffer", token_kind: BUFFER, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 164..165 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 165..172 } "Buffers", token_kind: IDENT("Buffers"), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 172..174 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 174..175 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 175..177 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 177..181 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 181..185 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 185..187 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 187..189 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 189..190 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 190..192 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 192..196 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 196..201 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 201..202 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 202..204 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 204..205 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 205..207 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 207..211 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 211..216 } "uvec4", token_kind: TYPE_NAME(UVEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 216..217 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 217..219 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 219..220 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 220..222 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 222..226 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 226..229 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 229..230 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 230..231 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 231..232 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 232..234 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 234..235 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 235..236 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 236..240 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 240..241 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 241..242 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 242..243 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 243..244 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 244..246 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 246..248 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 248..252 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 252..253 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 253..257 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 257..258 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 258..259 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 259..261 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 261..262 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 262..264 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 264..268 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 268..272 } "uint", token_kind: TYPE_NAME(UINT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 272..273 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 273..283 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 283..284 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 284..285 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 285..286 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 286..287 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 287..310 } "gl_SubgroupInvocationID", token_kind: IDENT("gl_SubgroupInvocationID"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 310..311 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 311..312 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 312..313 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 313..328 } "gl_SubgroupSize", token_kind: IDENT("gl_SubgroupSize"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 328..329 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 329..330 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PERCENT@NodeSpan { source_id: FileId(0), range: 330..331 } "%", token_kind: PERCENT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 331..332 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 332..334 } "4u", token_kind: UINT_CONST(4), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 334..335 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 335..337 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 337..339 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 339..343 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 343..345 } "if", token_kind: IF, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 345..346 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 346..347 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 347..358 } "subgroupAll", token_kind: IDENT("subgroupAll"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 358..359 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 359..363 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 363..364 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 364..365 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 365..366 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 366..367 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 367..368 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 368..369 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 369..370 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 370..371 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 371..372 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 372..373 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 373..374 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 374..376 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 376..380 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 380..381 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 381..383 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 383..391 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 391..395 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 395..396 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 396..397 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 397..398 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 398..399 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 399..400 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 400..401 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 401..402 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 402..403 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 403..406 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 406..407 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 407..423 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 423..424 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 424..428 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 428..429 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 429..430 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 430..431 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 431..432 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 432..434 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 434..435 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 435..436 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 436..437 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 437..438 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 438..439 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 439..441 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 441..449 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 449..453 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 453..454 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 454..455 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 455..456 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 456..457 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 457..458 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 458..459 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 459..460 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 460..461 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 461..464 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 464..465 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 465..481 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 481..482 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 482..486 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 486..487 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 487..488 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 488..489 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 489..490 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 490..492 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 492..493 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 493..495 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 495..496 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 496..497 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 497..498 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 498..500 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 500..508 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 508..512 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 512..513 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 513..514 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 514..515 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 515..516 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 516..517 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 517..518 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 518..519 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 519..520 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 520..523 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 523..524 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 524..540 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 540..541 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 541..545 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 545..546 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 546..547 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 547..548 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 548..549 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 549..551 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 551..552 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 552..555 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 555..556 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 556..557 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 557..558 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 558..560 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 560..568 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 568..572 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 572..573 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 573..574 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 574..575 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 575..576 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 576..577 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 577..578 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 578..579 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 579..580 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 580..583 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 583..584 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 584..600 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 600..601 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 601..605 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 605..606 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 606..607 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 607..608 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 608..609 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 609..611 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 611..612 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 612..613 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 613..614 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 614..616 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 616..618 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 618..626 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 626..630 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 630..631 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 631..632 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 632..633 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 633..634 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 634..635 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 635..636 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 636..637 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 637..638 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 638..641 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 641..642 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 642..658 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 658..659 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 659..663 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 663..664 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 664..665 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 665..666 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 666..667 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 667..669 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 669..670 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 670..671 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 671..672 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 672..673 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 673..674 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 674..676 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 676..684 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 684..688 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 688..689 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 689..690 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 690..691 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 691..692 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 692..693 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 693..694 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 694..695 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 695..696 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 696..699 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 699..700 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 700..716 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 716..717 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 717..721 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 721..722 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 722..723 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 723..724 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 724..725 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 725..727 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 727..728 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 728..730 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 730..731 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 731..732 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 732..733 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 733..735 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 735..743 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 743..747 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 747..748 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 748..749 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 749..750 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 750..751 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 751..752 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 752..753 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 753..754 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 754..755 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 755..758 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 758..759 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 759..775 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 775..776 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 776..780 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 780..781 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 781..782 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 782..783 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 783..784 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 784..786 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 786..787 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 787..790 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 790..791 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 791..792 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 792..793 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 793..795 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 795..803 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 803..807 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 807..808 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 808..809 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 809..810 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 810..811 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 811..812 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 812..813 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 813..814 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 814..815 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 815..818 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 818..819 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 819..835 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 835..836 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 836..840 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 840..841 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 841..842 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 842..843 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 843..844 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 844..846 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 846..847 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 847..848 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 848..849 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 849..851 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 851..853 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 853..861 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 861..865 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 865..866 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 866..867 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 867..868 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 868..869 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 869..870 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 870..871 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 871..872 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 872..873 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 873..876 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 876..877 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 877..893 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 893..894 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 894..898 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 898..899 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 899..900 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 900..901 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 901..902 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 902..904 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 904..905 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 905..906 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 906..907 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 907..908 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 908..909 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 909..911 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 911..919 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 919..923 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 923..924 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 924..925 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 925..926 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 926..927 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 927..928 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 928..929 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 929..930 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 930..931 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 931..934 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 934..935 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 935..951 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 951..952 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 952..956 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 956..957 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 957..958 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 958..959 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 959..960 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 960..962 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 962..963 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 963..965 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 965..966 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 966..967 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 967..968 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 968..970 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 970..978 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 978..982 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 982..983 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 983..984 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 984..985 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 985..986 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 986..987 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 987..988 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 988..989 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 989..990 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 990..993 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 993..994 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 994..1010 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1010..1011 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1011..1015 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1015..1016 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1016..1017 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1017..1018 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1018..1019 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1019..1021 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1021..1022 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1022..1025 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1025..1026 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1026..1027 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1027..1028 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1028..1030 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1030..1038 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1038..1042 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1042..1043 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1043..1044 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1044..1045 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1045..1046 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1046..1047 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1047..1048 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1048..1049 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1049..1050 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1050..1053 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1053..1054 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1054..1070 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1070..1071 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1071..1075 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1075..1076 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1076..1077 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1077..1078 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1078..1079 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1079..1081 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1081..1082 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1082..1083 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1083..1084 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1084..1086 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1086..1090 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1090..1091 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1091..1093 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1093..1097 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1097..1101 } "else", token_kind: ELSE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1101..1102 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1102..1104 } "if", token_kind: IF, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1104..1105 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1105..1106 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1106..1117 } "subgroupAny", token_kind: IDENT("subgroupAny"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1117..1118 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1118..1122 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1122..1123 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1123..1124 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1124..1125 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1125..1126 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1126..1127 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1127..1128 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1128..1129 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1129..1130 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1130..1131 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1131..1132 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1132..1133 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1133..1135 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1135..1139 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 1139..1140 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1140..1142 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1142..1150 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1150..1154 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1154..1155 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1155..1156 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1156..1157 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1157..1158 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1158..1159 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1159..1160 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1160..1161 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1161..1162 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1162..1165 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1165..1166 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1166..1169 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1169..1170 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1170..1186 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1186..1187 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1187..1191 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1191..1192 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1192..1193 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1193..1194 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1194..1195 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1195..1197 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1197..1198 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1198..1199 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1199..1200 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1200..1201 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1201..1202 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1202..1203 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1203..1204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1204..1205 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1205..1206 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1206..1207 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1207..1209 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1209..1217 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1217..1221 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1221..1222 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1222..1223 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1223..1224 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1224..1225 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1225..1226 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1227 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1227..1228 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1228..1229 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1229..1232 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1232..1233 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1233..1238 } "ivec2", token_kind: TYPE_NAME(IVEC2), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1238..1239 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1239..1255 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1255..1256 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1256..1264 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1264..1265 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1265..1269 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1269..1270 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1270..1271 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1271..1272 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1272..1273 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1273..1275 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1275..1276 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1276..1278 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1278..1279 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1279..1280 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1280..1285 } "ivec2", token_kind: TYPE_NAME(IVEC2), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1285..1286 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1286..1287 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1287..1288 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1288..1289 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1289..1290 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1290..1291 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1291..1292 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1292..1293 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1293..1295 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1295..1303 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1303..1307 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1307..1308 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1308..1309 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1309..1310 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1310..1311 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1311..1312 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1312..1313 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1313..1314 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1314..1315 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1315..1318 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1318..1319 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1319..1324 } "ivec3", token_kind: TYPE_NAME(IVEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1324..1325 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1325..1341 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1341..1342 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1342..1350 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1350..1351 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1351..1355 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1355..1356 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1356..1357 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1357..1358 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1358..1359 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1359..1361 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1361..1362 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1362..1365 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1365..1366 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1366..1367 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1367..1372 } "ivec3", token_kind: TYPE_NAME(IVEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1372..1373 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1373..1374 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1374..1375 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1375..1376 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1376..1377 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1377..1378 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1378..1379 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1379..1380 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1380..1382 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1382..1390 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1390..1394 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1394..1395 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1395..1396 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1396..1397 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1397..1398 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1398..1399 } "r", token_kind: IDENT("r"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1399..1400 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1400..1401 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1401..1402 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1402..1405 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1405..1406 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1406..1411 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1411..1412 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1412..1428 } "subgroupAllEqual", token_kind: IDENT("subgroupAllEqual"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1428..1429 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1429..1437 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1437..1438 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1438..1442 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1442..1443 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1443..1444 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1444..1445 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1445..1446 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1446..1448 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1448..1449 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1449..1450 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1450..1455 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1455..1456 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1456..1457 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1457..1458 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1458..1459 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1459..1460 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1460..1461 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1461..1462 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1462..1463 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1463..1465 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1465..1469 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1469..1470 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1470..1472 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1472..1473 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1473..1475 } "\r\n", token_kind: WS, state: Active })
