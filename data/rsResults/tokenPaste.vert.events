Ok(EnterFile { file_id: FileId(0), path: "../data/tokenPaste.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 450, profile: Core, parsed_profile: Some(None) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 14..73 } "// side test verifies ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 73..74 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@74..103, kind: Define(Define { name: "bear", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@87..102 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@103..121, kind: Define(Define { name: "mmmB", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@116..120 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@121..139, kind: Define(Define { name: "mmmA", kind: Function(DefineFunction { args: ["a"], tokens: PP_DEFINE_BODY@137..138 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 139..142 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 142..143 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 143..153 } "SecondExpansion", token_kind: IDENT("SecondExpansion"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 153..154 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 154..174 } "                    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 174..234 } "// mmmB -> bear, and  ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 234..235 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 235..236 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 236..281 } "// pasting skips the  ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 281..282 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@282..320, kind: Define(Define { name: "mmcatmmdog", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@301..319 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@320..338, kind: Define(Define { name: "mmcat", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@334..337 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@338..356, kind: Define(Define { name: "mmdog", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@352..355 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@356..379, kind: Define(Define { name: "mmp", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@373..378 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 379..382 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 382..383 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 383..400 } "PostPasteExpansion", token_kind: IDENT("PostPasteExpansion"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 400..401 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 401..414 } "             ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 414..475 } "// mmcat/mmdog not ex ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 475..476 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 476..477 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 477..495 } "// multi-token pre", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 495..496 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@496..527, kind: Define(Define { name: "mmtokpastepre", kind: Function(DefineFunction { args: ["a"], tokens: PP_DEFINE_BODY@521..526 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 527..551 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 527..551 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 527..551 } "foo27", token_kind: IDENT("foo27"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 551..552 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 552..562 } "          ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 562..594 } "// should declare \"fl ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 594..595 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 595..596 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 596..615 } "// multi-token post", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 615..616 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@616..650, kind: Define(Define { name: "mmtokpastepost", kind: Function(DefineFunction { args: ["a"], tokens: PP_DEFINE_BODY@642..649 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 650..683 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 650..683 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 650..683 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 650..683 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 650..683 } "foo155", token_kind: IDENT("foo155"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 683..684 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 684..685 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 685..726 } "// should declare \"un ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 726..727 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 727..728 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 728..749 } "// non-first argument", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 749..750 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@750..783, kind: Define(Define { name: "foo", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@762..782 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@783..798, kind: Define(Define { name: "semi", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@796..797 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@798..826, kind: Define(Define { name: "bothpaste", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@821..825 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 826..831 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 831..832 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 832..851 } "foo719", token_kind: IDENT("foo719"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 851..852 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 852..862 } "          ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 862..895 } "// should declare \"fl ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 895..896 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@896..929, kind: Define(Define { name: "secpaste", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@918..928 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 929..962 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 929..962 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 929..962 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 929..962 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 929..962 } "barfoo", token_kind: IDENT("barfoo"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 929..962 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 929..962 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 962..965 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 965..1006 } "// should declare \"un ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1006..1007 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1007..1008 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1008..1018 } "// no args", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1018..1019 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1019..1041, kind: Define(Define { name: "noArg", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1033..1040 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1041..1046 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1046..1047 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1047..1054 } "argless", token_kind: IDENT("argless"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1054..1055 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1055..1056 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1056..1057 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1057..1072 } "// bad location", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1072..1073 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1073..1095, kind: Define(Define { name: "bad1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1086..1094 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(InvalidTokenPaste { token: None }), pos: 1095..1099, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 37, column: 0 }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1099..1100 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1100..1103 } "dc1", token_kind: IDENT("dc1"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1103..1104 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1104..1105 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1105..1127, kind: Define(Define { name: "bad2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1118..1126 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(InvalidTokenPaste { token: Some("float ##") }), pos: 1127..1131, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 39, column: 0 }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1131..1132 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1132..1135 } "dc2", token_kind: IDENT("dc2"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1135..1136 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1136..1137 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1137..1138 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1138..1152 } "// multiple ##", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1152..1153 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1153..1205, kind: Define(Define { name: "multiPaste", kind: Function(DefineFunction { args: ["a", "b", "c"], tokens: PP_DEFINE_BODY@1181..1204 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1205..1229 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1205..1229 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1205..1229 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1205..1229 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1205..1229 } "foo875", token_kind: IDENT("foo875"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1229..1230 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1230..1231 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1231..1232 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1232..1243 } "// too long", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1243..1244 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1244..1274, kind: Define(Define { name: "simplePaste", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@1269..1273 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1274..1296 } "// 1020 + 5 characters", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1296..1297 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1297..1302 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1302..1303 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1303..2343 } "ABCDEF0123456789ABCDE ...", token_kindstate: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2343..2344 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2344..2345 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2345..2346 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2346..2364 } "// non-identifiers", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2364..2365 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2365..2368 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2368..2369 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2369..2370 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2370..2371 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2371..2372 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2372..2373 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2373..2391 } "1112", token_kind: INT_CONST(1112), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2391..2392 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2392..2393 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2393..2394 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2394..2423 } "// should work in #if ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2423..2424 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2424..2443, kind: Define(Define { name: "seahorse", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2441..2442 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2443..2461, kind: Define(Define { name: "sealion", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2459..2460 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2461..2507, kind: Define(Define { name: "marine_animal", kind: Function(DefineFunction { args: ["suffix"], tokens: PP_DEFINE_BODY@2491..2506 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2507..2508 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@2508..2548, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@2512..2532 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2548..2555 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2555..2556 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2556..2561 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2561..2562 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2562..2574 } "seahorse_var", token_kind: IDENT("seahorse_var"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2574..2575 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2575..2576 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@2576..2583, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@2583..2623, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@2587..2607 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2623..2630 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2630..2631 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2631..2636 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2636..2637 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2637..2648 } "sealion_var", token_kind: IDENT("sealion_var"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2648..2649 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2649..2650 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@2650..2657, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2657..2658 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2658..2670 } "// operators", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2670..2671 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2671..2701, kind: Define(Define { name: "MAKE_OP", kind: Function(DefineFunction { args: ["L", "R"], tokens: PP_DEFINE_BODY@2693..2699 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2701..2706 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2706..2707 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2707..2710 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2710..2711 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2711..2714 } "aop", token_kind: IDENT("aop"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2714..2715 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2715..2716 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2716..2717 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2717..2719 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2719..2720 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2720..2722 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2722..2727 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2727..2728 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2728..2731 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2731..2732 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2732..2735 } "bop", token_kind: IDENT("bop"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2735..2736 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2736..2737 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2737..2738 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2738..2739 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2739..2740 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2740..2742 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2742..2745 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2745..2746 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2746..2749 } "cop", token_kind: IDENT("cop"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2749..2750 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2750..2751 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2751..2752 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2752..2755 } "aop", token_kind: IDENT("aop"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2755..2756 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LEFT_OP@NodeSpan { source_id: FileId(0), range: 2756..2769 } "<<", token_kind: LEFT_OP, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2769..2770 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2770..2773 } "bop", token_kind: IDENT("bop"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2773..2774 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2774..2776 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2776..2780 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2780..2781 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2781..2784 } "dop", token_kind: IDENT("dop"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2784..2785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2785..2786 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2786..2787 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2787..2790 } "aop", token_kind: IDENT("aop"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2790..2791 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: NE_OP@NodeSpan { source_id: FileId(0), range: 2791..2803 } "!=", token_kind: NE_OP, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2803..2804 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2804..2807 } "bop", token_kind: IDENT("bop"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2807..2808 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2808..2810 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2810..2812 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2812..2851, kind: Define(Define { name: "MAKE_OP3", kind: Function(DefineFunction { args: ["L", "M", "R"], tokens: PP_DEFINE_BODY@2838..2849 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2851..2853 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2853..2857 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2857..2858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2858..2861 } "ShouldntExpandToThis", token_kind: IDENT("ShouldntExpandToThis"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2861..2862 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2862..2863 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2863..2865 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 2865..2866 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2866..2868 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2868..2872 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2872..2875 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2875..2876 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2876..2877 } "e", token_kind: IDENT("e"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2877..2878 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2878..2879 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2879..2880 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2880..2882 } "16", token_kind: INT_CONST(16), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2882..2883 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2883..2885 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2885..2889 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2889..2890 } "e", token_kind: IDENT("e"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2890..2891 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: RIGHT_ASSIGN@NodeSpan { source_id: FileId(0), range: 2891..2906 } ">>=", token_kind: RIGHT_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2906..2907 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2907..2908 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2908..2909 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2909..2911 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2911..2913 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2913..2917 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2917..2940 } "// recovery from bad op", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2940..2942 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2942..2946 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2946..2950 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2950..2951 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2951..2952 } "f", token_kind: IDENT("f"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2952..2953 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2953..2954 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2954..2955 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2955..2956 } "e", token_kind: IDENT("e"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2956..2957 } " ", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Processing(InvalidTokenPaste { token: Some(">!") }), pos: 2957..2969, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 80, column: 15 }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2969..2970 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2970..2971 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2971..2972 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2972..2974 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 2974..2975 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2975..2976 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2976..2977 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2977..3027 } "// arguments: should  ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3027..3028 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3028..3053, kind: Define(Define { name: "M_NEST", kind: Function(DefineFunction { args: ["q"], tokens: PP_DEFINE_BODY@3046..3051 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3053..3086, kind: Define(Define { name: "M_OUTER", kind: Function(DefineFunction { args: ["p"], tokens: PP_DEFINE_BODY@3072..3084 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3086..3093 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3093..3094 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3094..3111 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3094..3111 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3094..3111 } "argPaste2", token_kind: IDENT("argPaste2"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 3111..3112 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3112..3114 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 3114..3158 } "// should make 'unifo ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3158..3160 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3160..3194, kind: Define(Define { name: "M_NEST2", kind: Function(DefineFunction { args: ["q"], tokens: PP_DEFINE_BODY@3179..3192 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3194..3232, kind: Define(Define { name: "M_OUTER2", kind: Function(DefineFunction { args: ["p"], tokens: PP_DEFINE_BODY@3214..3230 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3232..3239 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3239..3240 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3240..3258 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3240..3258 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3240..3258 } "argPaste20suff", token_kind: IDENT("argPaste20suff"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 3258..3259 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3259..3261 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3261..3263 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3263..3281, kind: Define(Define { name: "rec", kind: Function(DefineFunction { args: ["x"], tokens: PP_DEFINE_BODY@3277..3279 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(InvalidTokenPaste { token: None }), pos: 3281..3291, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 93, column: 0 }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3291..3293 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3293..3295 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3295..3313, kind: Define(Define { name: "bax", kind: Function(DefineFunction { args: ["bay"], tokens: PP_DEFINE_BODY@3311..3311 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3313..3335, kind: Define(Define { name: "baz", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3325..3333 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "bax" }), pos: 3335..3338, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 97, column: 0 }, masked: false })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 3335..3338 } "(", token_kind: LPAREN, state: Active })
Ok(Error { error: Located { inner: Processing(InvalidTokenPaste { token: Some("/)") }), pos: 3335..3338, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 97, column: 0 }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3338..3340 } "\r\n", token_kind: WS, state: Active })
