ROOT@0..2104
  PP_VERSION@0..14
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "460"
    NEWLINE@12..14 "\r\n"
  NEWLINE@14..16 "\r\n"
  IDENT_KW@16..19 "out"
  WS@19..20 " "
  IDENT_KW@20..24 "vec4"
  WS@24..25 " "
  IDENT_KW@25..26 "o"
  SEMICOLON@26..27 ";"
  NEWLINE@27..29 "\r\n"
  NEWLINE@29..31 "\r\n"
  COMMENT@31..88 "// default uniforms w ..."
  NEWLINE@88..90 "\r\n"
  IDENT_KW@90..97 "uniform"
  WS@97..98 " "
  IDENT_KW@98..102 "vec4"
  WS@102..103 " "
  IDENT_KW@103..104 "a"
  SEMICOLON@104..105 ";"
  NEWLINE@105..107 "\r\n"
  IDENT_KW@107..114 "uniform"
  WS@114..115 " "
  IDENT_KW@115..119 "vec2"
  WS@119..120 " "
  IDENT_KW@120..121 "b"
  WS@121..122 " "
  EQUAL@122..123 "="
  WS@123..124 " "
  IDENT_KW@124..128 "vec2"
  LPAREN@128..129 "("
  DIGITS@129..130 "0"
  COMMA@130..131 ","
  WS@131..132 " "
  DIGITS@132..133 "0"
  RPAREN@133..134 ")"
  SEMICOLON@134..135 ";"
  WS@135..147 "            "
  COMMENT@147..177 "// initializer will b ..."
  NEWLINE@177..179 "\r\n"
  IDENT_KW@179..185 "layout"
  LPAREN@185..186 "("
  IDENT_KW@186..194 "location"
  WS@194..195 " "
  EQUAL@195..196 "="
  WS@196..197 " "
  DIGITS@197..198 "0"
  RPAREN@198..199 ")"
  WS@199..200 " "
  IDENT_KW@200..207 "uniform"
  WS@207..208 " "
  IDENT_KW@208..212 "vec2"
  WS@212..213 " "
  IDENT_KW@213..214 "c"
  SEMICOLON@214..215 ";"
  WS@215..219 "    "
  COMMENT@219..256 "// location qualifier ..."
  NEWLINE@256..258 "\r\n"
  IDENT_KW@258..265 "uniform"
  WS@265..266 " "
  IDENT_KW@266..270 "vec4"
  WS@270..271 " "
  IDENT_KW@271..272 "d"
  LBRACKET@272..273 "["
  DIGITS@273..275 "10"
  RBRACKET@275..276 "]"
  SEMICOLON@276..277 ";"
  NEWLINE@277..279 "\r\n"
  IDENT_KW@279..286 "uniform"
  WS@286..287 " "
  IDENT_KW@287..293 "struct"
  WS@293..294 " "
  IDENT_KW@294..295 "e"
  WS@295..296 " "
  LBRACE@296..297 "{"
  WS@297..319 "                      "
  NEWLINE@319..321 "\r\n"
  WS@321..325 "    "
  IDENT_KW@325..329 "vec2"
  WS@329..330 " "
  IDENT_KW@330..331 "x"
  SEMICOLON@331..332 ";"
  NEWLINE@332..334 "\r\n"
  WS@334..338 "    "
  IDENT_KW@338..343 "float"
  WS@343..344 " "
  IDENT_KW@344..345 "y"
  SEMICOLON@345..346 ";"
  NEWLINE@346..348 "\r\n"
  WS@348..352 "    "
  IDENT_KW@352..356 "uint"
  WS@356..357 " "
  IDENT_KW@357..358 "z"
  SEMICOLON@358..359 ";"
  NEWLINE@359..361 "\r\n"
  RBRACE@361..362 "}"
  WS@362..363 " "
  IDENT_KW@363..376 "structUniform"
  SEMICOLON@376..377 ";"
  WS@377..378 " "
  NEWLINE@378..380 "\r\n"
  NEWLINE@380..382 "\r\n"
  COMMENT@382..436 "// opaque types will  ..."
  NEWLINE@436..438 "\r\n"
  IDENT_KW@438..445 "uniform"
  WS@445..446 " "
  IDENT_KW@446..455 "sampler2D"
  WS@455..456 " "
  IDENT_KW@456..458 "t1"
  SEMICOLON@458..459 ";"
  NEWLINE@459..461 "\r\n"
  NEWLINE@461..463 "\r\n"
  COMMENT@463..521 "// shared and packed  ..."
  NEWLINE@521..523 "\r\n"
  IDENT_KW@523..529 "layout"
  LPAREN@529..530 "("
  IDENT_KW@530..536 "shared"
  RPAREN@536..537 ")"
  WS@537..538 " "
  IDENT_KW@538..545 "uniform"
  WS@545..546 " "
  IDENT_KW@546..558 "UniformBlock"
  WS@558..559 " "
  LBRACE@559..560 "{"
  NEWLINE@560..562 "\r\n"
  WS@562..566 "    "
  IDENT_KW@566..571 "float"
  WS@571..572 " "
  IDENT_KW@572..573 "j"
  SEMICOLON@573..574 ";"
  NEWLINE@574..576 "\r\n"
  WS@576..580 "    "
  IDENT_KW@580..584 "vec4"
  WS@584..585 " "
  IDENT_KW@585..586 "k"
  SEMICOLON@586..587 ";"
  NEWLINE@587..589 "\r\n"
  RBRACE@589..590 "}"
  SEMICOLON@590..591 ";"
  NEWLINE@591..593 "\r\n"
  NEWLINE@593..595 "\r\n"
  IDENT_KW@595..601 "layout"
  LPAREN@601..602 "("
  IDENT_KW@602..608 "packed"
  RPAREN@608..609 ")"
  WS@609..610 " "
  IDENT_KW@610..616 "buffer"
  WS@616..617 " "
  IDENT_KW@617..628 "BufferBlock"
  WS@628..629 " "
  LBRACE@629..630 "{"
  NEWLINE@630..632 "\r\n"
  WS@632..636 "    "
  IDENT_KW@636..641 "float"
  WS@641..642 " "
  IDENT_KW@642..643 "j"
  SEMICOLON@643..644 ";"
  NEWLINE@644..646 "\r\n"
  WS@646..650 "    "
  IDENT_KW@650..654 "vec4"
  WS@654..655 " "
  IDENT_KW@655..656 "k"
  SEMICOLON@656..657 ";"
  NEWLINE@657..659 "\r\n"
  RBRACE@659..660 "}"
  WS@660..661 " "
  IDENT_KW@661..675 "bufferInstance"
  SEMICOLON@675..676 ";"
  NEWLINE@676..678 "\r\n"
  NEWLINE@678..680 "\r\n"
  COMMENT@680..751 "// atomic_uint will b ..."
  NEWLINE@751..753 "\r\n"
  IDENT_KW@753..759 "layout"
  LPAREN@759..760 "("
  IDENT_KW@760..767 "binding"
  WS@767..768 " "
  EQUAL@768..769 "="
  WS@769..770 " "
  DIGITS@770..771 "0"
  RPAREN@771..772 ")"
  WS@772..773 " "
  IDENT_KW@773..780 "uniform"
  WS@780..781 " "
  IDENT_KW@781..792 "atomic_uint"
  WS@792..793 " "
  IDENT_KW@793..801 "counter1"
  SEMICOLON@801..802 ";"
  WS@802..803 " "
  COMMENT@803..821 "// offset not used"
  NEWLINE@821..823 "\r\n"
  IDENT_KW@823..829 "layout"
  LPAREN@829..830 "("
  IDENT_KW@830..837 "binding"
  WS@837..838 " "
  EQUAL@838..839 "="
  WS@839..840 " "
  DIGITS@840..841 "0"
  RPAREN@841..842 ")"
  WS@842..843 " "
  IDENT_KW@843..850 "uniform"
  WS@850..851 " "
  IDENT_KW@851..862 "atomic_uint"
  WS@862..863 " "
  IDENT_KW@863..871 "counter2"
  SEMICOLON@871..872 ";"
  WS@872..873 " "
  COMMENT@873..891 "// offset not used"
  NEWLINE@891..893 "\r\n"
  IDENT_KW@893..899 "layout"
  LPAREN@899..900 "("
  IDENT_KW@900..907 "binding"
  WS@907..908 " "
  EQUAL@908..909 "="
  WS@909..910 " "
  DIGITS@910..911 "1"
  RPAREN@911..912 ")"
  WS@912..913 " "
  IDENT_KW@913..920 "uniform"
  WS@920..921 " "
  IDENT_KW@921..932 "atomic_uint"
  WS@932..933 " "
  IDENT_KW@933..941 "counter3"
  SEMICOLON@941..942 ";"
  WS@942..943 " "
  COMMENT@943..961 "// offset not used"
  NEWLINE@961..963 "\r\n"
  NEWLINE@963..965 "\r\n"
  COMMENT@965..1050 "// atomic counter fun ..."
  NEWLINE@1050..1052 "\r\n"
  IDENT_KW@1052..1056 "uint"
  WS@1056..1057 " "
  IDENT_KW@1057..1060 "bar"
  LPAREN@1060..1061 "("
  RPAREN@1061..1062 ")"
  WS@1062..1063 " "
  LBRACE@1063..1064 "{"
  NEWLINE@1064..1066 "\r\n"
  WS@1066..1070 "    "
  IDENT_KW@1070..1074 "uint"
  WS@1074..1075 " "
  IDENT_KW@1075..1076 "j"
  WS@1076..1077 " "
  EQUAL@1077..1078 "="
  WS@1078..1079 " "
  DIGITS@1079..1080 "0"
  SEMICOLON@1080..1081 ";"
  NEWLINE@1081..1083 "\r\n"
  WS@1083..1087 "    "
  IDENT_KW@1087..1088 "j"
  WS@1088..1089 " "
  EQUAL@1089..1090 "="
  WS@1090..1091 " "
  IDENT_KW@1091..1113 "atomicCounterIncrement"
  LPAREN@1113..1114 "("
  IDENT_KW@1114..1122 "counter1"
  RPAREN@1122..1123 ")"
  SEMICOLON@1123..1124 ";"
  NEWLINE@1124..1126 "\r\n"
  WS@1126..1130 "    "
  IDENT_KW@1130..1131 "j"
  WS@1131..1132 " "
  EQUAL@1132..1133 "="
  WS@1133..1134 " "
  IDENT_KW@1134..1156 "atomicCounterDecrement"
  LPAREN@1156..1157 "("
  IDENT_KW@1157..1165 "counter1"
  RPAREN@1165..1166 ")"
  SEMICOLON@1166..1167 ";"
  NEWLINE@1167..1169 "\r\n"
  WS@1169..1173 "    "
  IDENT_KW@1173..1174 "j"
  WS@1174..1175 " "
  EQUAL@1175..1176 "="
  WS@1176..1177 " "
  IDENT_KW@1177..1190 "atomicCounter"
  LPAREN@1190..1191 "("
  IDENT_KW@1191..1199 "counter1"
  RPAREN@1199..1200 ")"
  SEMICOLON@1200..1201 ";"
  NEWLINE@1201..1203 "\r\n"
  NEWLINE@1203..1205 "\r\n"
  WS@1205..1209 "    "
  IDENT_KW@1209..1210 "j"
  WS@1210..1211 " "
  EQUAL@1211..1212 "="
  WS@1212..1213 " "
  IDENT_KW@1213..1229 "atomicCounterAdd"
  LPAREN@1229..1230 "("
  IDENT_KW@1230..1238 "counter1"
  COMMA@1238..1239 ","
  WS@1239..1240 " "
  DIGITS@1240..1241 "1"
  RPAREN@1241..1242 ")"
  SEMICOLON@1242..1243 ";"
  NEWLINE@1243..1245 "\r\n"
  WS@1245..1249 "    "
  IDENT_KW@1249..1250 "j"
  WS@1250..1251 " "
  EQUAL@1251..1252 "="
  WS@1252..1253 " "
  IDENT_KW@1253..1269 "atomicCounterAdd"
  LPAREN@1269..1270 "("
  IDENT_KW@1270..1278 "counter1"
  COMMA@1278..1279 ","
  WS@1279..1280 " "
  DASH@1280..1281 "-"
  DIGITS@1281..1282 "1"
  RPAREN@1282..1283 ")"
  SEMICOLON@1283..1284 ";"
  NEWLINE@1284..1286 "\r\n"
  WS@1286..1290 "    "
  IDENT_KW@1290..1291 "j"
  WS@1291..1292 " "
  EQUAL@1292..1293 "="
  WS@1293..1294 " "
  IDENT_KW@1294..1315 "atomicCounterSubtract"
  LPAREN@1315..1316 "("
  IDENT_KW@1316..1324 "counter1"
  COMMA@1324..1325 ","
  WS@1325..1326 " "
  DIGITS@1326..1327 "1"
  RPAREN@1327..1328 ")"
  SEMICOLON@1328..1329 ";"
  NEWLINE@1329..1331 "\r\n"
  NEWLINE@1331..1333 "\r\n"
  WS@1333..1337 "    "
  IDENT_KW@1337..1338 "j"
  WS@1338..1339 " "
  EQUAL@1339..1340 "="
  WS@1340..1341 " "
  IDENT_KW@1341..1357 "atomicCounterMin"
  LPAREN@1357..1358 "("
  IDENT_KW@1358..1366 "counter1"
  COMMA@1366..1367 ","
  WS@1367..1368 " "
  IDENT_KW@1368..1369 "j"
  RPAREN@1369..1370 ")"
  SEMICOLON@1370..1371 ";"
  NEWLINE@1371..1373 "\r\n"
  WS@1373..1377 "    "
  IDENT_KW@1377..1378 "j"
  WS@1378..1379 " "
  EQUAL@1379..1380 "="
  WS@1380..1381 " "
  IDENT_KW@1381..1397 "atomicCounterMax"
  LPAREN@1397..1398 "("
  IDENT_KW@1398..1406 "counter1"
  COMMA@1406..1407 ","
  WS@1407..1408 " "
  IDENT_KW@1408..1409 "j"
  RPAREN@1409..1410 ")"
  SEMICOLON@1410..1411 ";"
  NEWLINE@1411..1413 "\r\n"
  WS@1413..1417 "    "
  IDENT_KW@1417..1418 "j"
  WS@1418..1419 " "
  EQUAL@1419..1420 "="
  WS@1420..1421 " "
  IDENT_KW@1421..1437 "atomicCounterAnd"
  LPAREN@1437..1438 "("
  IDENT_KW@1438..1446 "counter1"
  COMMA@1446..1447 ","
  WS@1447..1448 " "
  IDENT_KW@1448..1449 "j"
  RPAREN@1449..1450 ")"
  SEMICOLON@1450..1451 ";"
  NEWLINE@1451..1453 "\r\n"
  NEWLINE@1453..1455 "\r\n"
  WS@1455..1459 "    "
  IDENT_KW@1459..1460 "j"
  WS@1460..1461 " "
  EQUAL@1461..1462 "="
  WS@1462..1463 " "
  IDENT_KW@1463..1478 "atomicCounterOr"
  LPAREN@1478..1479 "("
  IDENT_KW@1479..1487 "counter1"
  COMMA@1487..1488 ","
  WS@1488..1489 " "
  IDENT_KW@1489..1490 "j"
  RPAREN@1490..1491 ")"
  SEMICOLON@1491..1492 ";"
  NEWLINE@1492..1494 "\r\n"
  WS@1494..1498 "    "
  IDENT_KW@1498..1499 "j"
  WS@1499..1500 " "
  EQUAL@1500..1501 "="
  WS@1501..1502 " "
  IDENT_KW@1502..1518 "atomicCounterXor"
  LPAREN@1518..1519 "("
  IDENT_KW@1519..1527 "counter1"
  COMMA@1527..1528 ","
  WS@1528..1529 " "
  IDENT_KW@1529..1530 "j"
  RPAREN@1530..1531 ")"
  SEMICOLON@1531..1532 ";"
  NEWLINE@1532..1534 "\r\n"
  WS@1534..1538 "    "
  NEWLINE@1538..1540 "\r\n"
  WS@1540..1544 "    "
  IDENT_KW@1544..1545 "j"
  WS@1545..1546 " "
  EQUAL@1546..1547 "="
  WS@1547..1548 " "
  IDENT_KW@1548..1569 "atomicCounterExchange"
  LPAREN@1569..1570 "("
  IDENT_KW@1570..1578 "counter1"
  COMMA@1578..1579 ","
  WS@1579..1580 " "
  IDENT_KW@1580..1581 "j"
  RPAREN@1581..1582 ")"
  SEMICOLON@1582..1583 ";"
  NEWLINE@1583..1585 "\r\n"
  WS@1585..1589 "    "
  IDENT_KW@1589..1590 "j"
  WS@1590..1591 " "
  EQUAL@1591..1592 "="
  WS@1592..1593 " "
  IDENT_KW@1593..1614 "atomicCounterCompSwap"
  LPAREN@1614..1615 "("
  IDENT_KW@1615..1623 "counter1"
  COMMA@1623..1624 ","
  WS@1624..1625 " "
  DIGITS@1625..1626 "0"
  COMMA@1626..1627 ","
  WS@1627..1628 " "
  IDENT_KW@1628..1629 "j"
  RPAREN@1629..1630 ")"
  SEMICOLON@1630..1631 ";"
  NEWLINE@1631..1633 "\r\n"
  NEWLINE@1633..1635 "\r\n"
  WS@1635..1639 "    "
  IDENT_KW@1639..1661 "atomicCounterIncrement"
  LPAREN@1661..1662 "("
  IDENT_KW@1662..1670 "counter2"
  RPAREN@1670..1671 ")"
  SEMICOLON@1671..1672 ";"
  NEWLINE@1672..1674 "\r\n"
  WS@1674..1678 "    "
  IDENT_KW@1678..1700 "atomicCounterIncrement"
  LPAREN@1700..1701 "("
  IDENT_KW@1701..1709 "counter3"
  RPAREN@1709..1710 ")"
  SEMICOLON@1710..1711 ";"
  NEWLINE@1711..1713 "\r\n"
  NEWLINE@1713..1715 "\r\n"
  WS@1715..1719 "    "
  IDENT_KW@1719..1745 "memoryBarrierAtomicCo ..."
  LPAREN@1745..1746 "("
  RPAREN@1746..1747 ")"
  SEMICOLON@1747..1748 ";"
  NEWLINE@1748..1750 "\r\n"
  WS@1750..1754 "    "
  NEWLINE@1754..1756 "\r\n"
  WS@1756..1760 "    "
  IDENT_KW@1760..1766 "return"
  WS@1766..1767 " "
  IDENT_KW@1767..1768 "j"
  SEMICOLON@1768..1769 ";"
  NEWLINE@1769..1771 "\r\n"
  RBRACE@1771..1772 "}"
  NEWLINE@1772..1774 "\r\n"
  NEWLINE@1774..1776 "\r\n"
  IDENT_KW@1776..1780 "vec4"
  WS@1780..1781 " "
  IDENT_KW@1781..1784 "foo"
  LPAREN@1784..1785 "("
  RPAREN@1785..1786 ")"
  WS@1786..1787 " "
  LBRACE@1787..1788 "{"
  NEWLINE@1788..1790 "\r\n"
  WS@1790..1794 "    "
  IDENT_KW@1794..1799 "float"
  WS@1799..1800 " "
  IDENT_KW@1800..1801 "f"
  WS@1801..1802 " "
  EQUAL@1802..1803 "="
  WS@1803..1804 " "
  IDENT_KW@1804..1805 "j"
  WS@1805..1806 " "
  PLUS@1806..1807 "+"
  WS@1807..1808 " "
  IDENT_KW@1808..1822 "bufferInstance"
  PERIOD@1822..1823 "."
  IDENT_KW@1823..1824 "j"
  WS@1824..1825 " "
  PLUS@1825..1826 "+"
  WS@1826..1827 " "
  IDENT_KW@1827..1840 "structUniform"
  PERIOD@1840..1841 "."
  IDENT_KW@1841..1842 "y"
  WS@1842..1843 " "
  PLUS@1843..1844 "+"
  WS@1844..1845 " "
  IDENT_KW@1845..1858 "structUniform"
  PERIOD@1858..1859 "."
  IDENT_KW@1859..1860 "z"
  SEMICOLON@1860..1861 ";"
  NEWLINE@1861..1863 "\r\n"
  WS@1863..1867 "    "
  IDENT_KW@1867..1871 "vec2"
  WS@1871..1872 " "
  IDENT_KW@1872..1874 "v2"
  WS@1874..1875 " "
  EQUAL@1875..1876 "="
  WS@1876..1877 " "
  IDENT_KW@1877..1878 "b"
  WS@1878..1879 " "
  PLUS@1879..1880 "+"
  WS@1880..1881 " "
  IDENT_KW@1881..1882 "c"
  WS@1882..1883 " "
  PLUS@1883..1884 "+"
  WS@1884..1885 " "
  IDENT_KW@1885..1898 "structUniform"
  PERIOD@1898..1899 "."
  IDENT_KW@1899..1900 "x"
  SEMICOLON@1900..1901 ";"
  NEWLINE@1901..1903 "\r\n"
  WS@1903..1907 "    "
  IDENT_KW@1907..1911 "vec4"
  WS@1911..1912 " "
  IDENT_KW@1912..1914 "v4"
  WS@1914..1915 " "
  EQUAL@1915..1916 "="
  WS@1916..1917 " "
  IDENT_KW@1917..1918 "a"
  WS@1918..1919 " "
  PLUS@1919..1920 "+"
  WS@1920..1921 " "
  IDENT_KW@1921..1922 "d"
  LBRACKET@1922..1923 "["
  DIGITS@1923..1924 "0"
  RBRACKET@1924..1925 "]"
  WS@1925..1926 " "
  PLUS@1926..1927 "+"
  WS@1927..1928 " "
  IDENT_KW@1928..1929 "d"
  LBRACKET@1929..1930 "["
  DIGITS@1930..1931 "1"
  RBRACKET@1931..1932 "]"
  WS@1932..1933 " "
  PLUS@1933..1934 "+"
  WS@1934..1935 " "
  IDENT_KW@1935..1936 "d"
  LBRACKET@1936..1937 "["
  DIGITS@1937..1938 "2"
  RBRACKET@1938..1939 "]"
  WS@1939..1940 " "
  PLUS@1940..1941 "+"
  WS@1941..1942 " "
  IDENT_KW@1942..1943 "k"
  WS@1943..1944 " "
  PLUS@1944..1945 "+"
  WS@1945..1946 " "
  IDENT_KW@1946..1960 "bufferInstance"
  PERIOD@1960..1961 "."
  IDENT_KW@1961..1962 "k"
  WS@1962..1963 " "
  PLUS@1963..1964 "+"
  WS@1964..1965 " "
  IDENT_KW@1965..1972 "texture"
  LPAREN@1972..1973 "("
  IDENT_KW@1973..1975 "t1"
  COMMA@1975..1976 ","
  WS@1976..1977 " "
  IDENT_KW@1977..1981 "vec2"
  LPAREN@1981..1982 "("
  DIGITS@1982..1983 "0"
  COMMA@1983..1984 ","
  WS@1984..1985 " "
  DIGITS@1985..1986 "0"
  RPAREN@1986..1987 ")"
  RPAREN@1987..1988 ")"
  SEMICOLON@1988..1989 ";"
  NEWLINE@1989..1991 "\r\n"
  WS@1991..1995 "    "
  IDENT_KW@1995..2001 "return"
  WS@2001..2002 " "
  IDENT_KW@2002..2006 "vec4"
  LPAREN@2006..2007 "("
  IDENT_KW@2007..2008 "f"
  RPAREN@2008..2009 ")"
  WS@2009..2010 " "
  ASTERISK@2010..2011 "*"
  WS@2011..2012 " "
  IDENT_KW@2012..2016 "vec4"
  LPAREN@2016..2017 "("
  IDENT_KW@2017..2019 "v2"
  COMMA@2019..2020 ","
  WS@2020..2021 " "
  DIGITS@2021..2022 "1"
  COMMA@2022..2023 ","
  WS@2023..2024 " "
  DIGITS@2024..2025 "1"
  RPAREN@2025..2026 ")"
  WS@2026..2027 " "
  ASTERISK@2027..2028 "*"
  WS@2028..2029 " "
  IDENT_KW@2029..2031 "v4"
  SEMICOLON@2031..2032 ";"
  NEWLINE@2032..2034 "\r\n"
  RBRACE@2034..2035 "}"
  NEWLINE@2035..2037 "\r\n"
  NEWLINE@2037..2039 "\r\n"
  IDENT_KW@2039..2043 "void"
  WS@2043..2044 " "
  IDENT_KW@2044..2048 "main"
  LPAREN@2048..2049 "("
  RPAREN@2049..2050 ")"
  WS@2050..2051 " "
  LBRACE@2051..2052 "{"
  NEWLINE@2052..2054 "\r\n"
  WS@2054..2058 "    "
  IDENT_KW@2058..2063 "float"
  WS@2063..2064 " "
  IDENT_KW@2064..2065 "j"
  WS@2065..2066 " "
  EQUAL@2066..2067 "="
  WS@2067..2068 " "
  IDENT_KW@2068..2073 "float"
  LPAREN@2073..2074 "("
  IDENT_KW@2074..2077 "bar"
  LPAREN@2077..2078 "("
  RPAREN@2078..2079 ")"
  RPAREN@2079..2080 ")"
  SEMICOLON@2080..2081 ";"
  NEWLINE@2081..2083 "\r\n"
  WS@2083..2087 "    "
  IDENT_KW@2087..2088 "o"
  WS@2088..2089 " "
  EQUAL@2089..2090 "="
  WS@2090..2091 " "
  IDENT_KW@2091..2092 "j"
  WS@2092..2093 " "
  ASTERISK@2093..2094 "*"
  WS@2094..2095 " "
  IDENT_KW@2095..2098 "foo"
  LPAREN@2098..2099 "("
  RPAREN@2099..2100 ")"
  SEMICOLON@2100..2101 ";"
  NEWLINE@2101..2103 "\r\n"
  RBRACE@2103..2104 "}"
