Ok(EnterFile { file_id: FileId(0), path: "../data/glsl.-D-U.frag" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 450, profile: Core, parsed_profile: Some(None) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@14..32, kind: Define(Define { name: "IN_SHADER", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@31..31 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 32..33 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 33..39 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 39..40 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 40..48 } "location", token_kind: IDENT("location"), state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 48..49 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 49..50 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 50..51 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 51..52 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 52..55 } "out", token_kind: OUT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 55..56 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 56..60 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 60..61 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 61..66 } "color", token_kind: IDENT("color"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 66..67 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 67..68 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 68..69 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 69..73 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 73..74 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 74..78 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 78..79 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 79..80 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 80..81 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 81..82 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 82..83 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@83..96, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@87..95 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 96..100 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 100..105 } "color", token_kind: IDENT("color"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 105..106 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 106..107 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 107..108 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 108..112 } "vec4", token_kind: TYPE_NAME(VEC4), state: Masked })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 112..113 } "(", token_kind: LPAREN, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 113..116 } "1.0", token_kind: FLOAT_CONST(1.0), state: Masked })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 116..117 } ")", token_kind: RPAREN, state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 117..118 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 118..119 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@119..125, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@125..153, kind: Error(Error { message: "expected FOO 200" }), errors: [Located { inner: Processing(ErrorDirective { message: "expected FOO 200" }), pos: 125..153, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 11, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@153..160, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 160..161 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@161..178, kind: IfDef(IfDef { ident: "IN_SHADER" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 178..182 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 182..187 } "color", token_kind: IDENT("color"), state: Active })
Ok(Token { source_token: INC_OP@NodeSpan { source_id: FileId(0), range: 187..189 } "++", token_kind: INC_OP, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 189..190 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 190..191 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ELSE@191..197, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@197..228, kind: Error(Error { message: "IN_SHADER was undef" }), errors: [Located { inner: Processing(ErrorDirective { message: "IN_SHADER was undef" }), pos: 197..228, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 17, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@228..235, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 235..236 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@236..251, kind: IfDef(IfDef { ident: "UNDEFED" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@251..278, kind: Error(Error { message: "UNDEFED defined" }), errors: [Located { inner: Processing(ErrorDirective { message: "UNDEFED defined" }), pos: 251..278, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 21, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ELSE@278..284, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 284..288 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 288..293 } "color", token_kind: IDENT("color"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 293..294 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: MUL_ASSIGN@NodeSpan { source_id: FileId(0), range: 294..296 } "*=", token_kind: MUL_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 296..297 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 297..300 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 300..301 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 301..302 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@302..309, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 309..310 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@310..325, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@314..324 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 325..329 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 329..334 } "color", token_kind: IDENT("color"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 334..335 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: MUL_ASSIGN@NodeSpan { source_id: FileId(0), range: 335..337 } "*=", token_kind: MUL_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 337..338 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 338..341 } "MUL", token_kind: IDENT("MUL"), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 341..342 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 342..343 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@343..349, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@349..368, kind: Error(Error { message: "bad MUL" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad MUL" }), pos: 349..368, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 29, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@368..375, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 375..376 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 376..377 } "\n", token_kind: WS, state: Active })
