ROOT@0..3340
  PP_VERSION@0..13
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "450"
    NEWLINE@12..13 "\n"
  NEWLINE@13..14 "\n"
  COMMENT@14..73 "// side test verifies ..."
  NEWLINE@73..74 "\n"
  PP_DEFINE@74..103
    HASH@74..75 "#"
    IDENT_KW@75..81 "define"
    WS@81..82 " "
    IDENT_KW@82..86 "bear"
    WS@86..87 " "
    PP_DEFINE_BODY@87..102
      IDENT_KW@87..102 "SecondExpansion"
    NEWLINE@102..103 "\n"
  PP_DEFINE@103..121
    HASH@103..104 "#"
    IDENT_KW@104..110 "define"
    WS@110..111 " "
    IDENT_KW@111..115 "mmmB"
    WS@115..116 " "
    PP_DEFINE_BODY@116..120
      IDENT_KW@116..120 "bear"
    NEWLINE@120..121 "\n"
  PP_DEFINE@121..139
    HASH@121..122 "#"
    IDENT_KW@122..128 "define"
    WS@128..129 " "
    IDENT_KW@129..133 "mmmA"
    PP_DEFINE_ARGS@133..136
      LPAREN@133..134 "("
      PP_DEFINE_ARG@134..135
        IDENT_KW@134..135 "a"
      RPAREN@135..136 ")"
    WS@136..137 " "
    PP_DEFINE_BODY@137..138
      IDENT_KW@137..138 "a"
    NEWLINE@138..139 "\n"
  IDENT_KW@139..142 "int"
  WS@142..143 " "
  IDENT_KW@143..147 "mmmA"
  LPAREN@147..148 "("
  IDENT_KW@148..152 "mmmB"
  RPAREN@152..153 ")"
  SEMICOLON@153..154 ";"
  WS@154..174 "                    "
  COMMENT@174..234 "// mmmB -> bear, and  ..."
  NEWLINE@234..235 "\n"
  NEWLINE@235..236 "\n"
  COMMENT@236..281 "// pasting skips the  ..."
  NEWLINE@281..282 "\n"
  PP_DEFINE@282..320
    HASH@282..283 "#"
    IDENT_KW@283..289 "define"
    WS@289..290 " "
    IDENT_KW@290..300 "mmcatmmdog"
    WS@300..301 " "
    PP_DEFINE_BODY@301..319
      IDENT_KW@301..319 "PostPasteExpansion"
    NEWLINE@319..320 "\n"
  PP_DEFINE@320..338
    HASH@320..321 "#"
    IDENT_KW@321..327 "define"
    WS@327..328 " "
    IDENT_KW@328..333 "mmcat"
    WS@333..334 " "
    PP_DEFINE_BODY@334..337
      IDENT_KW@334..337 "cat"
    NEWLINE@337..338 "\n"
  PP_DEFINE@338..356
    HASH@338..339 "#"
    IDENT_KW@339..345 "define"
    WS@345..346 " "
    IDENT_KW@346..351 "mmdog"
    WS@351..352 " "
    PP_DEFINE_BODY@352..355
      IDENT_KW@352..355 "dog"
    NEWLINE@355..356 "\n"
  PP_DEFINE@356..379
    HASH@356..357 "#"
    IDENT_KW@357..363 "define"
    WS@363..364 " "
    IDENT_KW@364..367 "mmp"
    PP_DEFINE_ARGS@367..372
      LPAREN@367..368 "("
      PP_DEFINE_ARG@368..369
        IDENT_KW@368..369 "a"
      COMMA@369..370 ","
      PP_DEFINE_ARG@370..371
        IDENT_KW@370..371 "b"
      RPAREN@371..372 ")"
    WS@372..373 " "
    PP_DEFINE_BODY@373..378
      PP_CONCAT@373..378
        IDENT_KW@373..374 "a"
        PP_CONCAT_OP@374..376 "##"
        WS@376..377 " "
        IDENT_KW@377..378 "b"
    NEWLINE@378..379 "\n"
  IDENT_KW@379..382 "int"
  WS@382..383 " "
  IDENT_KW@383..386 "mmp"
  LPAREN@386..387 "("
  IDENT_KW@387..392 "mmcat"
  COMMA@392..393 ","
  WS@393..394 " "
  IDENT_KW@394..399 "mmdog"
  RPAREN@399..400 ")"
  SEMICOLON@400..401 ";"
  WS@401..414 "             "
  COMMENT@414..475 "// mmcat/mmdog not ex ..."
  NEWLINE@475..476 "\n"
  NEWLINE@476..477 "\n"
  COMMENT@477..495 "// multi-token pre"
  NEWLINE@495..496 "\n"
  PP_DEFINE@496..527
    HASH@496..497 "#"
    IDENT_KW@497..503 "define"
    WS@503..504 " "
    IDENT_KW@504..517 "mmtokpastepre"
    PP_DEFINE_ARGS@517..520
      LPAREN@517..518 "("
      PP_DEFINE_ARG@518..519
        IDENT_KW@518..519 "a"
      RPAREN@519..520 ")"
    WS@520..521 " "
    PP_DEFINE_BODY@521..526
      PP_CONCAT@521..526
        IDENT_KW@521..522 "a"
        PP_CONCAT_OP@522..524 "##"
        DIGITS@524..526 "27"
    NEWLINE@526..527 "\n"
  IDENT_KW@527..540 "mmtokpastepre"
  LPAREN@540..541 "("
  IDENT_KW@541..546 "float"
  WS@546..547 " "
  IDENT_KW@547..550 "foo"
  RPAREN@550..551 ")"
  SEMICOLON@551..552 ";"
  WS@552..562 "          "
  COMMENT@562..594 "// should declare \"fl ..."
  NEWLINE@594..595 "\n"
  NEWLINE@595..596 "\n"
  COMMENT@596..615 "// multi-token post"
  NEWLINE@615..616 "\n"
  PP_DEFINE@616..650
    HASH@616..617 "#"
    IDENT_KW@617..623 "define"
    WS@623..624 " "
    IDENT_KW@624..638 "mmtokpastepost"
    PP_DEFINE_ARGS@638..641
      LPAREN@638..639 "("
      PP_DEFINE_ARG@639..640
        IDENT_KW@639..640 "a"
      RPAREN@640..641 ")"
    WS@641..642 " "
    PP_DEFINE_BODY@642..649
      PP_CONCAT@642..649
        IDENT_KW@642..645 "uni"
        WS@645..646 " "
        PP_CONCAT_OP@646..648 "##"
        IDENT_KW@648..649 "a"
    NEWLINE@649..650 "\n"
  IDENT_KW@650..664 "mmtokpastepost"
  LPAREN@664..665 "("
  IDENT_KW@665..669 "form"
  WS@669..670 " "
  IDENT_KW@670..675 "float"
  WS@675..676 " "
  IDENT_KW@676..682 "foo155"
  RPAREN@682..683 ")"
  SEMICOLON@683..684 ";"
  WS@684..685 " "
  COMMENT@685..726 "// should declare \"un ..."
  NEWLINE@726..727 "\n"
  NEWLINE@727..728 "\n"
  COMMENT@728..749 "// non-first argument"
  NEWLINE@749..750 "\n"
  PP_DEFINE@750..783
    HASH@750..751 "#"
    IDENT_KW@751..757 "define"
    WS@757..758 " "
    IDENT_KW@758..761 "foo"
    WS@761..762 " "
    PP_DEFINE_BODY@762..782
      IDENT_KW@762..782 "ShouldntExpandToThis"
    NEWLINE@782..783 "\n"
  PP_DEFINE@783..798
    HASH@783..784 "#"
    IDENT_KW@784..790 "define"
    WS@790..791 " "
    IDENT_KW@791..795 "semi"
    WS@795..796 " "
    PP_DEFINE_BODY@796..797
      SEMICOLON@796..797 ";"
    NEWLINE@797..798 "\n"
  PP_DEFINE@798..826
    HASH@798..799 "#"
    IDENT_KW@799..805 "define"
    WS@805..806 " "
    IDENT_KW@806..815 "bothpaste"
    PP_DEFINE_ARGS@815..820
      LPAREN@815..816 "("
      PP_DEFINE_ARG@816..817
        IDENT_KW@816..817 "a"
      COMMA@817..818 ","
      PP_DEFINE_ARG@818..819
        IDENT_KW@818..819 "b"
      RPAREN@819..820 ")"
    WS@820..821 " "
    PP_DEFINE_BODY@821..825
      PP_CONCAT@821..825
        IDENT_KW@821..822 "a"
        PP_CONCAT_OP@822..824 "##"
        IDENT_KW@824..825 "b"
    NEWLINE@825..826 "\n"
  IDENT_KW@826..831 "float"
  WS@831..832 " "
  IDENT_KW@832..841 "bothpaste"
  LPAREN@841..842 "("
  IDENT_KW@842..845 "foo"
  COMMA@845..846 ","
  WS@846..847 " "
  DIGITS@847..850 "719"
  RPAREN@850..851 ")"
  SEMICOLON@851..852 ";"
  WS@852..862 "          "
  COMMENT@862..895 "// should declare \"fl ..."
  NEWLINE@895..896 "\n"
  PP_DEFINE@896..929
    HASH@896..897 "#"
    IDENT_KW@897..903 "define"
    WS@903..904 " "
    IDENT_KW@904..912 "secpaste"
    PP_DEFINE_ARGS@912..917
      LPAREN@912..913 "("
      PP_DEFINE_ARG@913..914
        IDENT_KW@913..914 "a"
      COMMA@914..915 ","
      PP_DEFINE_ARG@915..916
        IDENT_KW@915..916 "b"
      RPAREN@916..917 ")"
    WS@917..918 " "
    PP_DEFINE_BODY@918..928
      IDENT_KW@918..919 "a"
      WS@919..920 " "
      PP_CONCAT@920..928
        IDENT_KW@920..923 "bar"
        WS@923..924 " "
        PP_CONCAT_OP@924..926 "##"
        WS@926..927 " "
        IDENT_KW@927..928 "b"
    NEWLINE@928..929 "\n"
  IDENT_KW@929..937 "secpaste"
  LPAREN@937..938 "("
  IDENT_KW@938..945 "uniform"
  WS@945..946 " "
  IDENT_KW@946..951 "float"
  COMMA@951..952 ","
  WS@952..953 " "
  IDENT_KW@953..956 "foo"
  WS@956..957 " "
  IDENT_KW@957..961 "semi"
  RPAREN@961..962 ")"
  WS@962..965 "   "
  COMMENT@965..1006 "// should declare \"un ..."
  NEWLINE@1006..1007 "\n"
  NEWLINE@1007..1008 "\n"
  COMMENT@1008..1018 "// no args"
  NEWLINE@1018..1019 "\n"
  PP_DEFINE@1019..1041
    HASH@1019..1020 "#"
    IDENT_KW@1020..1026 "define"
    WS@1026..1027 " "
    IDENT_KW@1027..1032 "noArg"
    WS@1032..1033 " "
    PP_DEFINE_BODY@1033..1040
      PP_CONCAT@1033..1040
        IDENT_KW@1033..1035 "fl"
        PP_CONCAT_OP@1035..1037 "##"
        IDENT_KW@1037..1040 "oat"
    NEWLINE@1040..1041 "\n"
  IDENT_KW@1041..1046 "noArg"
  WS@1046..1047 " "
  IDENT_KW@1047..1054 "argless"
  SEMICOLON@1054..1055 ";"
  NEWLINE@1055..1056 "\n"
  NEWLINE@1056..1057 "\n"
  COMMENT@1057..1072 "// bad location"
  NEWLINE@1072..1073 "\n"
  PP_DEFINE@1073..1095
    HASH@1073..1074 "#"
    IDENT_KW@1074..1080 "define"
    WS@1080..1081 " "
    IDENT_KW@1081..1085 "bad1"
    WS@1085..1086 " "
    PP_DEFINE_BODY@1086..1094
      PP_CONCAT@1086..1094
        PP_CONCAT_OP@1086..1088 "##"
        WS@1088..1089 " "
        IDENT_KW@1089..1094 "float"
    NEWLINE@1094..1095 "\n"
  IDENT_KW@1095..1099 "bad1"
  WS@1099..1100 " "
  IDENT_KW@1100..1103 "dc1"
  SEMICOLON@1103..1104 ";"
  NEWLINE@1104..1105 "\n"
  PP_DEFINE@1105..1127
    HASH@1105..1106 "#"
    IDENT_KW@1106..1112 "define"
    WS@1112..1113 " "
    IDENT_KW@1113..1117 "bad2"
    WS@1117..1118 " "
    PP_DEFINE_BODY@1118..1126
      PP_CONCAT@1118..1126
        IDENT_KW@1118..1123 "float"
        WS@1123..1124 " "
        PP_CONCAT_OP@1124..1126 "##"
    NEWLINE@1126..1127 "\n"
  IDENT_KW@1127..1131 "bad2"
  WS@1131..1132 " "
  IDENT_KW@1132..1135 "dc2"
  SEMICOLON@1135..1136 ";"
  NEWLINE@1136..1137 "\n"
  NEWLINE@1137..1138 "\n"
  COMMENT@1138..1152 "// multiple ##"
  NEWLINE@1152..1153 "\n"
  PP_DEFINE@1153..1205
    HASH@1153..1154 "#"
    IDENT_KW@1154..1160 "define"
    WS@1160..1161 " "
    IDENT_KW@1161..1171 "multiPaste"
    PP_DEFINE_ARGS@1171..1180
      LPAREN@1171..1172 "("
      PP_DEFINE_ARG@1172..1173
        IDENT_KW@1172..1173 "a"
      COMMA@1173..1174 ","
      WS@1174..1175 " "
      PP_DEFINE_ARG@1175..1176
        IDENT_KW@1175..1176 "b"
      COMMA@1176..1177 ","
      WS@1177..1178 " "
      PP_DEFINE_ARG@1178..1179
        IDENT_KW@1178..1179 "c"
      RPAREN@1179..1180 ")"
    WS@1180..1181 " "
    PP_DEFINE_BODY@1181..1204
      PP_CONCAT@1181..1204
        IDENT_KW@1181..1182 "a"
        PP_CONCAT_OP@1182..1184 "##"
        IDENT_KW@1184..1186 "or"
        PP_CONCAT@1186..1204
          PP_CONCAT_OP@1186..1188 "##"
          IDENT_KW@1188..1189 "b"
          WS@1189..1190 " "
          IDENT_KW@1190..1193 "flo"
          PP_CONCAT@1193..1204
            PP_CONCAT_OP@1193..1195 "##"
            IDENT_KW@1195..1197 "at"
            WS@1197..1198 " "
            IDENT_KW@1198..1201 "foo"
            PP_CONCAT@1201..1204
              PP_CONCAT_OP@1201..1203 "##"
              IDENT_KW@1203..1204 "c"
    NEWLINE@1204..1205 "\n"
  IDENT_KW@1205..1215 "multiPaste"
  LPAREN@1215..1216 "("
  IDENT_KW@1216..1220 "unif"
  COMMA@1220..1221 ","
  WS@1221..1222 " "
  IDENT_KW@1222..1223 "m"
  COMMA@1223..1224 ","
  WS@1224..1225 " "
  DIGITS@1225..1228 "875"
  RPAREN@1228..1229 ")"
  SEMICOLON@1229..1230 ";"
  NEWLINE@1230..1231 "\n"
  NEWLINE@1231..1232 "\n"
  COMMENT@1232..1243 "// too long"
  NEWLINE@1243..1244 "\n"
  PP_DEFINE@1244..1274
    HASH@1244..1245 "#"
    IDENT_KW@1245..1251 "define"
    WS@1251..1252 " "
    IDENT_KW@1252..1263 "simplePaste"
    PP_DEFINE_ARGS@1263..1268
      LPAREN@1263..1264 "("
      PP_DEFINE_ARG@1264..1265
        IDENT_KW@1264..1265 "a"
      COMMA@1265..1266 ","
      PP_DEFINE_ARG@1266..1267
        IDENT_KW@1266..1267 "b"
      RPAREN@1267..1268 ")"
    WS@1268..1269 " "
    PP_DEFINE_BODY@1269..1273
      PP_CONCAT@1269..1273
        IDENT_KW@1269..1270 "a"
        PP_CONCAT_OP@1270..1272 "##"
        IDENT_KW@1272..1273 "b"
    NEWLINE@1273..1274 "\n"
  COMMENT@1274..1296 "// 1020 + 5 characters"
  NEWLINE@1296..1297 "\n"
  IDENT_KW@1297..1302 "float"
  WS@1302..1303 " "
  IDENT_KW@1303..1314 "simplePaste"
  LPAREN@1314..1315 "("
  IDENT_KW@1315..2335 "ABCDEF0123456789ABCDE ..."
  COMMA@2335..2336 ","
  WS@2336..2337 " "
  DIGITS@2337..2342 "12345"
  RPAREN@2342..2343 ")"
  SEMICOLON@2343..2344 ";"
  NEWLINE@2344..2345 "\n"
  NEWLINE@2345..2346 "\n"
  COMMENT@2346..2364 "// non-identifiers"
  NEWLINE@2364..2365 "\n"
  IDENT_KW@2365..2368 "int"
  WS@2368..2369 " "
  IDENT_KW@2369..2370 "a"
  WS@2370..2371 " "
  EQUAL@2371..2372 "="
  WS@2372..2373 " "
  IDENT_KW@2373..2384 "simplePaste"
  LPAREN@2384..2385 "("
  DIGITS@2385..2387 "11"
  COMMA@2387..2388 ","
  DIGITS@2388..2390 "12"
  RPAREN@2390..2391 ")"
  SEMICOLON@2391..2392 ";"
  NEWLINE@2392..2393 "\n"
  NEWLINE@2393..2394 "\n"
  COMMENT@2394..2423 "// should work in #if ..."
  NEWLINE@2423..2424 "\n"
  PP_DEFINE@2424..2443
    HASH@2424..2425 "#"
    IDENT_KW@2425..2431 "define"
    WS@2431..2432 " "
    IDENT_KW@2432..2440 "seahorse"
    WS@2440..2441 " "
    PP_DEFINE_BODY@2441..2442
      DIGITS@2441..2442 "1"
    NEWLINE@2442..2443 "\n"
  PP_DEFINE@2443..2461
    HASH@2443..2444 "#"
    IDENT_KW@2444..2450 "define"
    WS@2450..2451 " "
    IDENT_KW@2451..2458 "sealion"
    WS@2458..2459 " "
    PP_DEFINE_BODY@2459..2460
      DIGITS@2459..2460 "0"
    NEWLINE@2460..2461 "\n"
  PP_DEFINE@2461..2507
    HASH@2461..2462 "#"
    IDENT_KW@2462..2468 "define"
    WS@2468..2469 " "
    IDENT_KW@2469..2482 "marine_animal"
    PP_DEFINE_ARGS@2482..2490
      LPAREN@2482..2483 "("
      PP_DEFINE_ARG@2483..2489
        IDENT_KW@2483..2489 "suffix"
      RPAREN@2489..2490 ")"
    WS@2490..2491 " "
    PP_DEFINE_BODY@2491..2506
      LPAREN@2491..2492 "("
      PP_CONCAT@2492..2506
        IDENT_KW@2492..2495 "sea"
        WS@2495..2496 " "
        PP_CONCAT_OP@2496..2498 "##"
        WS@2498..2499 " "
        IDENT_KW@2499..2505 "suffix"
        RPAREN@2505..2506 ")"
    NEWLINE@2506..2507 "\n"
  NEWLINE@2507..2508 "\n"
  PP_IF@2508..2548
    HASH@2508..2509 "#"
    IDENT_KW@2509..2511 "if"
    WS@2511..2512 " "
    PP_IF_EXPR@2512..2532
      IDENT_KW@2512..2525 "marine_animal"
      LPAREN@2525..2526 "("
      IDENT_KW@2526..2531 "horse"
      RPAREN@2531..2532 ")"
    WS@2532..2533 " "
    COMMENT@2533..2547 "// should pass"
    NEWLINE@2547..2548 "\n"
  IDENT_KW@2548..2555 "uniform"
  WS@2555..2556 " "
  IDENT_KW@2556..2561 "float"
  WS@2561..2562 " "
  IDENT_KW@2562..2574 "seahorse_var"
  SEMICOLON@2574..2575 ";"
  NEWLINE@2575..2576 "\n"
  PP_ENDIF@2576..2583
    HASH@2576..2577 "#"
    IDENT_KW@2577..2582 "endif"
    NEWLINE@2582..2583 "\n"
  PP_IF@2583..2623
    HASH@2583..2584 "#"
    IDENT_KW@2584..2586 "if"
    WS@2586..2587 " "
    PP_IF_EXPR@2587..2607
      BANG@2587..2588 "!"
      IDENT_KW@2588..2601 "marine_animal"
      LPAREN@2601..2602 "("
      IDENT_KW@2602..2606 "lion"
      RPAREN@2606..2607 ")"
    WS@2607..2608 " "
    COMMENT@2608..2622 "// should pass"
    NEWLINE@2622..2623 "\n"
  IDENT_KW@2623..2630 "uniform"
  WS@2630..2631 " "
  IDENT_KW@2631..2636 "float"
  WS@2636..2637 " "
  IDENT_KW@2637..2648 "sealion_var"
  SEMICOLON@2648..2649 ";"
  NEWLINE@2649..2650 "\n"
  PP_ENDIF@2650..2657
    HASH@2650..2651 "#"
    IDENT_KW@2651..2656 "endif"
    NEWLINE@2656..2657 "\n"
  NEWLINE@2657..2658 "\n"
  COMMENT@2658..2670 "// operators"
  NEWLINE@2670..2671 "\n"
  PP_DEFINE@2671..2701
    HASH@2671..2672 "#"
    IDENT_KW@2672..2678 "define"
    WS@2678..2679 " "
    IDENT_KW@2679..2686 "MAKE_OP"
    PP_DEFINE_ARGS@2686..2692
      LPAREN@2686..2687 "("
      PP_DEFINE_ARG@2687..2688
        IDENT_KW@2687..2688 "L"
      COMMA@2688..2689 ","
      WS@2689..2690 " "
      PP_DEFINE_ARG@2690..2691
        IDENT_KW@2690..2691 "R"
      RPAREN@2691..2692 ")"
    WS@2692..2693 " "
    PP_DEFINE_BODY@2693..2699
      PP_CONCAT@2693..2699
        IDENT_KW@2693..2694 "L"
        WS@2694..2695 " "
        PP_CONCAT_OP@2695..2697 "##"
        WS@2697..2698 " "
        IDENT_KW@2698..2699 "R"
    NEWLINE@2699..2701 "\r\n"
  IDENT_KW@2701..2706 "const"
  WS@2706..2707 " "
  IDENT_KW@2707..2710 "int"
  WS@2710..2711 " "
  IDENT_KW@2711..2714 "aop"
  WS@2714..2715 " "
  EQUAL@2715..2716 "="
  WS@2716..2717 " "
  DIGITS@2717..2719 "10"
  SEMICOLON@2719..2720 ";"
  NEWLINE@2720..2722 "\r\n"
  IDENT_KW@2722..2727 "const"
  WS@2727..2728 " "
  IDENT_KW@2728..2731 "int"
  WS@2731..2732 " "
  IDENT_KW@2732..2735 "bop"
  WS@2735..2736 " "
  EQUAL@2736..2737 "="
  WS@2737..2738 " "
  DIGITS@2738..2739 "4"
  SEMICOLON@2739..2740 ";"
  NEWLINE@2740..2742 "\r\n"
  IDENT_KW@2742..2745 "int"
  WS@2745..2746 " "
  IDENT_KW@2746..2749 "cop"
  WS@2749..2750 " "
  EQUAL@2750..2751 "="
  WS@2751..2752 " "
  IDENT_KW@2752..2755 "aop"
  WS@2755..2756 " "
  IDENT_KW@2756..2763 "MAKE_OP"
  LPAREN@2763..2764 "("
  LANGLE@2764..2765 "<"
  COMMA@2765..2766 ","
  WS@2766..2767 " "
  LANGLE@2767..2768 "<"
  RPAREN@2768..2769 ")"
  WS@2769..2770 " "
  IDENT_KW@2770..2773 "bop"
  SEMICOLON@2773..2774 ";"
  NEWLINE@2774..2776 "\r\n"
  IDENT_KW@2776..2780 "bool"
  WS@2780..2781 " "
  IDENT_KW@2781..2784 "dop"
  WS@2784..2785 " "
  EQUAL@2785..2786 "="
  WS@2786..2787 " "
  IDENT_KW@2787..2790 "aop"
  WS@2790..2791 " "
  IDENT_KW@2791..2798 "MAKE_OP"
  LPAREN@2798..2799 "("
  BANG@2799..2800 "!"
  COMMA@2800..2801 ","
  EQUAL@2801..2802 "="
  RPAREN@2802..2803 ")"
  WS@2803..2804 " "
  IDENT_KW@2804..2807 "bop"
  SEMICOLON@2807..2808 ";"
  NEWLINE@2808..2810 "\r\n"
  NEWLINE@2810..2812 "\r\n"
  PP_DEFINE@2812..2851
    HASH@2812..2813 "#"
    IDENT_KW@2813..2819 "define"
    WS@2819..2820 " "
    IDENT_KW@2820..2828 "MAKE_OP3"
    PP_DEFINE_ARGS@2828..2837
      LPAREN@2828..2829 "("
      PP_DEFINE_ARG@2829..2830
        IDENT_KW@2829..2830 "L"
      COMMA@2830..2831 ","
      WS@2831..2832 " "
      PP_DEFINE_ARG@2832..2833
        IDENT_KW@2832..2833 "M"
      COMMA@2833..2834 ","
      WS@2834..2835 " "
      PP_DEFINE_ARG@2835..2836
        IDENT_KW@2835..2836 "R"
      RPAREN@2836..2837 ")"
    WS@2837..2838 " "
    PP_DEFINE_BODY@2838..2849
      PP_CONCAT@2838..2849
        IDENT_KW@2838..2839 "L"
        WS@2839..2840 " "
        PP_CONCAT_OP@2840..2842 "##"
        WS@2842..2843 " "
        IDENT_KW@2843..2844 "M"
        WS@2844..2845 " "
        PP_CONCAT@2845..2849
          PP_CONCAT_OP@2845..2847 "##"
          WS@2847..2848 " "
          IDENT_KW@2848..2849 "R"
    NEWLINE@2849..2851 "\r\n"
  NEWLINE@2851..2853 "\r\n"
  IDENT_KW@2853..2857 "void"
  WS@2857..2858 " "
  IDENT_KW@2858..2861 "foo"
  LPAREN@2861..2862 "("
  RPAREN@2862..2863 ")"
  NEWLINE@2863..2865 "\r\n"
  LBRACE@2865..2866 "{"
  NEWLINE@2866..2868 "\r\n"
  WS@2868..2872 "    "
  IDENT_KW@2872..2875 "int"
  WS@2875..2876 " "
  IDENT_KW@2876..2877 "e"
  WS@2877..2878 " "
  EQUAL@2878..2879 "="
  WS@2879..2880 " "
  DIGITS@2880..2882 "16"
  SEMICOLON@2882..2883 ";"
  NEWLINE@2883..2885 "\r\n"
  WS@2885..2889 "    "
  IDENT_KW@2889..2890 "e"
  WS@2890..2891 " "
  IDENT_KW@2891..2899 "MAKE_OP3"
  LPAREN@2899..2900 "("
  RANGLE@2900..2901 ">"
  COMMA@2901..2902 ","
  RANGLE@2902..2903 ">"
  COMMA@2903..2904 ","
  EQUAL@2904..2905 "="
  RPAREN@2905..2906 ")"
  WS@2906..2907 " "
  DIGITS@2907..2908 "2"
  SEMICOLON@2908..2909 ";"
  NEWLINE@2909..2911 "\r\n"
  NEWLINE@2911..2913 "\r\n"
  WS@2913..2917 "    "
  COMMENT@2917..2940 "// recovery from bad op"
  NEWLINE@2940..2942 "\r\n"
  WS@2942..2946 "    "
  IDENT_KW@2946..2950 "bool"
  WS@2950..2951 " "
  IDENT_KW@2951..2952 "f"
  WS@2952..2953 " "
  EQUAL@2953..2954 "="
  WS@2954..2955 " "
  IDENT_KW@2955..2956 "e"
  WS@2956..2957 " "
  IDENT_KW@2957..2964 "MAKE_OP"
  LPAREN@2964..2965 "("
  RANGLE@2965..2966 ">"
  COMMA@2966..2967 ","
  BANG@2967..2968 "!"
  RPAREN@2968..2969 ")"
  WS@2969..2970 " "
  DIGITS@2970..2971 "5"
  SEMICOLON@2971..2972 ";"
  NEWLINE@2972..2974 "\r\n"
  RBRACE@2974..2975 "}"
  NEWLINE@2975..2976 "\n"
  NEWLINE@2976..2977 "\n"
  COMMENT@2977..3027 "// arguments: should  ..."
  NEWLINE@3027..3028 "\n"
  PP_DEFINE@3028..3053
    HASH@3028..3029 "#"
    IDENT_KW@3029..3035 "define"
    WS@3035..3036 " "
    IDENT_KW@3036..3042 "M_NEST"
    PP_DEFINE_ARGS@3042..3045
      LPAREN@3042..3043 "("
      PP_DEFINE_ARG@3043..3044
        IDENT_KW@3043..3044 "q"
      RPAREN@3044..3045 ")"
    WS@3045..3046 " "
    PP_DEFINE_BODY@3046..3051
      IDENT_KW@3046..3049 "int"
      WS@3049..3050 " "
      IDENT_KW@3050..3051 "q"
    NEWLINE@3051..3053 "\r\n"
  PP_DEFINE@3053..3086
    HASH@3053..3054 "#"
    IDENT_KW@3054..3060 "define"
    WS@3060..3061 " "
    IDENT_KW@3061..3068 "M_OUTER"
    PP_DEFINE_ARGS@3068..3071
      LPAREN@3068..3069 "("
      PP_DEFINE_ARG@3069..3070
        IDENT_KW@3069..3070 "p"
      RPAREN@3070..3071 ")"
    WS@3071..3072 " "
    PP_DEFINE_BODY@3072..3084
      IDENT_KW@3072..3078 "M_NEST"
      LPAREN@3078..3079 "("
      PP_CONCAT@3079..3084
        IDENT_KW@3079..3080 "p"
        PP_CONCAT_OP@3080..3082 "##"
        DIGITS@3082..3083 "2"
        RPAREN@3083..3084 ")"
    NEWLINE@3084..3086 "\r\n"
  IDENT_KW@3086..3093 "uniform"
  WS@3093..3094 " "
  IDENT_KW@3094..3101 "M_OUTER"
  LPAREN@3101..3102 "("
  IDENT_KW@3102..3110 "argPaste"
  RPAREN@3110..3111 ")"
  SEMICOLON@3111..3112 ";"
  NEWLINE@3112..3114 "\r\n"
  COMMENT@3114..3158 "// should make 'unifo ..."
  NEWLINE@3158..3160 "\r\n"
  PP_DEFINE@3160..3194
    HASH@3160..3161 "#"
    IDENT_KW@3161..3167 "define"
    WS@3167..3168 " "
    IDENT_KW@3168..3175 "M_NEST2"
    PP_DEFINE_ARGS@3175..3178
      LPAREN@3175..3176 "("
      PP_DEFINE_ARG@3176..3177
        IDENT_KW@3176..3177 "q"
      RPAREN@3177..3178 ")"
    WS@3178..3179 " "
    PP_DEFINE_BODY@3179..3192
      IDENT_KW@3179..3182 "int"
      WS@3182..3183 " "
      PP_CONCAT@3183..3192
        IDENT_KW@3183..3184 "q"
        WS@3184..3185 " "
        PP_CONCAT_OP@3185..3187 "##"
        WS@3187..3188 " "
        IDENT_KW@3188..3192 "suff"
    NEWLINE@3192..3194 "\r\n"
  PP_DEFINE@3194..3232
    HASH@3194..3195 "#"
    IDENT_KW@3195..3201 "define"
    WS@3201..3202 " "
    IDENT_KW@3202..3210 "M_OUTER2"
    PP_DEFINE_ARGS@3210..3213
      LPAREN@3210..3211 "("
      PP_DEFINE_ARG@3211..3212
        IDENT_KW@3211..3212 "p"
      RPAREN@3212..3213 ")"
    WS@3213..3214 " "
    PP_DEFINE_BODY@3214..3230
      IDENT_KW@3214..3221 "M_NEST2"
      LPAREN@3221..3222 "("
      PP_CONCAT@3222..3230
        IDENT_KW@3222..3223 "p"
        WS@3223..3224 " "
        PP_CONCAT_OP@3224..3226 "##"
        WS@3226..3227 " "
        DIGITS@3227..3229 "20"
        RPAREN@3229..3230 ")"
    NEWLINE@3230..3232 "\r\n"
  IDENT_KW@3232..3239 "uniform"
  WS@3239..3240 " "
  IDENT_KW@3240..3248 "M_OUTER2"
  LPAREN@3248..3249 "("
  IDENT_KW@3249..3257 "argPaste"
  RPAREN@3257..3258 ")"
  SEMICOLON@3258..3259 ";"
  NEWLINE@3259..3261 "\r\n"
  NEWLINE@3261..3263 "\r\n"
  PP_DEFINE@3263..3281
    HASH@3263..3264 "#"
    IDENT_KW@3264..3270 "define"
    WS@3270..3271 " "
    IDENT_KW@3271..3274 "rec"
    PP_DEFINE_ARGS@3274..3277
      LPAREN@3274..3275 "("
      PP_DEFINE_ARG@3275..3276
        IDENT_KW@3275..3276 "x"
      RPAREN@3276..3277 ")"
    PP_DEFINE_BODY@3277..3279
      PP_CONCAT@3277..3279
        PP_CONCAT_OP@3277..3279 "##"
    NEWLINE@3279..3281 "\r\n"
  IDENT_KW@3281..3284 "rec"
  LPAREN@3284..3285 "("
  IDENT_KW@3285..3288 "rec"
  LPAREN@3288..3289 "("
  RPAREN@3289..3290 ")"
  RPAREN@3290..3291 ")"
  NEWLINE@3291..3293 "\r\n"
  NEWLINE@3293..3295 "\r\n"
  PP_DEFINE@3295..3313
    HASH@3295..3296 "#"
    IDENT_KW@3296..3302 "define"
    WS@3302..3303 " "
    IDENT_KW@3303..3306 "bax"
    PP_DEFINE_ARGS@3306..3311
      LPAREN@3306..3307 "("
      PP_DEFINE_ARG@3307..3310
        IDENT_KW@3307..3310 "bay"
      RPAREN@3310..3311 ")"
    PP_DEFINE_BODY@3311..3311
    NEWLINE@3311..3313 "\r\n"
  PP_DEFINE@3313..3335
    HASH@3313..3314 "#"
    IDENT_KW@3314..3320 "define"
    WS@3320..3321 " "
    IDENT_KW@3321..3324 "baz"
    WS@3324..3325 " "
    PP_DEFINE_BODY@3325..3333
      IDENT_KW@3325..3328 "bax"
      LPAREN@3328..3329 "("
      PP_CONCAT@3329..3333
        SLASH@3329..3330 "/"
        PP_CONCAT_OP@3330..3332 "##"
        RPAREN@3332..3333 ")"
    NEWLINE@3333..3335 "\r\n"
  IDENT_KW@3335..3338 "baz"
  NEWLINE@3338..3340 "\r\n"
