Ok(EnterFile { file_id: FileId(0), path: "../data/cppBad5.vert", canonical_path: "/data/cppBad5.vert" })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 0..3 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 3..4 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4..5 } "i", token_kind: IDENT("i"), state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 5..6 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 6..7 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@7..24, kind: Define(Define { name: "f", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@17..23 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@24..37, kind: Define(Define { name: "g", kind: Function(DefineFunction { args: ["m"], tokens: PP_DEFINE_BODY@36..36 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 41..42 } "\n", token_kind: WS, state: Active })
