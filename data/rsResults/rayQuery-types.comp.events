Ok(EnterFile { file_id: FileId(0), path: "../data/rayQuery-types.comp", canonical_path: "/data/rayQuery-types.comp" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 460, profile: Core }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@13..51, kind: Extension(Extension { name: Specific(Atom('GL_EXT_ray_query' type=dynamic)), behavior: Require }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 51..52 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 52..58 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 58..59 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 59..71 } "local_size_x", token_kind: IDENT("local_size_x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 71..72 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 72..73 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 73..74 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 74..76 } "16", token_kind: INT_CONST(16), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 76..77 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 77..78 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 78..90 } "local_size_y", token_kind: IDENT("local_size_y"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 90..91 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 91..92 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 92..93 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 93..94 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 94..95 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 95..96 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 96..108 } "local_size_z", token_kind: IDENT("local_size_z"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 108..109 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 109..110 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 110..111 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 111..112 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 112..113 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 113..114 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 114..116 } "in", token_kind: IN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 116..117 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 117..118 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 118..119 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 119..125 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 125..126 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 126..133 } "binding", token_kind: IDENT("binding"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 133..134 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 134..135 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 135..136 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 136..137 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 137..138 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 138..139 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 139..142 } "set", token_kind: IDENT("set"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 142..143 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 143..144 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 144..145 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 145..146 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 146..147 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 147..148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 148..155 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 155..156 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 156..180 } "accelerationStructureEXT", token_kind: TYPE_NAME(OTHER(Atom('accelerationStructureEXT' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 180..181 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 181..185 } "tlas", token_kind: IDENT("tlas"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 185..186 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 186..187 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 187..188 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 188..192 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 192..193 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 193..197 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 197..198 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 198..199 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 199..200 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 200..201 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 201..202 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 202..204 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 204..215 } "rayQueryEXT", token_kind: TYPE_NAME(OTHER(Atom('rayQueryEXT' type=dynamic))), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 215..216 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 216..224 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 224..225 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 225..226 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 226..228 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 228..249 } "rayQueryInitializeEXT", token_kind: IDENT("rayQueryInitializeEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 249..250 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 250..258 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 258..259 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 259..266 } "       ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 266..278 } "// Ray query", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 278..279 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 279..303 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 303..307 } "tlas", token_kind: IDENT("tlas"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 307..308 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 308..319 } "           ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 319..354 } "// Top-level accelera ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 354..355 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 355..379 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 379..380 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 380..381 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 381..395 } "              ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 395..407 } "// Ray flags", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 407..408 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 408..432 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 432..436 } "0xFF", token_kind: INT_CONST(255), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 436..437 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 437..448 } "           ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 448..470 } "// 8-bit instance mask", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 470..471 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 471..495 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 495..499 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 499..500 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 500..501 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 501..502 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 502..503 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 503..511 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 511..524 } "// Ray origin", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 524..525 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 525..549 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 549..552 } "0.0", token_kind: FLOAT_CONST(0.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 552..553 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 553..565 } "            ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 565..583 } "// Minimum t-value", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 583..584 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 584..608 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 608..612 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 612..613 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 613..614 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 614..615 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 615..616 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 616..617 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 617..618 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 618..619 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 619..620 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 620..621 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 621..622 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 622..624 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 624..640 } "// Ray direction", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 640..641 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 641..665 } "                        ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 665..672 } "10000.0", token_kind: FLOAT_CONST(10000.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 672..673 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 673..674 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 674..681 } "       ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 681..699 } "// Maximum t-value", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 699..700 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 700..701 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 701..703 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 703..761 } "// yes this is silly, ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 761..762 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 762..764 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 764..768 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 768..769 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 769..779 } "rq_proceed", token_kind: IDENT("rq_proceed"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 779..780 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 780..781 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 781..782 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 782..800 } "rayQueryProceedEXT", token_kind: IDENT("rayQueryProceedEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 800..801 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 801..809 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 809..810 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 810..811 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 811..812 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 812..814 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 814..819 } "while", token_kind: WHILE, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 819..820 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 820..830 } "rq_proceed", token_kind: IDENT("rq_proceed"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 830..831 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 831..832 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 832..834 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 834..835 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 835..836 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 836..840 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 840..850 } "rq_proceed", token_kind: IDENT("rq_proceed"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 850..851 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 851..852 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 852..853 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 853..871 } "rayQueryProceedEXT", token_kind: IDENT("rayQueryProceedEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 871..872 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 872..880 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 880..881 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 881..882 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 882..883 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 883..885 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 885..886 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 886..887 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 887..888 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 888..890 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 890..895 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 895..896 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 896..900 } "uint", token_kind: TYPE_NAME(UINT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 900..901 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 901..917 } "intersectionType", token_kind: IDENT("intersectionType"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 917..918 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 918..919 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 919..920 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 920..950 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionTypeEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 950..951 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 951..959 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 959..960 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 960..961 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 961..965 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 965..966 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 966..967 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 967..968 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 968..970 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 970..975 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 975..976 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 976..981 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 981..982 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 982..989 } "rayTMin", token_kind: IDENT("rayTMin"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 989..990 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 990..991 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 991..992 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 992..1013 } "rayQueryGetRayTMinEXT", token_kind: IDENT("rayQueryGetRayTMinEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1013..1014 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1014..1022 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1022..1023 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1023..1024 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1024..1025 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1025..1027 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1027..1032 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1032..1033 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1033..1037 } "uint", token_kind: TYPE_NAME(UINT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1037..1038 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1038..1046 } "rayFlags", token_kind: IDENT("rayFlags"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1046..1047 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1047..1048 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1048..1049 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1049..1071 } "rayQueryGetRayFlagsEXT", token_kind: IDENT("rayQueryGetRayFlagsEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1071..1072 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1072..1080 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1080..1081 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1081..1082 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1082..1083 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1083..1085 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1085..1090 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1090..1091 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1091..1095 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1095..1096 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1096..1110 } "worldRayOrigin", token_kind: IDENT("worldRayOrigin"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1110..1111 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1111..1112 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1112..1113 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1113..1141 } "rayQueryGetWorldRayOr ...", token_kind: IDENT("rayQueryGetWorldRayOriginEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1141..1142 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1142..1150 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1150..1151 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1151..1152 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1152..1153 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1153..1155 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1155..1160 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1160..1161 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1161..1165 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1165..1166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1166..1180 } "worldDirection", token_kind: IDENT("worldDirection"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1180..1181 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1181..1182 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1182..1183 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1183..1214 } "rayQueryGetWorldRayDi ...", token_kind: IDENT("rayQueryGetWorldRayDirectionEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1214..1215 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1215..1223 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1223..1224 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1224..1225 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1225..1226 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1226..1228 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1228..1233 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1233..1234 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1234..1239 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1239..1240 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1240..1253 } "intersectionT", token_kind: IDENT("intersectionT"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1253..1254 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1254..1255 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1255..1256 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1256..1283 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionTEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1283..1284 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1284..1292 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1292..1293 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1293..1294 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1294..1298 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1298..1299 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1299..1300 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1300..1301 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1301..1303 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1303..1308 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1308..1309 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1309..1312 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1312..1313 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1313..1324 } "customIndex", token_kind: IDENT("customIndex"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1324..1325 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1325..1326 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1326..1327 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1327..1372 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionInstanceCustomIndexEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1372..1373 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1373..1381 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1381..1382 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1382..1383 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1383..1387 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1387..1388 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1388..1389 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1389..1390 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1390..1392 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1392..1397 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1397..1398 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1398..1401 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1401..1402 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1402..1412 } "instanceId", token_kind: IDENT("instanceId"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1412..1413 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1413..1414 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1414..1415 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1415..1451 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionInstanceIdEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1451..1452 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1452..1460 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1460..1461 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1461..1462 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1462..1466 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1466..1467 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1467..1468 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1468..1469 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1469..1471 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1471..1476 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1476..1477 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1477..1481 } "uint", token_kind: TYPE_NAME(UINT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1481..1482 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1482..1491 } "sbtOffset", token_kind: IDENT("sbtOffset"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1491..1492 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1492..1493 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1493..1494 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1494..1558 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1558..1559 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1559..1567 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1567..1568 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1568..1569 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1569..1573 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1573..1574 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1574..1575 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1575..1576 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1576..1578 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1578..1583 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1583..1584 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1584..1587 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1587..1588 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1588..1601 } "geometryIndex", token_kind: IDENT("geometryIndex"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1601..1602 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1602..1603 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1603..1604 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1604..1643 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionGeometryIndexEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1643..1644 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1644..1652 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1652..1653 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1653..1654 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1654..1658 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1658..1659 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1659..1660 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1660..1661 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1661..1663 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1663..1668 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1668..1669 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1669..1672 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1672..1673 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1673..1687 } "primitiveIndex", token_kind: IDENT("primitiveIndex"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1687..1688 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1688..1689 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1689..1690 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1690..1730 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionPrimitiveIndexEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1730..1731 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1731..1739 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1739..1740 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1740..1741 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1741..1745 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1745..1746 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1746..1747 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1747..1748 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1748..1750 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1750..1755 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1755..1756 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1756..1760 } "vec2", token_kind: TYPE_NAME(VEC2), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1760..1761 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1761..1766 } "barys", token_kind: IDENT("barys"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1766..1767 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1767..1768 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1768..1769 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1769..1807 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionBarycentricsEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1807..1808 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1808..1816 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1816..1817 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1817..1818 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1818..1822 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1822..1823 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1823..1824 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1824..1825 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1825..1827 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1827..1832 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1832..1833 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1833..1837 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1837..1838 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1838..1847 } "frontface", token_kind: IDENT("frontface"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1847..1848 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1848..1849 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1849..1850 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1850..1885 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionFrontFaceEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1885..1886 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1886..1894 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1894..1895 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1895..1896 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1896..1900 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1900..1901 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1901..1902 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1902..1903 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1903..1905 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1905..1910 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1910..1911 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1911..1915 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1915..1916 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1916..1926 } "aabbOpaque", token_kind: IDENT("aabbOpaque"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1926..1927 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1927..1928 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1928..1929 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1929..1974 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionCandidateAABBOpaqueEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1974..1975 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1975..1983 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1983..1984 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1984..1985 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1985..1986 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1986..1988 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1988..1993 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1993..1994 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1994..1998 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1998..1999 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1999..2014 } "objRayDirection", token_kind: IDENT("objRayDirection"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2014..2015 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2015..2016 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2016..2017 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2017..2061 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionObjectRayDirectionEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2061..2062 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2062..2070 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2070..2071 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2071..2072 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2072..2076 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2076..2077 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2077..2078 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2078..2079 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2079..2081 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2081..2086 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2086..2087 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2087..2091 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2091..2092 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2092..2104 } "objRayOrigin", token_kind: IDENT("objRayOrigin"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2104..2105 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2105..2106 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2106..2107 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2107..2148 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionObjectRayOriginEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2148..2149 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2149..2157 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2157..2158 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2158..2159 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2159..2163 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2163..2164 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2164..2165 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2165..2166 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2166..2168 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2168..2173 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2173..2174 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2174..2180 } "mat4x3", token_kind: TYPE_NAME(MAT4X3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2180..2181 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2181..2191 } "objToWorld", token_kind: IDENT("objToWorld"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2191..2192 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2192..2193 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2193..2194 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2194..2233 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionObjectToWorldEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2233..2234 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2234..2242 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2242..2243 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2243..2244 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2244..2248 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2248..2249 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2249..2250 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2250..2251 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2251..2253 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2253..2258 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2258..2259 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2259..2265 } "mat4x3", token_kind: TYPE_NAME(MAT4X3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2265..2266 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2266..2276 } "worldToObj", token_kind: IDENT("worldToObj"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2276..2277 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2277..2278 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2278..2279 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2279..2318 } "rayQueryGetIntersecti ...", token_kind: IDENT("rayQueryGetIntersectionWorldToObjectEXT"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2318..2319 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2319..2327 } "rayQuery", token_kind: IDENT("rayQuery"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2327..2328 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2328..2329 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2329..2333 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2333..2334 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2334..2335 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2335..2336 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 2336..2337 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2337..2338 } "\n", token_kind: WS, state: Active })
