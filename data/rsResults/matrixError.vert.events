Ok(EnterFile { file_id: FileId(0), path: "../data/matrixError.vert", canonical_path: "/data/matrixError.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 120, profile: None }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 14..23 } "attribute", token_kind: ATTRIBUTE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 23..24 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 24..28 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 28..29 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 29..31 } "v3", token_kind: IDENT("v3"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 31..32 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 32..33 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 33..34 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 34..41 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 41..42 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 42..48 } "mat3x2", token_kind: TYPE_NAME(MAT3X2), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 48..49 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 49..52 } "m32", token_kind: IDENT("m32"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 52..53 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 53..54 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 54..55 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 55..60 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 60..61 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 61..67 } "mat2x4", token_kind: TYPE_NAME(MAT2X4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 67..68 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 68..71 } "m24", token_kind: IDENT("m24"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 71..72 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 72..73 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 73..74 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 74..80 } "mat2x4", token_kind: TYPE_NAME(MAT2X4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 80..81 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 81..84 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 84..85 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 85..86 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 86..89 } "2.0", token_kind: FLOAT_CONST(2.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 89..90 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 90..91 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 91..92 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 92..118 } "                      ...", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 118..121 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 121..122 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 122..123 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 123..126 } "4.0", token_kind: FLOAT_CONST(4.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 126..127 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 127..128 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 128..154 } "                      ...", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 154..157 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 157..158 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 158..159 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 159..162 } "4.0", token_kind: FLOAT_CONST(4.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 162..163 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 163..164 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 164..190 } "                      ...", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 190..193 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 193..194 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 194..195 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 195..198 } "4.0", token_kind: FLOAT_CONST(4.0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 198..199 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 199..200 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 200..203 } "5.0", token_kind: FLOAT_CONST(5.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 203..204 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 204..205 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 205..215 } "          ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 215..243 } "// ERROR, too many ar ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 243..244 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 244..245 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 245..249 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 249..250 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 250..254 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 254..255 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 255..256 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 256..257 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 257..258 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 258..259 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 259..263 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 263..269 } "mat2x3", token_kind: TYPE_NAME(MAT2X3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 269..270 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 270..273 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 273..274 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 274..275 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 275..279 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 279..283 } "vec3", token_kind: TYPE_NAME(VEC3), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 283..284 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 284..285 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 285..286 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 286..287 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 287..288 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 288..289 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 289..290 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 290..291 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 291..295 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 295..296 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 296..297 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 297..298 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 298..299 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 299..301 } "v3", token_kind: IDENT("v3"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 301..302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 302..303 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 303..304 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 304..307 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 307..308 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 308..314 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 314..337 } "// ERROR, type mismatch", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 337..338 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 338..342 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 342..343 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 343..344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 344..345 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 345..346 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 346..349 } "m32", token_kind: IDENT("m32"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 349..350 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 350..351 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 351..352 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 352..354 } "v3", token_kind: IDENT("v3"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 354..355 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 355..361 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 361..384 } "// ERROR, type mismatch", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 384..385 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 385..389 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 389..392 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 392..393 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 393..395 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 395..396 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 396..408 } "            ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 408..429 } "// ERROR, can't use .", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 429..430 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 430..431 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 431..435 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 435..446 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 446..447 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 447..448 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 448..449 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 449..453 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 453..454 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 454..457 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 457..458 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 458..459 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 459..460 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 460..463 } "m32", token_kind: IDENT("m32"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 463..464 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 464..465 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 465..466 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 466..468 } "v3", token_kind: IDENT("v3"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 468..469 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 469..470 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 470..473 } "m24", token_kind: IDENT("m24"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 473..474 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 474..475 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 475..476 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 476..477 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 477..478 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 478..479 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 479..480 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 480..481 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 481..483 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 483..517 } "// ERROR, 2 and 4 are ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 517..518 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 518..522 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 522..525 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 525..526 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: MUL_ASSIGN@NodeSpan { source_id: FileId(0), range: 526..528 } "*=", token_kind: MUL_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 528..529 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 529..532 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 532..533 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 533..541 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 541..580 } "// ERROR, right side  ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 580..581 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 581..585 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 585..588 } "m23", token_kind: IDENT("m23"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 588..589 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: MUL_ASSIGN@NodeSpan { source_id: FileId(0), range: 589..591 } "*=", token_kind: MUL_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 591..592 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 592..595 } "m32", token_kind: IDENT("m32"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 595..596 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 596..604 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 604..648 } "// ERROR, left column ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 648..649 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 649..650 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 650..651 } "\n", token_kind: WS, state: Active })
