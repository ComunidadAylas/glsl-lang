Ok(EnterFile { file_id: FileId(0), path: "../data/remap.hlsl.templatetypes.everything.frag", canonical_path: "/home/vincent/Applications/apps/glsl-lang/data/remap.hlsl.templatetypes.everything.frag" })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 0..1 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1..6 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 6..7 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 7..11 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 11..12 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 12..18 } "float4", token_kind: IDENT("float4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 18..19 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 19..24 } "input", token_kind: INPUT, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 24..25 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 25..26 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COLON@NodeSpan { source_id: FileId(0), range: 26..27 } ":", token_kind: COLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 27..28 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 28..34 } "COLOR0", token_kind: IDENT("COLOR0"), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 34..35 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 35..36 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 36..37 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 37..41 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 41..47 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 47..48 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 48..51 } "r00", token_kind: IDENT("r00"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 51..52 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 52..53 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 53..54 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 54..60 } "float4", token_kind: IDENT("float4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 60..61 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 61..62 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 62..63 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 63..64 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 64..65 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 65..66 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 66..67 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 67..68 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 68..69 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 69..70 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 70..72 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 72..94 } "// vector means float4", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 94..95 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 95..99 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 99..105 } "float4", token_kind: IDENT("float4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 105..106 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 106..109 } "r01", token_kind: IDENT("r01"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 109..110 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 110..111 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 111..112 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 112..118 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 118..119 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 119..120 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 120..121 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 121..122 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 122..123 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 123..124 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 124..125 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 125..126 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 126..127 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 127..128 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 128..130 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 130..152 } "// vector means float4", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 152..153 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 153..154 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 154..158 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 158..164 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 164..165 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 165..169 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 169..170 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 170..171 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 171..172 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 172..173 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 173..176 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 176..179 } "r12", token_kind: IDENT("r12"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 179..180 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 180..181 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 181..182 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 182..187 } "bool1", token_kind: IDENT("bool1"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 187..188 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 188..193 } "false", token_kind: BOOL_CONST(false), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 193..194 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 194..195 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 195..196 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 196..200 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 200..206 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 206..207 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 207..210 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 210..211 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 211..212 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 212..213 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 213..214 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 214..218 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 218..221 } "r13", token_kind: IDENT("r13"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 221..222 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 222..223 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 223..224 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 224..228 } "int1", token_kind: IDENT("int1"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 228..229 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 229..230 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 230..231 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 231..232 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 232..233 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 233..237 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 237..243 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 243..244 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 244..249 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 249..250 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 250..251 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 251..252 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 252..253 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 253..255 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 255..258 } "r14", token_kind: IDENT("r14"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 258..259 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 259..260 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 260..261 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 261..267 } "float1", token_kind: IDENT("float1"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 267..268 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 268..269 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 269..270 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 270..271 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 271..272 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 272..276 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 276..282 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 282..283 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 283..289 } "double", token_kind: IDENT("double"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 289..290 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 290..291 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 291..292 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 292..293 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 293..294 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 294..297 } "r15", token_kind: IDENT("r15"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 297..298 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 298..299 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 299..300 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 300..307 } "double1", token_kind: IDENT("double1"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 307..308 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 308..309 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 309..310 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 310..311 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 311..312 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 312..316 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 316..322 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 322..323 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 323..327 } "uint", token_kind: IDENT("uint"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 327..328 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 328..329 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 329..330 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 330..331 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 331..334 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 334..337 } "r16", token_kind: IDENT("r16"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 337..338 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 338..339 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 339..340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 340..345 } "uint1", token_kind: IDENT("uint1"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 345..346 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 346..347 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 347..348 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 348..349 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 349..350 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 350..351 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 351..355 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 355..361 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 361..362 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 362..366 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 366..367 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 367..368 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 368..369 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 369..370 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 370..373 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 373..376 } "r20", token_kind: IDENT("r20"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 376..377 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 377..378 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 378..379 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 379..384 } "bool2", token_kind: IDENT("bool2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 384..385 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 385..390 } "false", token_kind: BOOL_CONST(false), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 390..391 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 391..392 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 392..396 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 396..397 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 397..398 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 398..399 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 399..403 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 403..409 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 409..410 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 410..413 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 413..414 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 414..415 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 415..416 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 416..417 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 417..421 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 421..424 } "r21", token_kind: IDENT("r21"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 424..425 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 425..426 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 426..427 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 427..431 } "int2", token_kind: IDENT("int2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 431..432 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 432..433 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 433..434 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 434..435 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 435..436 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 436..437 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 437..438 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 438..442 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 442..448 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 448..449 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 449..454 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 454..455 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 455..456 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 456..457 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 457..458 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 458..460 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 460..463 } "r22", token_kind: IDENT("r22"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 463..464 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 464..465 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 465..466 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 466..472 } "float2", token_kind: IDENT("float2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 472..473 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 473..474 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 474..475 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 475..476 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 476..477 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 477..478 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 478..479 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 479..483 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 483..489 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 489..490 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 490..496 } "double", token_kind: IDENT("double"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 496..497 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 497..498 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 498..499 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 499..500 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 500..501 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 501..504 } "r23", token_kind: IDENT("r23"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 504..505 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 505..506 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 506..507 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 507..514 } "double2", token_kind: IDENT("double2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 514..515 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 515..516 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 516..517 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 517..518 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 518..519 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 519..520 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 520..521 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 521..525 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 525..531 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 531..532 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 532..536 } "uint", token_kind: IDENT("uint"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 536..537 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 537..538 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 538..539 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 539..540 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 540..543 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 543..546 } "r24", token_kind: IDENT("r24"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 546..547 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 547..548 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 548..549 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 549..554 } "uint2", token_kind: IDENT("uint2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 554..555 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 555..556 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 556..557 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 557..558 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 558..559 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 559..560 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 560..561 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 561..565 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 565..566 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 566..570 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 570..576 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 576..577 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 577..581 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 581..582 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 582..583 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 583..584 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 584..585 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 585..588 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 588..591 } "r30", token_kind: IDENT("r30"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 591..592 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 592..593 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 593..594 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 594..599 } "bool3", token_kind: IDENT("bool3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 599..600 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 600..605 } "false", token_kind: BOOL_CONST(false), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 605..606 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 606..607 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 607..611 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 611..612 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 612..613 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 613..617 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 617..618 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 618..619 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 619..620 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 620..624 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 624..630 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 630..631 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 631..634 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 634..635 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 635..636 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 636..637 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 637..638 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 638..642 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 642..645 } "r31", token_kind: IDENT("r31"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 645..646 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 646..647 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 647..648 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 648..652 } "int3", token_kind: IDENT("int3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 652..653 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 653..654 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 654..655 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 655..656 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 656..657 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 657..658 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 658..659 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 659..660 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 660..661 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 661..665 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 665..671 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 671..672 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 672..677 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 677..678 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 678..679 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 679..680 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 680..681 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 681..683 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 683..686 } "r32", token_kind: IDENT("r32"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 686..687 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 687..688 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 688..689 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 689..695 } "float3", token_kind: IDENT("float3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 695..696 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 696..697 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 697..698 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 698..699 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 699..700 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 700..701 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 701..702 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 702..703 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 703..704 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 704..708 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 708..714 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 714..715 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 715..721 } "double", token_kind: IDENT("double"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 721..722 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 722..723 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 723..724 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 724..725 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 725..726 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 726..729 } "r33", token_kind: IDENT("r33"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 729..730 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 730..731 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 731..732 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 732..739 } "double3", token_kind: IDENT("double3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 739..740 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 740..741 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 741..742 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 742..743 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 743..744 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 744..745 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 745..746 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 746..747 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 747..748 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 748..752 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 752..758 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 758..759 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 759..763 } "uint", token_kind: IDENT("uint"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 763..764 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 764..765 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 765..766 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 766..767 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 767..770 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 770..773 } "r34", token_kind: IDENT("r34"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 773..774 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 774..775 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 775..776 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 776..781 } "uint3", token_kind: IDENT("uint3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 781..782 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 782..783 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 783..784 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 784..785 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 785..786 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 786..787 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 787..788 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 788..789 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 789..790 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 790..791 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 791..795 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 795..801 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 801..802 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 802..806 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 806..807 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 807..808 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 808..809 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 809..810 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 810..813 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 813..816 } "r40", token_kind: IDENT("r40"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 816..817 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 817..818 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 818..819 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 819..824 } "bool4", token_kind: IDENT("bool4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 824..825 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 825..830 } "false", token_kind: BOOL_CONST(false), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 830..831 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 831..832 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 832..836 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 836..837 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 837..838 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 838..842 } "true", token_kind: BOOL_CONST(true), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 842..843 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 843..844 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 844..849 } "false", token_kind: BOOL_CONST(false), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 849..850 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 850..851 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 851..852 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 852..856 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 856..862 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 862..863 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 863..866 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 866..867 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 867..868 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 868..869 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 869..870 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 870..874 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 874..877 } "r41", token_kind: IDENT("r41"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 877..878 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 878..879 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 879..880 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 880..884 } "int4", token_kind: IDENT("int4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 884..885 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 885..886 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 886..887 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 887..888 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 888..889 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 889..890 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 890..891 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 891..892 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 892..893 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 893..894 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 894..895 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 895..899 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 899..905 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 905..906 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 906..911 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 911..912 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 912..913 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 913..914 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 914..915 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 915..917 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 917..920 } "r42", token_kind: IDENT("r42"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 920..921 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 921..922 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 922..923 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 923..929 } "float4", token_kind: IDENT("float4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 929..930 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 930..931 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 931..932 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 932..933 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 933..934 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 934..935 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 935..936 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 936..937 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 937..938 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 938..939 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 939..940 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 940..944 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 944..950 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 950..951 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 951..957 } "double", token_kind: IDENT("double"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 957..958 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 958..959 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 959..960 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 960..961 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 961..962 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 962..965 } "r43", token_kind: IDENT("r43"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 965..966 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 966..967 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 967..968 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 968..975 } "double4", token_kind: IDENT("double4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 975..976 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 976..977 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 977..978 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 978..979 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 979..980 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 980..981 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 981..982 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 982..983 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 983..984 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 984..985 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 985..986 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 986..990 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 990..996 } "vector", token_kind: IDENT("vector"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 996..997 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 997..1001 } "uint", token_kind: IDENT("uint"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1001..1002 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1002..1003 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1003..1004 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 1004..1005 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1005..1008 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1008..1011 } "r44", token_kind: IDENT("r44"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1011..1012 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1012..1013 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1013..1014 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1014..1019 } "uint4", token_kind: IDENT("uint4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1019..1020 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1020..1021 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1021..1022 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1022..1023 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1023..1024 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1024..1025 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1025..1026 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1026..1027 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1027..1028 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1028..1029 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1029..1030 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1030..1031 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1031..1035 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1035..1041 } "matrix", token_kind: IDENT("matrix"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1041..1044 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1044..1047 } "r50", token_kind: IDENT("r50"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1047..1048 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1048..1049 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1049..1050 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1050..1058 } "float4x4", token_kind: IDENT("float4x4"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1058..1059 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1059..1060 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1060..1061 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1061..1062 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1062..1063 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1063..1064 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1064..1065 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1065..1066 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1066..1067 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1067..1068 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1068..1069 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1069..1070 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1070..1071 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1071..1072 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1072..1073 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1073..1074 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1074..1075 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1075..1076 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1076..1077 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1077..1078 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1078..1079 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1079..1081 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1081..1082 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1082..1084 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1084..1085 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1085..1087 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1087..1088 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1088..1090 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1090..1091 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1091..1093 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1093..1094 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1094..1096 } "15", token_kind: INT_CONST(15), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1096..1097 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1097..1098 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1098..1099 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1099..1123 } "// matrix means float4x4", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1123..1124 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1124..1128 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1128..1136 } "float4x4", token_kind: IDENT("float4x4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1136..1137 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1137..1140 } "r51", token_kind: IDENT("r51"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1140..1141 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1141..1142 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1142..1143 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1143..1149 } "matrix", token_kind: IDENT("matrix"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1149..1150 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1150..1151 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1151..1152 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1152..1153 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1153..1154 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1154..1155 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1155..1156 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1156..1157 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1157..1158 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1158..1159 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1159..1160 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1160..1161 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1161..1162 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1162..1163 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1163..1164 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1164..1165 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1165..1166 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1166..1167 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1167..1168 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1168..1169 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1169..1170 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1170..1172 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1172..1173 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1173..1175 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1175..1176 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1176..1178 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1178..1179 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1179..1181 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1181..1182 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1182..1184 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1184..1185 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1185..1187 } "15", token_kind: INT_CONST(15), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1187..1188 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1188..1189 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1189..1192 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1192..1216 } "// matrix means float4x4", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1216..1217 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1217..1218 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1218..1222 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1222..1310 } "// matrix<bool, 2, 3> ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1310..1311 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1311..1315 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1315..1321 } "matrix", token_kind: IDENT("matrix"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1321..1322 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1322..1327 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1327..1328 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1328..1329 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1329..1330 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1330..1331 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1331..1332 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1332..1333 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 1333..1334 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1334..1335 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1335..1338 } "r61", token_kind: IDENT("r61"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1338..1339 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1339..1340 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1340..1341 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1341..1349 } "float2x3", token_kind: IDENT("float2x3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1349..1350 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1350..1351 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1351..1352 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1352..1353 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1353..1354 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1354..1355 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1355..1356 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1356..1357 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1357..1358 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1358..1359 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1359..1360 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1360..1361 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1361..1362 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1362..1363 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1363..1364 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1364..1368 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1368..1374 } "matrix", token_kind: IDENT("matrix"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1374..1375 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1375..1380 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1380..1381 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1381..1382 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1382..1383 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1383..1384 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1384..1385 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1385..1386 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 1386..1387 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1387..1388 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1388..1391 } "r62", token_kind: IDENT("r62"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1391..1392 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1392..1393 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1393..1394 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1394..1402 } "float3x2", token_kind: IDENT("float3x2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1402..1403 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1403..1404 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1404..1405 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1405..1406 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1406..1407 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1407..1408 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1408..1409 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1409..1410 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1410..1411 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1411..1412 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1412..1413 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1413..1414 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1414..1415 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1415..1416 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1416..1417 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1417..1421 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1421..1479 } "// matrix<float, 4, 1 ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1479..1480 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1480..1484 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1484..1542 } "// matrix<float, 1, 4 ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1542..1543 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1543..1547 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1547..1553 } "matrix", token_kind: IDENT("matrix"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1553..1554 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1554..1559 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1559..1560 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1560..1561 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1561..1562 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1562..1563 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1563..1564 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1564..1565 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 1565..1566 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1566..1567 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1567..1570 } "r65", token_kind: IDENT("r65"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1570..1571 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1571..1572 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1572..1573 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1573..1581 } "float4x2", token_kind: IDENT("float4x2"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1581..1582 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1582..1583 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1583..1584 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1584..1585 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1585..1586 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1586..1587 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1587..1588 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1588..1589 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1589..1590 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1590..1591 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1591..1592 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1592..1593 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1593..1594 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1594..1595 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1595..1596 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1596..1597 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1597..1598 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1598..1599 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1599..1600 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1600..1604 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1604..1610 } "matrix", token_kind: IDENT("matrix"), state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1610..1611 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1611..1616 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1616..1617 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1617..1618 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1618..1619 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1619..1620 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1620..1621 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1621..1622 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RANGLE@NodeSpan { source_id: FileId(0), range: 1622..1623 } ">", token_kind: RANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1623..1624 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1624..1627 } "r66", token_kind: IDENT("r66"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1627..1628 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1628..1629 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1629..1630 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1630..1638 } "float4x3", token_kind: IDENT("float4x3"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1638..1639 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1639..1640 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1640..1641 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1641..1642 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1642..1643 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1643..1644 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1644..1645 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1645..1646 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1646..1647 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1647..1648 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1648..1649 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1649..1650 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1650..1651 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1651..1652 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1652..1653 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1653..1654 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1654..1655 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1655..1656 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1656..1657 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1657..1659 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1659..1660 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1660..1662 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1662..1663 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1663..1665 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1665..1666 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1666..1667 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1667..1668 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1668..1669 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1669..1673 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1673..1691 } "// TODO: bool mats", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1691..1692 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1692..1696 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1696..1713 } "// TODO: int mats", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1713..1714 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1714..1718 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1718..1719 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1719..1723 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1723..1729 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1729..1730 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1730..1733 } "0.0", token_kind: FLOAT_CONST(0.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1733..1734 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1734..1735 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1735..1736 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1736..1737 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1737..1738 } "\n", token_kind: WS, state: Active })
