ROOT@0..2743
  PP_VERSION@0..13
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "450"
    NEWLINE@12..13 "\n"
  PP_EXTENSION@13..61
    HASH@13..14 "#"
    IDENT_KW@14..23 "extension"
    WS@23..24 " "
    IDENT_KW@24..50 "GL_EXT_tessellation_s ..."
    WS@50..51 " "
    COLON@51..52 ":"
    WS@52..53 " "
    IDENT_KW@53..60 "require"
    NEWLINE@60..61 "\n"
  PP_EXTENSION@61..101
    HASH@61..62 "#"
    IDENT_KW@62..71 "extension"
    WS@71..72 " "
    IDENT_KW@72..90 "GL_EXT_gpu_shader5"
    WS@90..91 " "
    COLON@91..92 ":"
    WS@92..93 " "
    IDENT_KW@93..100 "require"
    NEWLINE@100..101 "\n"
  NEWLINE@101..102 "\n"
  IDENT_KW@102..107 "float"
  WS@107..108 " "
  IDENT_KW@108..115 "minimal"
  LPAREN@115..116 "("
  RPAREN@116..117 ")"
  WS@117..118 " "
  LBRACE@118..119 "{"
  NEWLINE@119..120 "\n"
  WS@120..122 "  "
  IDENT_KW@122..129 "precise"
  WS@129..130 " "
  IDENT_KW@130..135 "float"
  WS@135..136 " "
  IDENT_KW@136..142 "result"
  WS@142..143 " "
  EQUAL@143..144 "="
  WS@144..145 " "
  DIGITS@145..148 "5.0"
  SEMICOLON@148..149 ";"
  NEWLINE@149..150 "\n"
  WS@150..152 "  "
  IDENT_KW@152..157 "float"
  WS@157..158 " "
  IDENT_KW@158..159 "a"
  WS@159..160 " "
  EQUAL@160..161 "="
  WS@161..162 " "
  DIGITS@162..166 "10.0"
  SEMICOLON@166..167 ";"
  NEWLINE@167..168 "\n"
  WS@168..170 "  "
  IDENT_KW@170..175 "float"
  WS@175..176 " "
  IDENT_KW@176..177 "b"
  WS@177..178 " "
  EQUAL@178..179 "="
  WS@179..180 " "
  DIGITS@180..184 "20.0"
  SEMICOLON@184..185 ";"
  NEWLINE@185..186 "\n"
  WS@186..188 "  "
  IDENT_KW@188..193 "float"
  WS@193..194 " "
  IDENT_KW@194..195 "c"
  WS@195..196 " "
  EQUAL@196..197 "="
  WS@197..198 " "
  DIGITS@198..202 "30.0"
  SEMICOLON@202..203 ";"
  NEWLINE@203..204 "\n"
  WS@204..206 "  "
  IDENT_KW@206..211 "float"
  WS@211..212 " "
  IDENT_KW@212..213 "d"
  WS@213..214 " "
  EQUAL@214..215 "="
  WS@215..216 " "
  DIGITS@216..220 "40.0"
  SEMICOLON@220..221 ";"
  NEWLINE@221..222 "\n"
  WS@222..224 "  "
  IDENT_KW@224..230 "result"
  WS@230..231 " "
  EQUAL@231..232 "="
  WS@232..233 " "
  IDENT_KW@233..234 "a"
  WS@234..235 " "
  ASTERISK@235..236 "*"
  WS@236..237 " "
  IDENT_KW@237..238 "b"
  WS@238..239 " "
  PLUS@239..240 "+"
  WS@240..241 " "
  IDENT_KW@241..242 "c"
  WS@242..243 " "
  ASTERISK@243..244 "*"
  WS@244..245 " "
  IDENT_KW@245..246 "d"
  SEMICOLON@246..247 ";"
  WS@247..248 " "
  COMMENT@248..313 "//  c * d, a * b and  ..."
  NEWLINE@313..314 "\n"
  WS@314..316 "  "
  IDENT_KW@316..322 "return"
  WS@322..323 " "
  IDENT_KW@323..329 "result"
  SEMICOLON@329..330 ";"
  NEWLINE@330..331 "\n"
  RBRACE@331..332 "}"
  NEWLINE@332..333 "\n"
  NEWLINE@333..334 "\n"
  IDENT_KW@334..338 "void"
  WS@338..339 " "
  IDENT_KW@339..360 "continuous_assignment"
  LPAREN@360..361 "("
  RPAREN@361..362 ")"
  WS@362..363 " "
  LBRACE@363..364 "{"
  NEWLINE@364..365 "\n"
  WS@365..367 "  "
  IDENT_KW@367..374 "precise"
  WS@374..375 " "
  IDENT_KW@375..380 "float"
  WS@380..381 " "
  IDENT_KW@381..387 "result"
  WS@387..388 " "
  EQUAL@388..389 "="
  WS@389..390 " "
  DIGITS@390..393 "5.0"
  SEMICOLON@393..394 ";"
  NEWLINE@394..395 "\n"
  WS@395..397 "  "
  IDENT_KW@397..402 "float"
  WS@402..403 " "
  IDENT_KW@403..404 "a"
  WS@404..405 " "
  EQUAL@405..406 "="
  WS@406..407 " "
  DIGITS@407..411 "10.0"
  SEMICOLON@411..412 ";"
  NEWLINE@412..413 "\n"
  WS@413..415 "  "
  IDENT_KW@415..420 "float"
  WS@420..421 " "
  IDENT_KW@421..422 "b"
  WS@422..423 " "
  EQUAL@423..424 "="
  WS@424..425 " "
  DIGITS@425..429 "20.0"
  SEMICOLON@429..430 ";"
  NEWLINE@430..431 "\n"
  WS@431..433 "  "
  IDENT_KW@433..439 "result"
  WS@439..440 " "
  EQUAL@440..441 "="
  WS@441..442 " "
  IDENT_KW@442..443 "a"
  WS@443..444 " "
  EQUAL@444..445 "="
  WS@445..446 " "
  IDENT_KW@446..447 "b"
  WS@447..448 " "
  PLUS@448..449 "+"
  WS@449..450 " "
  DIGITS@450..451 "4"
  SEMICOLON@451..452 ";"
  WS@452..453 " "
  COMMENT@453..488 "// b + 4 should be 'n ..."
  NEWLINE@488..489 "\n"
  RBRACE@489..490 "}"
  NEWLINE@490..491 "\n"
  NEWLINE@491..492 "\n"
  IDENT_KW@492..496 "void"
  WS@496..497 " "
  IDENT_KW@497..504 "convert"
  LPAREN@504..505 "("
  RPAREN@505..506 ")"
  WS@506..507 " "
  LBRACE@507..508 "{"
  NEWLINE@508..509 "\n"
  WS@509..511 "  "
  IDENT_KW@511..518 "precise"
  WS@518..519 " "
  IDENT_KW@519..525 "double"
  WS@525..526 " "
  IDENT_KW@526..532 "result"
  SEMICOLON@532..533 ";"
  NEWLINE@533..534 "\n"
  WS@534..536 "  "
  IDENT_KW@536..541 "float"
  WS@541..542 " "
  IDENT_KW@542..543 "a"
  WS@543..544 " "
  EQUAL@544..545 "="
  WS@545..546 " "
  DIGITS@546..550 "10.0"
  SEMICOLON@550..551 ";"
  NEWLINE@551..552 "\n"
  WS@552..554 "  "
  IDENT_KW@554..559 "float"
  WS@559..560 " "
  IDENT_KW@560..561 "b"
  WS@561..562 " "
  EQUAL@562..563 "="
  WS@563..564 " "
  DIGITS@564..568 "20.0"
  SEMICOLON@568..569 ";"
  NEWLINE@569..570 "\n"
  WS@570..572 "  "
  IDENT_KW@572..573 "b"
  WS@573..574 " "
  EQUAL@574..575 "="
  WS@575..576 " "
  IDENT_KW@576..577 "a"
  WS@577..578 " "
  PLUS@578..579 "+"
  WS@579..580 " "
  IDENT_KW@580..581 "b"
  SEMICOLON@581..582 ";"
  WS@582..583 " "
  COMMENT@583..619 "//  a + b should be ' ..."
  NEWLINE@619..620 "\n"
  WS@620..622 "  "
  IDENT_KW@622..628 "result"
  WS@628..630 "  "
  EQUAL@630..631 "="
  WS@631..632 " "
  IDENT_KW@632..638 "double"
  LPAREN@638..639 "("
  IDENT_KW@639..640 "b"
  RPAREN@640..641 ")"
  SEMICOLON@641..642 ";"
  WS@642..643 " "
  COMMENT@643..694 "// convert operation  ..."
  NEWLINE@694..695 "\n"
  RBRACE@695..696 "}"
  NEWLINE@696..697 "\n"
  NEWLINE@697..698 "\n"
  IDENT_KW@698..703 "float"
  WS@703..704 " "
  IDENT_KW@704..712 "loop_for"
  LPAREN@712..713 "("
  RPAREN@713..714 ")"
  WS@714..715 " "
  LBRACE@715..716 "{"
  NEWLINE@716..717 "\n"
  WS@717..719 "  "
  IDENT_KW@719..726 "precise"
  WS@726..727 " "
  IDENT_KW@727..732 "float"
  WS@732..733 " "
  IDENT_KW@733..735 "r1"
  WS@735..736 " "
  EQUAL@736..737 "="
  WS@737..738 " "
  DIGITS@738..741 "5.0"
  SEMICOLON@741..742 ";"
  NEWLINE@742..743 "\n"
  WS@743..745 "  "
  IDENT_KW@745..752 "precise"
  WS@752..753 " "
  IDENT_KW@753..758 "float"
  WS@758..759 " "
  IDENT_KW@759..761 "r2"
  WS@761..762 " "
  EQUAL@762..763 "="
  WS@763..764 " "
  DIGITS@764..768 "10.0"
  SEMICOLON@768..769 ";"
  NEWLINE@769..770 "\n"
  WS@770..772 "  "
  IDENT_KW@772..775 "int"
  WS@775..776 " "
  IDENT_KW@776..777 "a"
  WS@777..778 " "
  EQUAL@778..779 "="
  WS@779..780 " "
  DIGITS@780..782 "10"
  SEMICOLON@782..783 ";"
  NEWLINE@783..784 "\n"
  WS@784..786 "  "
  IDENT_KW@786..789 "int"
  WS@789..790 " "
  IDENT_KW@790..791 "b"
  WS@791..792 " "
  EQUAL@792..793 "="
  WS@793..794 " "
  DIGITS@794..796 "20"
  SEMICOLON@796..797 ";"
  NEWLINE@797..798 "\n"
  WS@798..800 "  "
  IDENT_KW@800..803 "int"
  WS@803..804 " "
  IDENT_KW@804..805 "c"
  WS@805..806 " "
  EQUAL@806..807 "="
  WS@807..808 " "
  DIGITS@808..810 "30"
  SEMICOLON@810..811 ";"
  NEWLINE@811..812 "\n"
  WS@812..814 "  "
  IDENT_KW@814..817 "for"
  WS@817..818 " "
  LPAREN@818..819 "("
  IDENT_KW@819..822 "int"
  WS@822..823 " "
  IDENT_KW@823..824 "i"
  WS@824..825 " "
  EQUAL@825..826 "="
  WS@826..827 " "
  DIGITS@827..828 "0"
  SEMICOLON@828..829 ";"
  WS@829..830 " "
  IDENT_KW@830..831 "i"
  WS@831..832 " "
  LANGLE@832..833 "<"
  WS@833..834 " "
  IDENT_KW@834..835 "a"
  SEMICOLON@835..836 ";"
  WS@836..837 " "
  IDENT_KW@837..838 "i"
  INC_OP@838..840 "++"
  RPAREN@840..841 ")"
  WS@841..842 " "
  LBRACE@842..843 "{"
  NEWLINE@843..844 "\n"
  WS@844..848 "    "
  IDENT_KW@848..850 "r1"
  WS@850..851 " "
  ADD_ASSIGN@851..853 "+="
  WS@853..854 " "
  DIGITS@854..858 "3.12"
  WS@858..859 " "
  PLUS@859..860 "+"
  WS@860..861 " "
  IDENT_KW@861..862 "b"
  WS@862..863 " "
  PLUS@863..864 "+"
  WS@864..865 " "
  IDENT_KW@865..866 "i"
  SEMICOLON@866..867 ";"
  WS@867..868 " "
  COMMENT@868..921 "// 'noContration', th ..."
  NEWLINE@921..922 "\n"
  WS@922..926 "    "
  IDENT_KW@926..927 "c"
  WS@927..928 " "
  ADD_ASSIGN@928..930 "+="
  WS@930..931 " "
  DIGITS@931..932 "1"
  SEMICOLON@932..933 ";"
  WS@933..934 " "
  COMMENT@934..951 "// 'noContration'"
  NEWLINE@951..952 "\n"
  WS@952..954 "  "
  RBRACE@954..955 "}"
  NEWLINE@955..956 "\n"
  WS@956..958 "  "
  IDENT_KW@958..959 "a"
  WS@959..960 " "
  ADD_ASSIGN@960..962 "+="
  WS@962..963 " "
  DIGITS@963..964 "1"
  SEMICOLON@964..965 ";"
  WS@965..966 " "
  COMMENT@966..1005 "// a + 1 should not b ..."
  NEWLINE@1005..1006 "\n"
  WS@1006..1008 "  "
  IDENT_KW@1008..1010 "r2"
  WS@1010..1011 " "
  EQUAL@1011..1012 "="
  WS@1012..1013 " "
  IDENT_KW@1013..1014 "c"
  SEMICOLON@1014..1015 ";"
  WS@1015..1016 " "
  COMMENT@1016..1065 "// The calculation of ..."
  NEWLINE@1065..1066 "\n"
  WS@1066..1068 "  "
  IDENT_KW@1068..1074 "return"
  WS@1074..1075 " "
  IDENT_KW@1075..1080 "float"
  LPAREN@1080..1081 "("
  IDENT_KW@1081..1083 "r1"
  WS@1083..1084 " "
  PLUS@1084..1085 "+"
  WS@1085..1086 " "
  IDENT_KW@1086..1088 "r2"
  RPAREN@1088..1089 ")"
  SEMICOLON@1089..1090 ";"
  WS@1090..1091 " "
  COMMENT@1091..1134 "// conversion should  ..."
  NEWLINE@1134..1135 "\n"
  RBRACE@1135..1136 "}"
  NEWLINE@1136..1137 "\n"
  NEWLINE@1137..1138 "\n"
  IDENT_KW@1138..1142 "void"
  WS@1142..1143 " "
  IDENT_KW@1143..1153 "loop_array"
  LPAREN@1153..1154 "("
  IDENT_KW@1154..1158 "void"
  RPAREN@1158..1159 ")"
  WS@1159..1160 " "
  LBRACE@1160..1161 "{"
  NEWLINE@1161..1162 "\n"
  WS@1162..1164 "  "
  IDENT_KW@1164..1171 "precise"
  WS@1171..1172 " "
  IDENT_KW@1172..1177 "float"
  WS@1177..1178 " "
  IDENT_KW@1178..1184 "result"
  SEMICOLON@1184..1185 ";"
  NEWLINE@1185..1186 "\n"
  NEWLINE@1186..1187 "\n"
  WS@1187..1189 "  "
  IDENT_KW@1189..1192 "int"
  WS@1192..1193 " "
  IDENT_KW@1193..1194 "x"
  WS@1194..1195 " "
  EQUAL@1195..1196 "="
  WS@1196..1197 " "
  DIGITS@1197..1199 "22"
  SEMICOLON@1199..1200 ";"
  NEWLINE@1200..1201 "\n"
  WS@1201..1203 "  "
  IDENT_KW@1203..1206 "int"
  WS@1206..1207 " "
  IDENT_KW@1207..1208 "y"
  WS@1208..1209 " "
  EQUAL@1209..1210 "="
  WS@1210..1211 " "
  DIGITS@1211..1213 "33"
  SEMICOLON@1213..1214 ";"
  NEWLINE@1214..1215 "\n"
  NEWLINE@1215..1216 "\n"
  WS@1216..1218 "  "
  IDENT_KW@1218..1223 "float"
  WS@1223..1224 " "
  IDENT_KW@1224..1226 "a0"
  LBRACKET@1226..1227 "["
  DIGITS@1227..1228 "3"
  RBRACKET@1228..1229 "]"
  SEMICOLON@1229..1230 ";"
  NEWLINE@1230..1231 "\n"
  WS@1231..1233 "  "
  IDENT_KW@1233..1239 "result"
  WS@1239..1240 " "
  ADD_ASSIGN@1240..1242 "+="
  WS@1242..1243 " "
  IDENT_KW@1243..1248 "float"
  LPAREN@1248..1249 "("
  IDENT_KW@1249..1250 "x"
  RPAREN@1250..1251 ")"
  WS@1251..1252 " "
  PLUS@1252..1253 "+"
  WS@1253..1254 " "
  IDENT_KW@1254..1259 "float"
  LPAREN@1259..1260 "("
  IDENT_KW@1260..1261 "y"
  RPAREN@1261..1262 ")"
  SEMICOLON@1262..1263 ";"
  WS@1263..1264 " "
  COMMENT@1264..1320 "// x + y should be 'n ..."
  NEWLINE@1320..1321 "\n"
  NEWLINE@1321..1322 "\n"
  WS@1322..1324 "  "
  IDENT_KW@1324..1327 "for"
  WS@1327..1328 " "
  LPAREN@1328..1329 "("
  IDENT_KW@1329..1332 "int"
  WS@1332..1333 " "
  IDENT_KW@1333..1334 "i"
  WS@1334..1335 " "
  EQUAL@1335..1336 "="
  WS@1336..1337 " "
  DIGITS@1337..1338 "0"
  SEMICOLON@1338..1339 ";"
  WS@1339..1340 " "
  IDENT_KW@1340..1341 "i"
  WS@1341..1342 " "
  LANGLE@1342..1343 "<"
  WS@1343..1344 " "
  DIGITS@1344..1345 "3"
  SEMICOLON@1345..1346 ";"
  WS@1346..1347 " "
  INC_OP@1347..1349 "++"
  IDENT_KW@1349..1350 "i"
  RPAREN@1350..1351 ")"
  WS@1351..1352 " "
  LBRACE@1352..1353 "{"
  NEWLINE@1353..1354 "\n"
  WS@1354..1358 "    "
  COMMENT@1358..1407 "// a's dereference +  ..."
  NEWLINE@1407..1408 "\n"
  WS@1408..1412 "    "
  IDENT_KW@1412..1418 "result"
  WS@1418..1419 " "
  ADD_ASSIGN@1419..1421 "+="
  WS@1421..1422 " "
  IDENT_KW@1422..1424 "a0"
  LBRACKET@1424..1425 "["
  IDENT_KW@1425..1426 "i"
  RBRACKET@1426..1427 "]"
  WS@1427..1428 " "
  PLUS@1428..1429 "+"
  WS@1429..1430 " "
  DIGITS@1430..1431 "2"
  SEMICOLON@1431..1432 ";"
  NEWLINE@1432..1433 "\n"
  WS@1433..1437 "    "
  COMMENT@1437..1492 "// result + 1 and 3 - ..."
  NEWLINE@1492..1493 "\n"
  WS@1493..1497 "    "
  IDENT_KW@1497..1499 "a0"
  LBRACKET@1499..1500 "["
  IDENT_KW@1500..1501 "i"
  RBRACKET@1501..1502 "]"
  WS@1502..1503 " "
  EQUAL@1503..1504 "="
  WS@1504..1505 " "
  DIGITS@1505..1506 "3"
  WS@1506..1507 " "
  DASH@1507..1508 "-"
  WS@1508..1509 " "
  IDENT_KW@1509..1515 "result"
  INC_OP@1515..1517 "++"
  SEMICOLON@1517..1518 ";"
  NEWLINE@1518..1519 "\n"
  WS@1519..1521 "  "
  RBRACE@1521..1522 "}"
  NEWLINE@1522..1523 "\n"
  RBRACE@1523..1524 "}"
  NEWLINE@1524..1525 "\n"
  NEWLINE@1525..1526 "\n"
  IDENT_KW@1526..1530 "void"
  WS@1530..1531 " "
  IDENT_KW@1531..1541 "loop_while"
  LPAREN@1541..1542 "("
  RPAREN@1542..1543 ")"
  WS@1543..1544 " "
  LBRACE@1544..1545 "{"
  NEWLINE@1545..1546 "\n"
  WS@1546..1548 "  "
  IDENT_KW@1548..1555 "precise"
  WS@1555..1556 " "
  IDENT_KW@1556..1561 "float"
  WS@1561..1562 " "
  IDENT_KW@1562..1568 "result"
  WS@1568..1569 " "
  EQUAL@1569..1570 "="
  WS@1570..1571 " "
  DIGITS@1571..1574 "5.0"
  SEMICOLON@1574..1575 ";"
  NEWLINE@1575..1576 "\n"
  WS@1576..1578 "  "
  IDENT_KW@1578..1581 "int"
  WS@1581..1582 " "
  IDENT_KW@1582..1583 "a"
  WS@1583..1584 " "
  EQUAL@1584..1585 "="
  WS@1585..1586 " "
  DIGITS@1586..1588 "10"
  SEMICOLON@1588..1589 ";"
  NEWLINE@1589..1590 "\n"
  WS@1590..1592 "  "
  IDENT_KW@1592..1595 "int"
  WS@1595..1596 " "
  IDENT_KW@1596..1597 "b"
  WS@1597..1598 " "
  EQUAL@1598..1599 "="
  WS@1599..1600 " "
  DIGITS@1600..1602 "20"
  SEMICOLON@1602..1603 ";"
  NEWLINE@1603..1604 "\n"
  WS@1604..1606 "  "
  IDENT_KW@1606..1611 "while"
  WS@1611..1612 " "
  LPAREN@1612..1613 "("
  IDENT_KW@1613..1619 "result"
  WS@1619..1620 " "
  LANGLE@1620..1621 "<"
  WS@1621..1622 " "
  DIGITS@1622..1624 "10"
  RPAREN@1624..1625 ")"
  WS@1625..1626 " "
  LBRACE@1626..1627 "{"
  NEWLINE@1627..1628 "\n"
  WS@1628..1632 "    "
  IDENT_KW@1632..1638 "result"
  WS@1638..1639 " "
  ADD_ASSIGN@1639..1641 "+="
  WS@1641..1642 " "
  DIGITS@1642..1646 "3.12"
  WS@1646..1647 " "
  PLUS@1647..1648 "+"
  WS@1648..1649 " "
  IDENT_KW@1649..1650 "b"
  SEMICOLON@1650..1651 ";"
  WS@1651..1652 " "
  COMMENT@1652..1695 "// result + 3.12 shou ..."
  NEWLINE@1695..1696 "\n"
  WS@1696..1698 "  "
  RBRACE@1698..1699 "}"
  NEWLINE@1699..1700 "\n"
  WS@1700..1702 "  "
  IDENT_KW@1702..1708 "result"
  WS@1708..1709 " "
  EQUAL@1709..1710 "="
  WS@1710..1711 " "
  IDENT_KW@1711..1712 "a"
  WS@1712..1713 " "
  PLUS@1713..1714 "+"
  WS@1714..1715 " "
  IDENT_KW@1715..1716 "b"
  WS@1716..1717 " "
  PLUS@1717..1718 "+"
  WS@1718..1719 " "
  DIGITS@1719..1720 "5"
  SEMICOLON@1720..1721 ";"
  WS@1721..1722 " "
  COMMENT@1722..1793 "// b + 5 should not b ..."
  NEWLINE@1793..1794 "\n"
  WS@1794..1796 "  "
  IDENT_KW@1796..1802 "result"
  WS@1802..1803 " "
  EQUAL@1803..1804 "="
  WS@1804..1805 " "
  DIGITS@1805..1809 "11.1"
  SEMICOLON@1809..1810 ";"
  NEWLINE@1810..1811 "\n"
  RBRACE@1811..1812 "}"
  NEWLINE@1812..1813 "\n"
  NEWLINE@1813..1814 "\n"
  IDENT_KW@1814..1819 "float"
  WS@1819..1820 " "
  IDENT_KW@1820..1837 "fma_not_decorated"
  LPAREN@1837..1838 "("
  RPAREN@1838..1839 ")"
  WS@1839..1840 " "
  LBRACE@1840..1841 "{"
  NEWLINE@1841..1842 "\n"
  WS@1842..1846 "    "
  IDENT_KW@1846..1853 "precise"
  WS@1853..1854 " "
  IDENT_KW@1854..1859 "float"
  WS@1859..1860 " "
  IDENT_KW@1860..1866 "result"
  SEMICOLON@1866..1867 ";"
  NEWLINE@1867..1868 "\n"
  WS@1868..1872 "    "
  IDENT_KW@1872..1877 "float"
  WS@1877..1878 " "
  IDENT_KW@1878..1879 "a"
  WS@1879..1880 " "
  EQUAL@1880..1881 "="
  WS@1881..1882 " "
  DIGITS@1882..1885 "1.0"
  SEMICOLON@1885..1886 ";"
  NEWLINE@1886..1887 "\n"
  WS@1887..1891 "    "
  IDENT_KW@1891..1896 "float"
  WS@1896..1897 " "
  IDENT_KW@1897..1898 "b"
  WS@1898..1899 " "
  EQUAL@1899..1900 "="
  WS@1900..1901 " "
  DIGITS@1901..1904 "2.0"
  SEMICOLON@1904..1905 ";"
  NEWLINE@1905..1906 "\n"
  WS@1906..1910 "    "
  IDENT_KW@1910..1915 "float"
  WS@1915..1916 " "
  IDENT_KW@1916..1917 "c"
  WS@1917..1918 " "
  EQUAL@1918..1919 "="
  WS@1919..1920 " "
  DIGITS@1920..1923 "3.0"
  SEMICOLON@1923..1924 ";"
  NEWLINE@1924..1925 "\n"
  WS@1925..1929 "    "
  IDENT_KW@1929..1930 "b"
  WS@1930..1931 " "
  EQUAL@1931..1932 "="
  WS@1932..1933 " "
  IDENT_KW@1933..1934 "b"
  WS@1934..1935 " "
  PLUS@1935..1936 "+"
  WS@1936..1937 " "
  IDENT_KW@1937..1938 "c"
  SEMICOLON@1938..1939 ";"
  WS@1939..1940 " "
  COMMENT@1940..1989 "// b + c should be de ..."
  NEWLINE@1989..1990 "\n"
  WS@1990..1994 "    "
  IDENT_KW@1994..2000 "result"
  WS@2000..2001 " "
  EQUAL@2001..2002 "="
  WS@2002..2003 " "
  IDENT_KW@2003..2006 "fma"
  LPAREN@2006..2007 "("
  IDENT_KW@2007..2008 "a"
  COMMA@2008..2009 ","
  WS@2009..2010 " "
  IDENT_KW@2010..2011 "b"
  COMMA@2011..2012 ","
  WS@2012..2013 " "
  IDENT_KW@2013..2014 "c"
  RPAREN@2014..2015 ")"
  SEMICOLON@2015..2016 ";"
  WS@2016..2017 " "
  COMMENT@2017..2070 "// fma() should not b ..."
  NEWLINE@2070..2071 "\n"
  WS@2071..2075 "    "
  IDENT_KW@2075..2081 "return"
  WS@2081..2082 " "
  IDENT_KW@2082..2088 "result"
  SEMICOLON@2088..2089 ";"
  NEWLINE@2089..2090 "\n"
  RBRACE@2090..2091 "}"
  NEWLINE@2091..2092 "\n"
  NEWLINE@2092..2093 "\n"
  IDENT_KW@2093..2100 "precise"
  WS@2100..2101 " "
  IDENT_KW@2101..2106 "float"
  WS@2106..2107 " "
  IDENT_KW@2107..2130 "precise_return_exp_func"
  LPAREN@2130..2131 "("
  RPAREN@2131..2132 ")"
  WS@2132..2133 " "
  LBRACE@2133..2134 "{"
  NEWLINE@2134..2135 "\n"
  WS@2135..2137 "  "
  IDENT_KW@2137..2142 "float"
  WS@2142..2143 " "
  IDENT_KW@2143..2144 "a"
  WS@2144..2145 " "
  EQUAL@2145..2146 "="
  WS@2146..2147 " "
  DIGITS@2147..2150 "1.0"
  SEMICOLON@2150..2151 ";"
  NEWLINE@2151..2152 "\n"
  WS@2152..2154 "  "
  IDENT_KW@2154..2159 "float"
  WS@2159..2160 " "
  IDENT_KW@2160..2161 "b"
  WS@2161..2162 " "
  EQUAL@2162..2163 "="
  WS@2163..2164 " "
  DIGITS@2164..2167 "2.0"
  SEMICOLON@2167..2168 ";"
  NEWLINE@2168..2169 "\n"
  WS@2169..2171 "  "
  IDENT_KW@2171..2177 "return"
  WS@2177..2178 " "
  IDENT_KW@2178..2179 "a"
  WS@2179..2180 " "
  PLUS@2180..2181 "+"
  WS@2181..2182 " "
  IDENT_KW@2182..2183 "b"
  SEMICOLON@2183..2184 ";"
  WS@2184..2185 " "
  COMMENT@2185..2231 "// the ADD operation  ..."
  NEWLINE@2231..2232 "\n"
  RBRACE@2232..2233 "}"
  NEWLINE@2233..2234 "\n"
  NEWLINE@2234..2235 "\n"
  IDENT_KW@2235..2242 "precise"
  WS@2242..2243 " "
  IDENT_KW@2243..2248 "float"
  WS@2248..2249 " "
  IDENT_KW@2249..2272 "precise_return_val_func"
  LPAREN@2272..2273 "("
  RPAREN@2273..2274 ")"
  WS@2274..2275 " "
  LBRACE@2275..2276 "{"
  NEWLINE@2276..2277 "\n"
  WS@2277..2279 "  "
  IDENT_KW@2279..2284 "float"
  WS@2284..2285 " "
  IDENT_KW@2285..2286 "a"
  WS@2286..2287 " "
  EQUAL@2287..2288 "="
  WS@2288..2289 " "
  DIGITS@2289..2292 "1.0"
  SEMICOLON@2292..2293 ";"
  NEWLINE@2293..2294 "\n"
  WS@2294..2296 "  "
  IDENT_KW@2296..2301 "float"
  WS@2301..2302 " "
  IDENT_KW@2302..2303 "b"
  WS@2303..2304 " "
  EQUAL@2304..2305 "="
  WS@2305..2306 " "
  DIGITS@2306..2309 "2.0"
  SEMICOLON@2309..2310 ";"
  NEWLINE@2310..2311 "\n"
  WS@2311..2313 "  "
  IDENT_KW@2313..2318 "float"
  WS@2318..2319 " "
  IDENT_KW@2319..2325 "result"
  WS@2325..2326 " "
  EQUAL@2326..2327 "="
  WS@2327..2328 " "
  IDENT_KW@2328..2329 "a"
  WS@2329..2330 " "
  PLUS@2330..2331 "+"
  WS@2331..2332 " "
  IDENT_KW@2332..2333 "b"
  SEMICOLON@2333..2334 ";"
  WS@2334..2335 " "
  COMMENT@2335..2381 "// the ADD operation  ..."
  NEWLINE@2381..2382 "\n"
  WS@2382..2384 "  "
  IDENT_KW@2384..2390 "return"
  WS@2390..2391 " "
  IDENT_KW@2391..2397 "result"
  SEMICOLON@2397..2398 ";"
  NEWLINE@2398..2399 "\n"
  RBRACE@2399..2400 "}"
  NEWLINE@2400..2401 "\n"
  NEWLINE@2401..2402 "\n"
  IDENT_KW@2402..2407 "float"
  WS@2407..2408 " "
  IDENT_KW@2408..2430 "precise_func_parameter"
  LPAREN@2430..2431 "("
  IDENT_KW@2431..2436 "float"
  WS@2436..2437 " "
  IDENT_KW@2437..2438 "b"
  COMMA@2438..2439 ","
  WS@2439..2440 " "
  IDENT_KW@2440..2447 "precise"
  WS@2447..2448 " "
  IDENT_KW@2448..2451 "out"
  WS@2451..2452 " "
  IDENT_KW@2452..2457 "float"
  WS@2457..2458 " "
  IDENT_KW@2458..2459 "c"
  RPAREN@2459..2460 ")"
  WS@2460..2461 " "
  LBRACE@2461..2462 "{"
  NEWLINE@2462..2463 "\n"
  WS@2463..2465 "  "
  IDENT_KW@2465..2470 "float"
  WS@2470..2471 " "
  IDENT_KW@2471..2472 "a"
  WS@2472..2473 " "
  EQUAL@2473..2474 "="
  WS@2474..2475 " "
  DIGITS@2475..2478 "0.5"
  SEMICOLON@2478..2479 ";"
  NEWLINE@2479..2480 "\n"
  WS@2480..2482 "  "
  IDENT_KW@2482..2483 "c"
  WS@2483..2484 " "
  EQUAL@2484..2485 "="
  WS@2485..2486 " "
  IDENT_KW@2486..2487 "a"
  WS@2487..2488 " "
  PLUS@2488..2489 "+"
  WS@2489..2490 " "
  IDENT_KW@2490..2491 "b"
  SEMICOLON@2491..2492 ";"
  WS@2492..2493 " "
  COMMENT@2493..2508 "// noContration"
  NEWLINE@2508..2509 "\n"
  WS@2509..2511 "  "
  IDENT_KW@2511..2517 "return"
  WS@2517..2518 " "
  IDENT_KW@2518..2519 "a"
  WS@2519..2520 " "
  DASH@2520..2521 "-"
  WS@2521..2522 " "
  IDENT_KW@2522..2523 "b"
  SEMICOLON@2523..2524 ";"
  WS@2524..2525 " "
  COMMENT@2525..2545 "// Not noContraction"
  NEWLINE@2545..2546 "\n"
  RBRACE@2546..2547 "}"
  NEWLINE@2547..2548 "\n"
  NEWLINE@2548..2549 "\n"
  IDENT_KW@2549..2553 "mat3"
  WS@2553..2554 " "
  IDENT_KW@2554..2560 "matrix"
  WS@2560..2561 " "
  LPAREN@2561..2562 "("
  IDENT_KW@2562..2568 "mat2x3"
  WS@2568..2569 " "
  IDENT_KW@2569..2570 "a"
  COMMA@2570..2571 ","
  WS@2571..2572 " "
  IDENT_KW@2572..2578 "mat3x2"
  WS@2578..2579 " "
  IDENT_KW@2579..2580 "b"
  RPAREN@2580..2581 ")"
  WS@2581..2582 " "
  LBRACE@2582..2583 "{"
  NEWLINE@2583..2584 "\n"
  WS@2584..2586 "  "
  IDENT_KW@2586..2592 "mat2x3"
  WS@2592..2593 " "
  IDENT_KW@2593..2594 "c"
  WS@2594..2595 " "
  EQUAL@2595..2596 "="
  WS@2596..2597 " "
  IDENT_KW@2597..2603 "mat2x3"
  LPAREN@2603..2604 "("
  DIGITS@2604..2607 "1.0"
  COMMA@2607..2608 ","
  WS@2608..2609 " "
  DIGITS@2609..2612 "2.0"
  COMMA@2612..2613 ","
  WS@2613..2614 " "
  DIGITS@2614..2617 "3.0"
  COMMA@2617..2618 ","
  WS@2618..2619 " "
  DIGITS@2619..2622 "4.0"
  COMMA@2622..2623 ","
  WS@2623..2624 " "
  DIGITS@2624..2627 "5.0"
  COMMA@2627..2628 ","
  WS@2628..2629 " "
  DIGITS@2629..2632 "6.0"
  RPAREN@2632..2633 ")"
  SEMICOLON@2633..2634 ";"
  NEWLINE@2634..2635 "\n"
  WS@2635..2637 "  "
  IDENT_KW@2637..2644 "precise"
  WS@2644..2645 " "
  IDENT_KW@2645..2649 "mat3"
  WS@2649..2650 " "
  IDENT_KW@2650..2656 "result"
  SEMICOLON@2656..2657 ";"
  NEWLINE@2657..2658 "\n"
  WS@2658..2660 "  "
  IDENT_KW@2660..2666 "result"
  WS@2666..2667 " "
  EQUAL@2667..2668 "="
  WS@2668..2669 " "
  LPAREN@2669..2670 "("
  IDENT_KW@2670..2671 "a"
  WS@2671..2672 " "
  PLUS@2672..2673 "+"
  WS@2673..2674 " "
  IDENT_KW@2674..2675 "c"
  RPAREN@2675..2676 ")"
  WS@2676..2677 " "
  ASTERISK@2677..2678 "*"
  WS@2678..2679 " "
  IDENT_KW@2679..2680 "b"
  SEMICOLON@2680..2681 ";"
  WS@2681..2682 " "
  COMMENT@2682..2708 "// should be noContra ..."
  NEWLINE@2708..2709 "\n"
  WS@2709..2711 "  "
  IDENT_KW@2711..2717 "return"
  WS@2717..2718 " "
  IDENT_KW@2718..2724 "result"
  SEMICOLON@2724..2725 ";"
  NEWLINE@2725..2726 "\n"
  RBRACE@2726..2727 "}"
  NEWLINE@2727..2728 "\n"
  NEWLINE@2728..2729 "\n"
  IDENT_KW@2729..2733 "void"
  WS@2733..2734 " "
  IDENT_KW@2734..2738 "main"
  LPAREN@2738..2739 "("
  RPAREN@2739..2740 ")"
  LBRACE@2740..2741 "{"
  RBRACE@2741..2742 "}"
  NEWLINE@2742..2743 "\n"
