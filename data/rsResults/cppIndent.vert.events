Ok(EnterFile { file_id: FileId(0), path: "../data/cppIndent.vert", canonical_path: "/home/vincent/Applications/apps/glsl-lang/data/cppIndent.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 110, profile: None }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@14..25, kind: Define(Define { name: "ON", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@24..24 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 25..26 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 26..31 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 31..32 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 32..35 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 35..36 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 36..37 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 37..38 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 38..41 } "0.0", token_kind: FLOAT_CONST(0.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 41..42 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 42..43 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 43..44 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 44..48 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 48..49 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 49..53 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 53..54 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 54..55 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 55..56 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 56..57 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 57..58 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 58..59 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@59..69, kind: IfDef(IfDef { ident: "ON" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 69..74 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 74..75 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 75..78 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 78..79 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 79..81 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 81..82 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 82..85 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 85..86 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 86..87 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@87..94, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 94..95 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@95..106, kind: IfDef(IfDef { ident: "OFF" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 106..110 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 110..114 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 114..115 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 115..119 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 119..122 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 122..123 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 123..125 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 125..126 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 126..130 } "20.0", token_kind: FLOAT_CONST(20.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 130..131 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 131..132 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@132..139, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 139..140 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@140..160, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@148..159 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 160..164 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 164..169 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 169..170 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 170..174 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 174..177 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 177..178 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 178..180 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 180..181 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 181..186 } "300.0", token_kind: FLOAT_CONST(300.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 186..187 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 187..188 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@188..199, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 199..200 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@200..221, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@208..220 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 221..225 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 225..229 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 229..230 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 230..234 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 234..237 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 237..238 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 238..240 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 240..241 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 241..247 } "4000.0", token_kind: FLOAT_CONST(4000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 247..248 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 248..249 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@249..260, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 260..261 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@261..282, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@269..281 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 282..284 } "\t\t", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 284..288 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 288..289 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 289..291 } "\t\t", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 291..294 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 294..295 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 295..297 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 297..298 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 298..305 } "50000.0", token_kind: FLOAT_CONST(50000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 305..306 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 306..307 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@307..316, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 316..317 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@317..338, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@324..337 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 338..340 } "\t\t", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 340..345 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 345..346 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 346..348 } "\t\t", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 348..351 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 351..352 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 352..354 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 354..355 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 355..363 } "600000.0", token_kind: FLOAT_CONST(600000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 363..364 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 364..365 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@365..374, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 374..375 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@375..436, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@383..426 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 436..440 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 440..441 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 441..444 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 444..445 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 445..447 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 447..448 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 448..457 } "7000000.0", token_kind: FLOAT_CONST(7000000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 457..458 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 458..459 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@459..470, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 470..471 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@471..533, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@482..532 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 533..538 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 538..539 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 539..542 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 542..543 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 543..545 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 545..546 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 546..556 } "80000000.0", token_kind: FLOAT_CONST(80000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 556..557 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 557..558 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@558..565, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 565..566 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@566..598, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@570..597 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 598..603 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 603..604 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 604..607 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 607..608 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 608..610 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 610..611 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 611..622 } "900000000.0", token_kind: FLOAT_CONST(900000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 622..623 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 623..624 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@624..631, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 631..632 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 632..660 } "// sum should be 9806 ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 660..661 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 661..665 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 665..676 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 676..677 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 677..678 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 678..679 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 679..683 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 683..684 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 684..687 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 687..688 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 688..689 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 689..690 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 690..691 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 691..692 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 692..693 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@693..716, kind: Define(Define { name: "FUNC", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@712..715 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 716..768 } "// needs to be last t ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 768..769 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 769..773 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 773..774 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 774..780 } "foo986", token_kind: IDENT("foo986"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 780..781 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 781..782 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 782..783 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 783..784 } "\t", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Processing(MismatchedArguments { ident: "FUNC", expected: 2, actual: 1 }), pos: 784..788, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 60, column: 15 }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 784..788 } "FUNC", token_kind: IDENT("FUNC"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 788..789 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 789..790 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 790..791 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 791..792 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 792..793 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 793..794 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 794..795 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 795..796 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 796..797 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 797..798 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 798..799 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 799..800 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 800..801 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 801..802 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 802..803 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 803..804 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 804..805 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 805..807 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 807..836 } "// ERROR, too few arg ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 836..837 } "\n", token_kind: WS, state: Active })
