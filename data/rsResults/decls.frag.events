Ok(EnterFile { file_id: FileId(0), path: "../data/decls.frag", canonical_path: "/data/decls.frag" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..14, kind: Version(Version { number: 120, profile: None }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 14..16 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 16..19 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 19..20 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 20..21 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 21..22 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 22..24 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 24..27 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 27..28 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 28..29 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 29..30 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 30..31 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 31..32 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 32..33 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 33..35 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 35..38 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 38..39 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 39..41 } "d1", token_kind: IDENT("d1"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 41..42 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 42..43 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 43..44 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 44..45 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 45..46 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 46..48 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 48..51 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 51..52 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 52..54 } "e2", token_kind: IDENT("e2"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 54..55 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 55..56 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 56..57 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 57..58 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 58..59 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 59..60 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 60..61 } "f", token_kind: IDENT("f"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 61..62 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 62..64 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 64..67 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 67..68 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 68..69 } "g", token_kind: IDENT("g"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 69..70 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 70..71 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 71..73 } "h3", token_kind: IDENT("h3"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 73..74 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 74..75 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 75..76 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 76..77 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 77..78 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 78..80 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 80..82 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 82..85 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 85..86 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 86..88 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 88..89 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 89..90 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 90..91 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 91..92 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 92..94 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 94..97 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 97..98 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 98..99 } "j", token_kind: IDENT("j"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 99..100 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 100..101 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 101..103 } "k5", token_kind: IDENT("k5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 103..104 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 104..105 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 105..106 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 106..107 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 107..109 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 109..112 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 112..113 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 113..115 } "m6", token_kind: IDENT("m6"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 115..116 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 116..117 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 117..118 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 118..119 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 119..120 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 120..122 } "m7", token_kind: IDENT("m7"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 122..123 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 123..124 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 124..125 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 125..126 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 126..128 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 128..131 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 131..132 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 132..134 } "n8", token_kind: IDENT("n8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 134..135 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 135..136 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 136..137 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 137..138 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 138..139 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 139..140 } "p", token_kind: IDENT("p"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 140..141 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 141..143 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 143..145 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 145..148 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 148..149 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 149..152 } "ii4", token_kind: IDENT("ii4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 152..153 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 153..154 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 154..155 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 155..156 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 156..157 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 157..158 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 158..161 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 161..162 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 162..163 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 163..164 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 164..165 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 165..166 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 166..167 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 167..168 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 168..169 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 169..170 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 170..171 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 171..172 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 172..173 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 173..174 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 174..175 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 175..176 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 176..178 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 178..181 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 181..182 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 182..184 } "ij", token_kind: IDENT("ij"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 184..185 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 185..186 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 186..189 } "ik5", token_kind: IDENT("ik5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 189..190 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 190..191 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 191..192 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 192..193 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 193..194 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 194..195 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 195..198 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 198..199 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 199..200 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 200..201 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 201..202 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 202..203 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 203..204 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 204..205 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 205..206 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 206..207 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 207..208 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 208..209 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 209..210 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 210..211 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 211..212 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 212..213 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 213..214 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 214..215 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 215..216 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 216..218 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 218..221 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 221..222 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 222..225 } "im2", token_kind: IDENT("im2"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 225..226 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 226..227 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 227..228 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 228..229 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 229..230 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 230..231 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 231..234 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 234..235 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 235..236 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 236..237 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 237..239 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 239..240 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 240..241 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 241..243 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 243..244 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 244..245 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 245..246 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 246..249 } "im3", token_kind: IDENT("im3"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 249..250 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 250..251 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 251..252 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 252..253 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 253..254 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 254..255 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 255..258 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 258..259 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 259..260 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 260..261 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 261..263 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 263..264 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 264..265 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 265..267 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 267..268 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 268..269 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 269..271 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 271..272 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 272..273 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 273..275 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 275..278 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 278..279 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 279..282 } "in8", token_kind: IDENT("in8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 282..283 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 283..284 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 284..285 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 285..286 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 286..287 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 287..288 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 288..291 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 291..292 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 292..293 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 293..294 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 294..296 } "21", token_kind: INT_CONST(21), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 296..297 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 297..298 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 298..300 } "22", token_kind: INT_CONST(22), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 300..301 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 301..302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 302..304 } "23", token_kind: INT_CONST(23), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 304..305 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 305..306 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 306..308 } "24", token_kind: INT_CONST(24), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 308..309 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 309..310 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 310..311 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 311..313 } "ip", token_kind: IDENT("ip"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 313..314 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 314..316 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 316..318 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 318..322 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 322..323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 323..326 } "vi4", token_kind: IDENT("vi4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 326..327 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 327..328 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 328..329 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 329..330 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 330..331 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 331..332 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 332..335 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 335..336 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 336..337 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 337..338 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 338..339 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 339..340 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 340..341 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 341..342 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 342..343 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 343..344 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 344..345 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 345..346 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 346..347 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 347..348 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 348..349 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 349..350 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 350..352 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 352..356 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 356..357 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 357..359 } "vj", token_kind: IDENT("vj"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 359..360 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 360..361 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 361..364 } "vk5", token_kind: IDENT("vk5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 364..365 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 365..366 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 366..367 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 367..368 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 368..369 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 369..370 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 370..373 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 373..374 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 374..375 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 375..376 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 376..377 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 377..378 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 378..379 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 379..380 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 380..381 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 381..382 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 382..383 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 383..384 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 384..385 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 385..386 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 386..387 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 387..388 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 388..389 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 389..390 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 390..391 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 391..393 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 393..397 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 397..398 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 398..401 } "vm2", token_kind: IDENT("vm2"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 401..402 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 402..403 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 403..404 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 404..405 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 405..406 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 406..407 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 407..410 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 410..411 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 411..412 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 412..413 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 413..415 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 415..416 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 416..417 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 417..419 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 419..420 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 420..421 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 421..422 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 422..425 } "vm3", token_kind: IDENT("vm3"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 425..426 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 426..427 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 427..428 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 428..429 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 429..430 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 430..431 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 431..434 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 434..435 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 435..436 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 436..437 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 437..439 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 439..440 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 440..441 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 441..443 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 443..444 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 444..445 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 445..447 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 447..448 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 448..449 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 449..451 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 451..455 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 455..456 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 456..459 } "vn8", token_kind: IDENT("vn8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 459..460 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 460..461 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 461..462 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 462..463 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 463..464 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 464..465 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 465..468 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 468..469 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 469..470 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 470..471 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 471..473 } "21", token_kind: INT_CONST(21), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 473..474 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 474..475 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 475..477 } "22", token_kind: INT_CONST(22), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 477..478 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 478..479 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 479..481 } "23", token_kind: INT_CONST(23), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 481..482 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 482..483 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 483..485 } "24", token_kind: INT_CONST(24), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 485..486 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 486..487 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 487..488 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 488..490 } "vp", token_kind: IDENT("vp"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 490..491 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 491..493 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 493..495 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 495..500 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 500..501 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 501..504 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 504..505 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 505..509 } "cii4", token_kind: IDENT("cii4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 509..510 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 510..511 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 511..512 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 512..513 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 513..514 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 514..515 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 515..518 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 518..519 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 519..520 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 520..521 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 521..522 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 522..523 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 523..524 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 524..525 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 525..526 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 526..527 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 527..528 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 528..529 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 529..530 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 530..531 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 531..532 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 532..533 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 533..535 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 535..540 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 540..541 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 541..544 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 544..545 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 545..548 } "cij", token_kind: IDENT("cij"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 548..549 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 549..550 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 550..554 } "cik5", token_kind: IDENT("cik5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 554..555 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 555..556 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 556..557 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 557..558 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 558..559 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 559..560 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 560..563 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 563..564 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 564..565 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 565..566 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 566..567 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 567..568 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 568..569 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 569..570 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 570..571 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 571..572 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 572..573 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 573..574 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 574..575 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 575..576 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 576..577 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 577..578 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 578..579 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 579..580 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 580..581 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 581..583 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 583..588 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 588..589 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 589..592 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 592..593 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 593..597 } "cim2", token_kind: IDENT("cim2"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 597..598 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 598..599 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 599..600 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 600..601 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 601..602 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 602..603 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 603..606 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 606..607 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 607..608 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 608..609 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 609..611 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 611..612 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 612..613 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 613..615 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 615..616 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 616..617 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 617..618 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 618..622 } "cim3", token_kind: IDENT("cim3"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 622..623 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 623..624 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 624..625 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 625..626 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 626..627 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 627..628 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 628..631 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 631..632 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 632..633 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 633..634 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 634..636 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 636..637 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 637..638 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 638..640 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 640..641 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 641..642 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 642..644 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 644..645 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 645..646 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 646..648 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 648..653 } "const", token_kind: CONST, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 653..654 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 654..657 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 657..658 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 658..662 } "cin8", token_kind: IDENT("cin8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 662..663 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 663..664 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 664..665 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 665..666 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 666..667 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 667..668 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 668..671 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 671..672 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 672..673 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 673..674 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 674..676 } "21", token_kind: INT_CONST(21), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 676..677 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 677..678 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 678..680 } "22", token_kind: INT_CONST(22), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 680..681 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 681..682 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 682..684 } "23", token_kind: INT_CONST(23), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 684..685 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 685..686 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 686..688 } "24", token_kind: INT_CONST(24), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 688..689 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 689..690 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 690..691 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 691..694 } "cip", token_kind: IDENT("cip"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 694..695 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 695..697 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 697..699 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 699..706 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 706..707 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 707..710 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 710..711 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 711..715 } "uii4", token_kind: IDENT("uii4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 715..716 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 716..717 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 717..718 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 718..719 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 719..720 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 720..721 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 721..724 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 724..725 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 725..726 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 726..727 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 727..728 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 728..729 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 729..730 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 730..731 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 731..732 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 732..733 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 733..734 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 734..735 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 735..736 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 736..737 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 737..738 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 738..739 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 739..741 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 741..748 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 748..749 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 749..752 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 752..753 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 753..756 } "uij", token_kind: IDENT("uij"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 756..757 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 757..758 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 758..762 } "uik5", token_kind: IDENT("uik5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 762..763 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 763..764 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 764..765 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 765..766 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 766..767 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 767..768 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 768..771 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 771..772 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 772..773 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 773..774 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 774..775 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 775..776 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 776..777 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 777..778 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 778..779 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 779..780 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 780..781 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 781..782 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 782..783 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 783..784 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 784..785 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 785..786 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 786..787 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 787..788 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 788..789 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 789..791 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 791..798 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 798..799 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 799..802 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 802..803 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 803..807 } "uim2", token_kind: IDENT("uim2"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 807..808 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 808..809 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 809..810 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 810..811 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 811..812 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 812..813 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 813..816 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 816..817 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 817..818 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 818..819 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 819..821 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 821..822 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 822..823 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 823..825 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 825..826 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 826..827 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 827..828 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 828..832 } "uim3", token_kind: IDENT("uim3"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 832..833 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 833..834 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 834..835 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..836 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 836..837 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 837..838 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 838..841 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 841..842 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 842..843 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 843..844 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 844..846 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 846..847 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 847..848 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 848..850 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 850..851 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 851..852 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 852..854 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 854..855 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 855..856 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 856..858 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 858..865 } "uniform", token_kind: UNIFORM, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 865..866 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 866..869 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 869..870 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 870..874 } "uin8", token_kind: IDENT("uin8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 874..875 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 875..876 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 876..877 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 877..878 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 878..879 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 879..880 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 880..883 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 883..884 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 884..885 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 885..886 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 886..888 } "21", token_kind: INT_CONST(21), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 888..889 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 889..890 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 890..892 } "22", token_kind: INT_CONST(22), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 892..893 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 893..894 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 894..896 } "23", token_kind: INT_CONST(23), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 896..897 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 897..898 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 898..900 } "24", token_kind: INT_CONST(24), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 900..901 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 901..902 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 902..903 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 903..906 } "uip", token_kind: IDENT("uip"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 906..907 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 907..909 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 909..911 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 911..914 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 914..915 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 915..921 } "gl_vi4", token_kind: IDENT("gl_vi4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 921..922 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 922..923 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 923..924 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 924..925 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 925..926 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 926..927 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 927..930 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 930..931 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 931..932 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 932..933 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 933..934 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 934..935 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 935..936 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 936..937 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 937..938 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 938..939 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 939..940 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 940..941 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 941..942 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 942..943 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 943..944 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 944..945 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 945..947 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 947..950 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 950..951 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 951..956 } "gl_vj", token_kind: IDENT("gl_vj"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 956..957 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 957..958 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 958..964 } "gl_vk5", token_kind: IDENT("gl_vk5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 964..965 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 965..966 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 966..967 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 967..968 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 968..969 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 969..970 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 970..973 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 973..974 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 974..975 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 975..976 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 976..977 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 977..978 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 978..979 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 979..980 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 980..981 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 981..982 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 982..983 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 983..984 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 984..985 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 985..986 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 986..987 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 987..988 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 988..989 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 989..990 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 990..991 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 991..993 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 993..996 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 996..997 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 997..1003 } "gl_vm2", token_kind: IDENT("gl_vm2"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1003..1004 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1004..1005 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1005..1006 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1006..1007 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1007..1008 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1008..1009 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1009..1012 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1012..1013 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1013..1014 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1014..1015 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1015..1017 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1017..1018 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1018..1019 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1019..1021 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1021..1022 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1022..1023 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1023..1024 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1024..1030 } "gl_vm3", token_kind: IDENT("gl_vm3"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1030..1031 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1031..1032 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1032..1033 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1033..1034 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1034..1035 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1035..1036 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1036..1039 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1039..1040 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1040..1041 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1041..1042 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1042..1044 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1044..1045 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1045..1046 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1046..1048 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1048..1049 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1049..1050 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1050..1052 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1052..1053 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1053..1054 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1054..1056 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1056..1059 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1059..1060 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1060..1066 } "gl_vn8", token_kind: IDENT("gl_vn8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1066..1067 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1067..1068 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1068..1069 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1069..1070 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1070..1071 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1071..1072 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1072..1075 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1075..1076 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1076..1077 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1077..1078 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1078..1080 } "21", token_kind: INT_CONST(21), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1080..1081 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1081..1082 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1082..1084 } "22", token_kind: INT_CONST(22), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1084..1085 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1085..1086 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1086..1088 } "23", token_kind: INT_CONST(23), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1088..1089 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1089..1090 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1090..1092 } "24", token_kind: INT_CONST(24), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1092..1093 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1093..1094 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1094..1095 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1095..1100 } "gl_vp", token_kind: IDENT("gl_vp"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1100..1101 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1101..1103 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1103..1105 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1105..1109 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1109..1110 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1110..1114 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1114..1115 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1115..1116 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1116..1118 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 1118..1119 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1119..1121 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1121..1125 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1125..1130 } "while", token_kind: WHILE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1130..1131 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1131..1132 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1132..1136 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1136..1137 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1137..1141 } "cond", token_kind: IDENT("cond"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1141..1142 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1142..1143 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1143..1144 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1144..1145 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1145..1146 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1146..1147 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1147..1148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1148..1149 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1149..1150 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1150..1151 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1151..1153 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1153..1157 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1157..1162 } "while", token_kind: WHILE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1162..1163 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1163..1164 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1164..1167 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1167..1168 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1168..1173 } "icond", token_kind: IDENT("icond"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1173..1174 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1174..1175 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1175..1176 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1176..1177 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1177..1178 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1178..1179 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1179..1181 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1181..1185 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1185..1190 } "while", token_kind: WHILE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1190..1191 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1191..1192 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1192..1196 } "bool", token_kind: TYPE_NAME(BOOL), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1196..1197 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1197..1204 } "gl_cond", token_kind: IDENT("gl_cond"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1204..1205 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1205..1206 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1206..1207 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1207..1208 } "b", token_kind: IDENT("b"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1208..1209 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1209..1210 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1210..1211 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1211..1212 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1212..1213 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1213..1214 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1214..1216 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1216..1217 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1217..1219 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1219..1221 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1221..1224 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1224..1225 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1225..1234 } "foob__vi4", token_kind: IDENT("foob__vi4"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1234..1235 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1235..1236 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1236..1237 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1237..1238 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1238..1239 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1239..1240 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1240..1243 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1243..1244 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1244..1245 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1245..1246 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1246..1247 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1247..1248 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1248..1249 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1249..1250 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1250..1251 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1251..1252 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1252..1253 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1253..1254 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1254..1255 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1255..1256 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1256..1257 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1257..1258 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1258..1260 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1260..1263 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1263..1264 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1264..1272 } "foob__vj", token_kind: IDENT("foob__vj"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1272..1273 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1273..1274 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1274..1283 } "foob__vk5", token_kind: IDENT("foob__vk5"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1283..1284 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1284..1285 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1285..1286 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1286..1287 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1287..1288 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1288..1289 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1289..1292 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1292..1293 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1293..1294 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1294..1295 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1295..1296 } "5", token_kind: INT_CONST(5), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1296..1297 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1297..1298 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1298..1299 } "6", token_kind: INT_CONST(6), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1299..1300 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1300..1301 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1301..1302 } "7", token_kind: INT_CONST(7), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1302..1303 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1303..1304 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1304..1305 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1305..1306 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1306..1307 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1307..1308 } "9", token_kind: INT_CONST(9), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1308..1309 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1309..1310 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1310..1312 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1312..1315 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1315..1316 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1316..1325 } "__foobvm2", token_kind: IDENT("__foobvm2"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1325..1326 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1326..1327 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1327..1328 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1328..1329 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1329..1330 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1330..1331 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1331..1334 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1334..1335 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1335..1336 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1336..1337 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1337..1339 } "10", token_kind: INT_CONST(10), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1339..1340 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1340..1341 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1341..1343 } "11", token_kind: INT_CONST(11), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1343..1344 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1344..1345 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1345..1346 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1346..1355 } "__foobvm3", token_kind: IDENT("__foobvm3"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1355..1356 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1356..1357 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1357..1358 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1358..1359 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1359..1360 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1360..1361 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1361..1364 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1364..1365 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1365..1366 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1366..1367 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1367..1369 } "12", token_kind: INT_CONST(12), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1369..1370 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1370..1371 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1371..1373 } "13", token_kind: INT_CONST(13), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1373..1374 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1374..1375 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1375..1377 } "14", token_kind: INT_CONST(14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1377..1378 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1378..1379 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1379..1381 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1381..1384 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1384..1385 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1385..1394 } "foob__vn8", token_kind: IDENT("foob__vn8"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1394..1395 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1395..1396 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1396..1397 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1397..1398 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1398..1399 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1399..1400 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1400..1403 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1403..1404 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1404..1405 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1405..1406 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1406..1408 } "21", token_kind: INT_CONST(21), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1408..1409 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1409..1410 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1410..1412 } "22", token_kind: INT_CONST(22), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1412..1413 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1413..1414 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1414..1416 } "23", token_kind: INT_CONST(23), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1416..1417 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1417..1418 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1418..1420 } "24", token_kind: INT_CONST(24), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1420..1421 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1421..1422 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1422..1423 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1423..1431 } "foob__vp", token_kind: IDENT("foob__vp"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1431..1432 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1432..1434 } "\r\n", token_kind: WS, state: Active })
