Ok(EnterFile { file_id: FileId(0), path: "../data/tokenLength.vert", canonical_path: "/data/tokenLength.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..16, kind: Version(Version { number: 300, profile: Es }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 16..54 } "//#pragma glslang_bin ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 54..55 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 55..73 } "// 1023 characters", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 73..74 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 74..76 } "in", token_kind: IN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 76..77 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 77..82 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 82..83 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 83..1106 } "BCDEF0123456789ABCDEF ...", token_kindstate: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1106..1107 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1107..1108 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1108..1109 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1109..1134 } "// 1024 characters (o ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1134..1135 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1135..1137 } "in", token_kind: IN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1137..1138 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1138..1143 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1143..1144 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1144..2168 } "ABCDEF0123456789ABCDE ...", token_kindstate: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2168..2169 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2169..2170 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2170..2171 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2171..2174 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2174..2175 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2175..2177 } "E1", token_kind: IDENT("E1"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2177..2178 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2178..2179 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2179..2180 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2180..2190 } "5000000000", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2190..2191 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2191..2193 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2193..2201 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2201..2202 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2202..2205 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2205..2206 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2206..2208 } "E2", token_kind: IDENT("E2"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2208..2209 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2209..2210 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2210..2211 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2211..2222 } "50000000000", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2222..2223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2223..2225 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2225..2233 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2233..2234 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2234..2237 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2237..2238 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2238..2239 } "B", token_kind: IDENT("B"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2239..2240 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2240..2241 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2241..2242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2242..2252 } "4294967295", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2252..2253 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2253..2255 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2255..2262 } "// okay", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2262..2263 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2263..2264 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2264..2267 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2267..2268 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2268..2270 } "OE", token_kind: IDENT("OE"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2270..2271 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2271..2272 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2272..2273 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2273..2295 } "0777777777777777777777", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2295..2296 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2296..2298 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2298..2306 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2306..2307 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2307..2310 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2310..2311 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2311..2313 } "HE", token_kind: IDENT("HE"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2313..2314 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2314..2315 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2315..2316 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2316..2335 } "0x1234567890ABCDEF0", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2335..2336 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2336..2341 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2341..2349 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2349..2350 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2350..2351 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2351..2377 } "// 1023 character fra ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2377..2378 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2378..2383 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2383..2384 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2384..2385 } "F", token_kind: IDENT("F"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2385..2386 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2386..2387 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2387..2388 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2388..3411 } "1.0123456789012345678 ...", token_kind: FLOAT_CONST(1.0123457), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 3411..3412 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3412..3413 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3413..3414 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 3414..3437 } "// 1024 character value", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3437..3438 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3438..3443 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3443..3444 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 3444..3445 } "G", token_kind: IDENT("G"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3445..3446 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 3446..3447 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 3447..3448 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 3448..4472 } "1.0123456789012345678 ...", token_kind: FLOAT_CONST(1.0123457), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 4472..4473 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4473..4474 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4474..4475 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 4475..4501 } "// 1025 character fra ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4501..4502 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4502..4507 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4507..4508 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4508..4510 } "E3", token_kind: IDENT("E3"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4510..4511 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 4511..4512 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4512..4513 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4513..5538 } "1.0123456789012345678 ...", token_kind: FLOAT_CONST(1.0123457), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 5538..5539 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5539..5540 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5540..5541 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5541..5545 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5545..5546 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5546..5550 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 5550..5551 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 5551..5552 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5552..5553 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 5553..5554 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5554..5555 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5555..5556 } "\t", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5556..5567 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5567..5568 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 5568..5569 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5569..5570 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5570..5574 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 5574..5575 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5575..6599 } "ABCDEF0123456789ABCDE ...", token_kindstate: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 6599..6600 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 6600..6601 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 6601..6618 } "\t\t               ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 6618..6619 } "B", token_kind: IDENT("B"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 6619..6620 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 6620..6621 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 6621..6622 } "F", token_kind: IDENT("F"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 6622..6623 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 6623..6624 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 6624..6625 } "G", token_kind: IDENT("G"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 6625..6626 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 6626..6627 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 6627..6628 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 6628..6629 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 6629..6630 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 6630..6631 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 6631..6644 } "// super long", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 6644..6645 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 6645..6650 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 6650..6651 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 6651..10743 } "BCDEF0123456789ABCDEF ...", token_kindstate: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 10743..10744 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 10744..10745 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 10745..10748 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 10748..10749 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 10749..10755 } "superH", token_kind: IDENT("superH"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 10755..10756 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 10756..10757 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 10757..10758 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 10758..14852 } "0xBCDEF0123456789ABCD ...", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 14852..14853 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 14853..14854 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 14854..14857 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 14857..14858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 14858..14864 } "superO", token_kind: IDENT("superO"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 14864..14865 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 14865..14866 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 14866..14867 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 14867..19179 } "077777777777777777777 ...", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 19179..19180 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 19180..19181 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 19181..19184 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 19184..19185 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 19185..19191 } "superI", token_kind: IDENT("superI"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 19191..19192 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 19192..19193 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 19193..19194 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 19194..23694 } "429496729542949672954 ...", token_kind: ERROR(InvalidIntLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 23694..23695 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 23695..23696 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 23696..23701 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 23701..23702 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 23702..23708 } "superF", token_kind: IDENT("superF"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 23708..23709 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 23709..23710 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 23710..23711 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 23711..27802 } "1.0123456789012345678 ...", token_kind: FLOAT_CONST(1.0123457), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 27802..27803 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 27803..27804 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 27804..27805 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 27805..27822 } "// Boundary cases", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 27822..27823 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@27823..28868, kind: Extension(Extension { name: Specific(Atom('ahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhooooooooooooooooooooooooooooooohhhhhhhhhhhhhhhhh01234' type=dynamic)), behavior: Enable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: UnsupportedExt { extension: Specific(Atom('ahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhooooooooooooooooooooooooooooooohhhhhhhhhhhhhhhhh01234' type=dynamic)), raw_line: 38, pos: NodeSpan { source_id: FileId(0), range: 27823..28868 } }, pos: 27823..28868, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 38, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@28868..29914, kind: Extension(Extension { name: Specific(Atom('ahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhooooooooooooooooooooooooooooooohhhhhhhhhhhhhhhhh012345' type=dynamic)), behavior: Enable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: UnsupportedExt { extension: Specific(Atom('ahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhooooooooooooooooooooooooooooooohhhhhhhhhhhhhhhhh012345' type=dynamic)), raw_line: 39, pos: NodeSpan { source_id: FileId(0), range: 28868..29914 } }, pos: 28868..29914, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 39, column: 0 }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 29914..29915 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 29915..29928 } "// Super long", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 29928..29929 } "\n", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Parse(Unexpected { actual: NEWLINE, expected: [COLON] }), pos: 29929..34441, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 42, column: 0 }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectiveExtension(MissingExtensionBehavior { name: Specific(Atomtype=dynamic)) })), pos: 29929..34441, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 42, column: 0 }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 34441..34442 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 34442..34459 } "// Boundary cases", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 34459..34460 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@34460..35489, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@34464..35488 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@35489..35517, kind: Error(Error { message: "in long non-zero #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in long non-zero #if" }), pos: 35489..35517, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 46, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@35517..35524, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@35524..36558, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@35528..36557 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@36558..36582, kind: Error(Error { message: "in long zero #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in long zero #if" }), pos: 36558..36582, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 49, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@36582..36589, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@36589..37624, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@36593..37623 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@37624..37647, kind: Error(Error { message: "in too long #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in too long #if" }), pos: 37624..37647, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 52, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@37647..37654, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 37654..37655 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@37655..38684, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@37659..38683 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@38684..38709, kind: Error(Error { message: "in long macro #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in long macro #if" }), pos: 38684..38709, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 56, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@38709..38716, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@38716..39745, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@38720..39744 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@39745..39770, kind: Error(Error { message: "in long macro #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in long macro #if" }), pos: 39745..39770, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 59, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@39770..39777, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@39777..40807, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@39781..40806 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@40807..40836, kind: Error(Error { message: "in too long macro #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in too long macro #if" }), pos: 40807..40836, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 62, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@40836..40843, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 40843..40844 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 40844..40857 } "// Super long", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 40857..40858 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@40858..43938, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@40862..43937 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@43938..43963, kind: Error(Error { message: "in super long #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in super long #if" }), pos: 43938..43963, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 67, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@43963..43970, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@43970..47051, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@43974..47050 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@47051..47082, kind: Error(Error { message: "in super long macro #if" }), errors: [Located { inner: Processing(ErrorDirective { message: "in super long macro #if" }), pos: 47051..47082, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 70, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@47082..47089, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
