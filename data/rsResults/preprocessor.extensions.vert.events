Ok(EnterFile { file_id: FileId(0), path: "../data/preprocessor.extensions.vert", canonical_path: "/data/preprocessor.extensions.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..17, kind: Version(Version { number: 310, profile: Es, parsed_profile: Some(Es) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 17..19 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@19..62, kind: Extension(Extension { name: Specific(Atom('GL_EXT_geometry_shader' type=dynamic)), behavior: Enable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@62..101, kind: Extension(Extension { name: Specific(Atom('GL_EXT_frag_depth' type=dynamic)), behavior: Disable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@101..141, kind: Extension(Extension { name: Specific(Atom('GL_EXT_gpu_shader5' type=dynamic)), behavior: Require }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@141..195, kind: Extension(Extension { name: Specific(Atom('GL_EXT_shader_texture_image_samples' type=dynamic)), behavior: Warn }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 195..197 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@197..236, kind: Extension(Extension { name: Specific(Atom('unknown_extension' type=dynamic)), behavior: Require }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: UnsupportedExt { extension: Specific(Atom('unknown_extension' type=dynamic)), raw_line: 7, pos: NodeSpan { source_id: FileId(0), range: 197..236 } }, pos: 197..236, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 7, column: 0 }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 236..238 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 238..241 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 241..242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 242..246 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 246..247 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 247..248 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 248..249 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 249..250 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 250..252 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 252..253 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 253..255 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 255..257 } "\r\n", token_kind: WS, state: Active })
