ROOT@0..1501
  PP_VERSION@0..18
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "420"
    WS@12..13 " "
    PP_VERSION_PROFILE@13..17
      IDENT_KW@13..17 "core"
    NEWLINE@17..18 "\n"
  NEWLINE@18..19 "\n"
  IDENT_KW@19..25 "layout"
  LPAREN@25..26 "("
  IDENT_KW@26..33 "binding"
  WS@33..34 " "
  EQUAL@34..35 "="
  WS@35..36 " "
  DIGITS@36..37 "0"
  RPAREN@37..38 ")"
  WS@38..39 " "
  IDENT_KW@39..46 "uniform"
  WS@46..47 " "
  IDENT_KW@47..58 "atomic_uint"
  WS@58..59 " "
  IDENT_KW@59..66 "counter"
  SEMICOLON@66..67 ";"
  NEWLINE@67..68 "\n"
  IDENT_KW@68..74 "layout"
  LPAREN@74..75 "("
  IDENT_KW@75..82 "binding"
  WS@82..83 " "
  EQUAL@83..84 "="
  WS@84..85 " "
  DIGITS@85..86 "0"
  COMMA@86..87 ","
  WS@87..88 " "
  IDENT_KW@88..94 "offset"
  WS@94..95 " "
  EQUAL@95..96 "="
  WS@96..97 " "
  DIGITS@97..98 "9"
  RPAREN@98..99 ")"
  WS@99..100 " "
  IDENT_KW@100..107 "uniform"
  WS@107..108 " "
  IDENT_KW@108..119 "atomic_uint"
  WS@119..120 " "
  IDENT_KW@120..127 "counter"
  SEMICOLON@127..128 ";"
  NEWLINE@128..129 "\n"
  NEWLINE@129..130 "\n"
  IDENT_KW@130..134 "uint"
  WS@134..135 " "
  IDENT_KW@135..139 "func"
  LPAREN@139..140 "("
  IDENT_KW@140..151 "atomic_uint"
  WS@151..152 " "
  IDENT_KW@152..153 "c"
  RPAREN@153..154 ")"
  NEWLINE@154..155 "\n"
  LBRACE@155..156 "{"
  NEWLINE@156..157 "\n"
  WS@157..161 "    "
  IDENT_KW@161..167 "return"
  WS@167..168 " "
  IDENT_KW@168..190 "atomicCounterIncrement"
  LPAREN@190..191 "("
  IDENT_KW@191..192 "c"
  RPAREN@192..193 ")"
  SEMICOLON@193..194 ";"
  NEWLINE@194..195 "\n"
  RBRACE@195..196 "}"
  NEWLINE@196..197 "\n"
  NEWLINE@197..198 "\n"
  IDENT_KW@198..202 "uint"
  WS@202..203 " "
  IDENT_KW@203..208 "func2"
  LPAREN@208..209 "("
  IDENT_KW@209..212 "out"
  WS@212..213 " "
  IDENT_KW@213..224 "atomic_uint"
  WS@224..225 " "
  IDENT_KW@225..226 "c"
  RPAREN@226..227 ")"
  WS@227..228 " "
  COMMENT@228..236 "// ERROR"
  NEWLINE@236..237 "\n"
  LBRACE@237..238 "{"
  NEWLINE@238..239 "\n"
  WS@239..243 "    "
  IDENT_KW@243..249 "return"
  WS@249..250 " "
  IDENT_KW@250..257 "counter"
  SEMICOLON@257..258 ";"
  WS@258..269 "           "
  COMMENT@269..292 "// ERROR, type mismatch"
  NEWLINE@292..293 "\n"
  WS@293..297 "    "
  IDENT_KW@297..303 "return"
  WS@303..304 " "
  IDENT_KW@304..317 "atomicCounter"
  LPAREN@317..318 "("
  IDENT_KW@318..325 "counter"
  RPAREN@325..326 ")"
  SEMICOLON@326..327 ";"
  NEWLINE@327..328 "\n"
  RBRACE@328..329 "}"
  NEWLINE@329..330 "\n"
  NEWLINE@330..331 "\n"
  IDENT_KW@331..335 "void"
  WS@335..336 " "
  IDENT_KW@336..340 "main"
  LPAREN@340..341 "("
  RPAREN@341..342 ")"
  NEWLINE@342..343 "\n"
  LBRACE@343..344 "{"
  NEWLINE@344..345 "\n"
  WS@345..350 "     "
  IDENT_KW@350..361 "atomic_uint"
  WS@361..362 " "
  IDENT_KW@362..381 "non_uniform_counter"
  SEMICOLON@381..382 ";"
  WS@382..383 " "
  COMMENT@383..391 "// ERROR"
  NEWLINE@391..392 "\n"
  WS@392..397 "     "
  IDENT_KW@397..401 "uint"
  WS@401..402 " "
  IDENT_KW@402..405 "val"
  WS@405..406 " "
  EQUAL@406..407 "="
  WS@407..408 " "
  IDENT_KW@408..421 "atomicCounter"
  LPAREN@421..422 "("
  IDENT_KW@422..429 "counter"
  RPAREN@429..430 ")"
  SEMICOLON@430..431 ";"
  NEWLINE@431..432 "\n"
  WS@432..437 "     "
  IDENT_KW@437..459 "atomicCounterDecrement"
  LPAREN@459..460 "("
  IDENT_KW@460..467 "counter"
  RPAREN@467..468 ")"
  SEMICOLON@468..469 ";"
  NEWLINE@469..470 "\n"
  RBRACE@470..471 "}"
  NEWLINE@471..473 "\n\r"
  NEWLINE@473..474 "\n"
  IDENT_KW@474..480 "layout"
  LPAREN@480..481 "("
  IDENT_KW@481..488 "binding"
  WS@488..489 " "
  EQUAL@489..490 "="
  WS@490..491 " "
  DIGITS@491..492 "1"
  COMMA@492..493 ","
  WS@493..494 " "
  IDENT_KW@494..500 "offset"
  WS@500..501 " "
  EQUAL@501..502 "="
  WS@502..503 " "
  DIGITS@503..504 "3"
  RPAREN@504..505 ")"
  WS@505..506 " "
  IDENT_KW@506..513 "uniform"
  WS@513..514 " "
  IDENT_KW@514..525 "atomic_uint"
  WS@525..526 " "
  IDENT_KW@526..534 "countArr"
  LBRACKET@534..535 "["
  DIGITS@535..536 "4"
  RBRACKET@536..537 "]"
  SEMICOLON@537..538 ";"
  NEWLINE@538..540 "\r\n"
  IDENT_KW@540..547 "uniform"
  WS@547..548 " "
  IDENT_KW@548..551 "int"
  WS@551..552 " "
  IDENT_KW@552..553 "i"
  SEMICOLON@553..554 ";"
  NEWLINE@554..556 "\r\n"
  NEWLINE@556..558 "\r\n"
  IDENT_KW@558..562 "void"
  WS@562..563 " "
  IDENT_KW@563..567 "opac"
  LPAREN@567..568 "("
  RPAREN@568..569 ")"
  NEWLINE@569..571 "\r\n"
  LBRACE@571..572 "{"
  NEWLINE@572..574 "\r\n"
  WS@574..578 "    "
  IDENT_KW@578..585 "counter"
  WS@585..586 " "
  PLUS@586..587 "+"
  WS@587..588 " "
  IDENT_KW@588..595 "counter"
  SEMICOLON@595..596 ";"
  WS@596..598 "  "
  COMMENT@598..606 "// ERROR"
  NEWLINE@606..608 "\r\n"
  WS@608..612 "    "
  DASH@612..613 "-"
  IDENT_KW@613..620 "counter"
  SEMICOLON@620..621 ";"
  WS@621..632 "           "
  COMMENT@632..640 "// ERROR"
  NEWLINE@640..642 "\r\n"
  WS@642..646 "    "
  IDENT_KW@646..649 "int"
  WS@649..650 " "
  IDENT_KW@650..651 "a"
  LBRACKET@651..652 "["
  DIGITS@652..653 "3"
  RBRACKET@653..654 "]"
  SEMICOLON@654..655 ";"
  NEWLINE@655..657 "\r\n"
  WS@657..661 "    "
  IDENT_KW@661..662 "a"
  LBRACKET@662..663 "["
  IDENT_KW@663..670 "counter"
  RBRACKET@670..671 "]"
  SEMICOLON@671..672 ";"
  WS@672..681 "         "
  COMMENT@681..689 "// ERROR"
  NEWLINE@689..691 "\r\n"
  WS@691..695 "    "
  IDENT_KW@695..703 "countArr"
  LBRACKET@703..704 "["
  DIGITS@704..705 "2"
  RBRACKET@705..706 "]"
  SEMICOLON@706..707 ";"
  NEWLINE@707..709 "\r\n"
  WS@709..713 "    "
  IDENT_KW@713..721 "countArr"
  LBRACKET@721..722 "["
  IDENT_KW@722..723 "i"
  RBRACKET@723..724 "]"
  SEMICOLON@724..725 ";"
  NEWLINE@725..727 "\r\n"
  WS@727..731 "    "
  IDENT_KW@731..738 "counter"
  WS@738..739 " "
  EQUAL@739..740 "="
  WS@740..741 " "
  DIGITS@741..742 "4"
  SEMICOLON@742..743 ";"
  WS@743..751 "        "
  COMMENT@751..759 "// ERROR"
  NEWLINE@759..761 "\r\n"
  RBRACE@761..762 "}"
  NEWLINE@762..764 "\r\n"
  NEWLINE@764..766 "\r\n"
  IDENT_KW@766..768 "in"
  WS@768..769 " "
  IDENT_KW@769..780 "atomic_uint"
  WS@780..781 " "
  IDENT_KW@781..785 "acin"
  SEMICOLON@785..786 ";"
  WS@786..790 "    "
  COMMENT@790..798 "// ERROR"
  NEWLINE@798..800 "\r\n"
  IDENT_KW@800..811 "atomic_uint"
  WS@811..812 " "
  IDENT_KW@812..815 "acg"
  SEMICOLON@815..816 ";"
  WS@816..824 "        "
  COMMENT@824..832 "// ERROR"
  NEWLINE@832..834 "\r\n"
  IDENT_KW@834..841 "uniform"
  WS@841..842 " "
  IDENT_KW@842..853 "atomic_uint"
  SEMICOLON@853..854 ";"
  NEWLINE@854..856 "\r\n"
  IDENT_KW@856..863 "uniform"
  WS@863..864 " "
  IDENT_KW@864..875 "atomic_uint"
  WS@875..876 " "
  IDENT_KW@876..883 "aNoBind"
  SEMICOLON@883..884 ";"
  WS@884..910 "                      ..."
  COMMENT@910..930 "// ERROR, no binding"
  NEWLINE@930..932 "\r\n"
  IDENT_KW@932..938 "layout"
  LPAREN@938..939 "("
  IDENT_KW@939..946 "binding"
  EQUAL@946..947 "="
  DIGITS@947..948 "0"
  COMMA@948..949 ","
  WS@949..950 " "
  IDENT_KW@950..956 "offset"
  EQUAL@956..957 "="
  DIGITS@957..959 "32"
  RPAREN@959..960 ")"
  WS@960..961 " "
  IDENT_KW@961..968 "uniform"
  WS@968..969 " "
  IDENT_KW@969..980 "atomic_uint"
  WS@980..981 " "
  IDENT_KW@981..988 "aOffset"
  SEMICOLON@988..989 ";"
  NEWLINE@989..991 "\r\n"
  IDENT_KW@991..997 "layout"
  LPAREN@997..998 "("
  IDENT_KW@998..1005 "binding"
  EQUAL@1005..1006 "="
  DIGITS@1006..1007 "0"
  COMMA@1007..1008 ","
  WS@1008..1009 " "
  IDENT_KW@1009..1015 "offset"
  EQUAL@1015..1016 "="
  DIGITS@1016..1017 "4"
  RPAREN@1017..1018 ")"
  WS@1018..1019 " "
  IDENT_KW@1019..1026 "uniform"
  WS@1026..1027 " "
  IDENT_KW@1027..1038 "atomic_uint"
  SEMICOLON@1038..1039 ";"
  NEWLINE@1039..1041 "\r\n"
  IDENT_KW@1041..1047 "layout"
  LPAREN@1047..1048 "("
  IDENT_KW@1048..1055 "binding"
  EQUAL@1055..1056 "="
  DIGITS@1056..1057 "0"
  RPAREN@1057..1058 ")"
  WS@1058..1059 " "
  IDENT_KW@1059..1066 "uniform"
  WS@1066..1067 " "
  IDENT_KW@1067..1078 "atomic_uint"
  WS@1078..1079 " "
  IDENT_KW@1079..1083 "bar3"
  SEMICOLON@1083..1084 ";"
  WS@1084..1095 "           "
  COMMENT@1095..1109 "// offset is 4"
  NEWLINE@1109..1111 "\r\n"
  IDENT_KW@1111..1117 "layout"
  LPAREN@1117..1118 "("
  IDENT_KW@1118..1125 "binding"
  EQUAL@1125..1126 "="
  DIGITS@1126..1127 "0"
  RPAREN@1127..1128 ")"
  WS@1128..1129 " "
  IDENT_KW@1129..1136 "uniform"
  WS@1136..1137 " "
  IDENT_KW@1137..1148 "atomic_uint"
  WS@1148..1149 " "
  IDENT_KW@1149..1151 "ac"
  LBRACKET@1151..1152 "["
  DIGITS@1152..1153 "2"
  RBRACKET@1153..1154 "]"
  SEMICOLON@1154..1155 ";"
  WS@1155..1165 "          "
  COMMENT@1165..1178 "// offset = 8"
  NEWLINE@1178..1180 "\r\n"
  IDENT_KW@1180..1186 "layout"
  LPAREN@1186..1187 "("
  IDENT_KW@1187..1194 "binding"
  EQUAL@1194..1195 "="
  DIGITS@1195..1196 "0"
  RPAREN@1196..1197 ")"
  WS@1197..1198 " "
  IDENT_KW@1198..1205 "uniform"
  WS@1205..1206 " "
  IDENT_KW@1206..1217 "atomic_uint"
  WS@1217..1218 " "
  IDENT_KW@1218..1220 "ad"
  SEMICOLON@1220..1221 ";"
  WS@1221..1234 "             "
  COMMENT@1234..1248 "// offset = 20"
  NEWLINE@1248..1250 "\r\n"
  IDENT_KW@1250..1256 "layout"
  LPAREN@1256..1257 "("
  IDENT_KW@1257..1263 "offset"
  EQUAL@1263..1264 "="
  DIGITS@1264..1265 "8"
  RPAREN@1265..1266 ")"
  WS@1266..1267 " "
  IDENT_KW@1267..1274 "uniform"
  WS@1274..1275 " "
  IDENT_KW@1275..1286 "atomic_uint"
  WS@1286..1287 " "
  IDENT_KW@1287..1291 "bar4"
  SEMICOLON@1291..1292 ";"
  WS@1292..1304 "            "
  COMMENT@1304..1324 "// ERROR, no binding"
  NEWLINE@1324..1326 "\r\n"
  IDENT_KW@1326..1332 "layout"
  LPAREN@1332..1333 "("
  IDENT_KW@1333..1340 "binding"
  WS@1340..1341 " "
  EQUAL@1341..1342 "="
  WS@1342..1343 " "
  DIGITS@1343..1344 "0"
  COMMA@1344..1345 ","
  WS@1345..1346 " "
  IDENT_KW@1346..1352 "offset"
  WS@1352..1353 " "
  EQUAL@1353..1354 "="
  WS@1354..1355 " "
  DIGITS@1355..1357 "12"
  RPAREN@1357..1358 ")"
  WS@1358..1359 " "
  IDENT_KW@1359..1366 "uniform"
  WS@1366..1367 " "
  IDENT_KW@1367..1378 "atomic_uint"
  WS@1378..1379 " "
  IDENT_KW@1379..1386 "overlap"
  SEMICOLON@1386..1387 ";"
  WS@1387..1389 "  "
  COMMENT@1389..1418 "// ERROR, overlapping ..."
  NEWLINE@1418..1420 "\r\n"
  IDENT_KW@1420..1426 "layout"
  LPAREN@1426..1427 "("
  IDENT_KW@1427..1434 "binding"
  WS@1434..1435 " "
  EQUAL@1435..1436 "="
  WS@1436..1437 " "
  DIGITS@1437..1439 "20"
  RPAREN@1439..1440 ")"
  WS@1440..1441 " "
  IDENT_KW@1441..1448 "uniform"
  WS@1448..1449 " "
  IDENT_KW@1449..1460 "atomic_uint"
  WS@1460..1461 " "
  IDENT_KW@1461..1468 "bigBind"
  SEMICOLON@1468..1469 ";"
  WS@1469..1474 "     "
  COMMENT@1474..1499 "// ERROR, binding too ..."
  NEWLINE@1499..1501 "\r\n"
