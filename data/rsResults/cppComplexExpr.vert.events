Ok(EnterFile { file_id: FileId(0), path: "../data/cppComplexExpr.vert", canonical_path: "/data/cppComplexExpr.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..16, kind: Version(Version { number: 300, profile: Es }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@16..28, kind: Define(Define { name: "ON1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@27..27 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@28..40, kind: Define(Define { name: "ON2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@39..39 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 40..45 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 45..46 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 46..49 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 49..50 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 50..51 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 51..52 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 52..55 } "0.0", token_kind: FLOAT_CONST(0.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 55..56 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 56..57 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 57..58 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 58..62 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 62..63 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 63..67 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 67..68 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 68..69 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 69..70 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 70..71 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 71..72 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@72..123, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@76..122 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 123..128 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 128..129 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 129..133 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 133..136 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 136..137 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 137..139 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 139..140 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 140..143 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 143..144 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 144..145 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@145..152, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 152..153 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@153..225, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@157..224 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 225..230 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 230..231 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 231..235 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 235..238 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 238..239 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 239..241 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 241..242 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 242..246 } "20.0", token_kind: FLOAT_CONST(20.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 246..247 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 247..248 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@248..255, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 255..256 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@256..308, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@260..307 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 308..312 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 312..313 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 313..317 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 317..320 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 320..321 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 321..323 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 323..324 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 324..327 } "0.1", token_kind: FLOAT_CONST(0.1), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 327..328 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 328..329 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@329..336, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 336..337 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@337..408, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@341..407 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 408..412 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 412..413 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 413..417 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 417..420 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 420..421 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 421..423 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 423..424 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 424..427 } "0.2", token_kind: FLOAT_CONST(0.2), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 427..428 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 428..429 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@429..436, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 436..437 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@437..505, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@441..504 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 505..510 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 510..511 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 511..515 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 515..518 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 518..519 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 519..521 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 521..522 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 522..527 } "300.0", token_kind: FLOAT_CONST(300.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 527..528 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 528..529 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@529..536, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 536..537 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@537..607, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@541..606 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 607..611 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 611..612 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 612..616 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 616..619 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 619..620 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 620..622 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 622..623 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 623..626 } "0.4", token_kind: FLOAT_CONST(0.4), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 626..627 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 627..628 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@628..635, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 635..636 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 636..658 } "// sum should be 321.0", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 658..659 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 659..663 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 663..674 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 674..675 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 675..676 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 676..677 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 677..681 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 681..682 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 682..685 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 685..686 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 686..687 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 687..688 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 688..689 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 689..690 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 690..691 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@691..732, kind: Define(Define { name: "ADD", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@709..731 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 732..733 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 733..738 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 738..739 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 739..742 } "foo", token_kind: IDENT("foo"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 742..743 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 743..744 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 744..745 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 745..746 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 746..747 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 747..751 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 751..757 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 757..758 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 758..785 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 758..785 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 758..785 } "xyxwx", token_kind: IDENT("xyxwx"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 758..785 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 758..785 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 758..785 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 758..785 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 758..785 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 758..785 } "xyxwx", token_kind: IDENT("xyxwx"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 758..785 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..785 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 758..785 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 758..785 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 758..785 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 785..787 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 787..823 } "// ERROR, should be t ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 823..824 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 824..828 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 828..834 } "return", token_kind: RETURN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 834..835 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 835..858 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 835..858 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 835..858 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 835..858 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 835..858 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 835..858 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 835..858 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 835..858 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 835..858 } "y", token_kind: IDENT("y"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 835..858 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 835..858 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 835..858 } "3.0", token_kind: FLOAT_CONST(3.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 835..858 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 835..858 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 858..859 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 859..860 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 860..861 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 861..862 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@862..1808, kind: Define(Define { name: "BIG", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@874..1806 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1808..1809 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1809..1821 } "// identical", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1821..1822 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1822..2768, kind: Define(Define { name: "BIG", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1834..2766 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2768..2769 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2769..2802 } "// ERROR, one charact ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2802..2803 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2803..3748, kind: Define(Define { name: "BIG", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2815..3746 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3748..3749 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3749..3933, kind: Define(Define { name: "BIGARGS1", kind: Function(DefineFunction { args: ["aonthanotehu", "bonthanotehu", "conthanotehu", "donthanotehu", "eonthanotehu", "fonthanotehu", "gonthanotehu", "honthanotehu", "ionthanotehu", "jonthanotehu", "konthanotehu"], tokens: PP_DEFINE_BODY@3920..3932 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3933..4117, kind: Define(Define { name: "BIGARGS2", kind: Function(DefineFunction { args: ["aonthanotehu", "bonthanotehu", "conthanotehu", "donthanotehu", "eonthanotehu", "fonthanotehu", "gonthanotehu", "honthanotehu", "ionthanotehu", "jonthanotehu", "konthanotehu"], tokens: PP_DEFINE_BODY@4104..4116 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4117..4301, kind: Define(Define { name: "BIGARGS3", kind: Function(DefineFunction { args: ["aonthanotehu", "bonthanotehu", "conthanotehu", "donthanotehu", "eonthanotehu", "fonthanotehu", "gonthanotehu", "honthanotehu", "ionthanotehu", "jonthanotehu", "konthanotehu"], tokens: PP_DEFINE_BODY@4288..4300 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4301..4485, kind: Define(Define { name: "BIGARGS4", kind: Function(DefineFunction { args: ["aonthanotehu", "bonthanotehu", "conthanotehu", "donthanotehu", "eonthanotehu", "fonthanotehu", "gonthanotehu", "honthanotehu", "ionthanotehu", "jonthanotehu", "konthanotehu"], tokens: PP_DEFINE_BODY@4472..4484 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4485..4486 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4486..4487 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4487..4514, kind: Define(Define { name: "foobar", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4508..4513 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4514..4515 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4515..4536, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4519..4535 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(DIGITS@NodeSpan { source_id: FileId(0), range: 4519..4535 } "1.1") }))), pos: 4515..4536, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 80, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4536..4554, kind: Error(Error { message: "good macro" }), errors: [Located { inner: Processing(ErrorDirective { message: "good macro" }), pos: 4536..4554, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 81, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@4554..4560, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4560..4577, kind: Error(Error { message: "bad macro" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad macro" }), pos: 4560..4577, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 83, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4577..4584, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4584..4585 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4585..4598, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4589..4597 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MalformedExpr { tokens: [Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "foobar" }), pos: 4589..4597, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 86, column: 4 }, masked: false }, Token { token: LPAREN@NodeSpan { source_id: FileId(0), range: 4595..4596 } "(", masked: false }, Token { token: DIGITS@NodeSpan { source_id: FileId(0), range: 4596..4597 } "1", masked: false }] }))), pos: 4585..4598, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 86, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 4598..4599 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4599..4600 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@4600..4602, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@4602..4604, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4604..4611, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@4611..4625, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4615..4624 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MalformedExpr { tokens: [Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "foobar" }), pos: 4615..4624, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 91, column: 4 }, masked: false }, Token { token: LPAREN@NodeSpan { source_id: FileId(0), range: 4621..4622 } "(", masked: false }, Token { token: DIGITS@NodeSpan { source_id: FileId(0), range: 4622..4623 } "1", masked: false }, Token { token: COMMA@NodeSpan { source_id: FileId(0), range: 4623..4624 } ",", masked: false }] }))), pos: 4611..4625, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 91, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 4625..4626 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4626..4627 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@4627..4629, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@4629..4631, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4631..4638, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4638..4643 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4643..4644 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4644..4645 } "c", token_kind: IDENT("c"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4645..4646 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 4646..4647 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4647..4648 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4648..4672 } "1.1", token_kind: FLOAT_CONST(1.1), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4648..4672 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 4648..4672 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4648..4672 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4648..4672 } "2.2", token_kind: FLOAT_CONST(2.2), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 4672..4673 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4673..4674 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4674..4694, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4678..4693 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MalformedExpr { tokens: [Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "foobar" }), pos: 4678..4693, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 98, column: 4 }, masked: false }, Token { token: LPAREN@NodeSpan { source_id: FileId(0), range: 4684..4685 } "(", masked: false }, Token { token: DIGITS@NodeSpan { source_id: FileId(0), range: 4685..4688 } "1.1", masked: false }, Token { token: COMMA@NodeSpan { source_id: FileId(0), range: 4688..4689 } ",", masked: false }, Token { token: WS@NodeSpan { source_id: FileId(0), range: 4689..4690 } " ", masked: false }, Token { token: DIGITS@NodeSpan { source_id: FileId(0), range: 4690..4693 } "2.2", masked: false }] }))), pos: 4674..4694, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 98, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4694..4695 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4695..4696 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4696..4716, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4700..4715 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MalformedExpr { tokens: [Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "foobar" }), pos: 4700..4715, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 100, column: 4 }, masked: false }, Token { token: LPAREN@NodeSpan { source_id: FileId(0), range: 4706..4707 } "(", masked: false }, Token { token: DIGITS@NodeSpan { source_id: FileId(0), range: 4707..4710 } "1.1", masked: false }, Token { token: COMMA@NodeSpan { source_id: FileId(0), range: 4710..4711 } ",", masked: false }, Token { token: WS@NodeSpan { source_id: FileId(0), range: 4711..4712 } " ", masked: false }, Token { token: DIGITS@NodeSpan { source_id: FileId(0), range: 4712..4715 } "2.2", masked: false }] }))), pos: 4696..4716, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 100, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4716..4723, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4723..4730, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4730..4731 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4731..4746, kind: Define(Define { name: "VAL0", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4744..4745 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4746..4761, kind: Define(Define { name: "VAL1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4759..4760 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4761..4762 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4762..4772, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4766..4771 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4772..4785, kind: Error(Error { message: "bad 0" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad 0" }), pos: 4772..4785, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 108, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ELSE@4785..4791, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4791..4805, kind: Error(Error { message: "good 0" }), errors: [Located { inner: Processing(ErrorDirective { message: "good 0" }), pos: 4791..4805, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 110, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4805..4812, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4812..4813 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4813..4831, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4817..4830 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4831..4845, kind: Error(Error { message: "good 1" }), errors: [Located { inner: Processing(ErrorDirective { message: "good 1" }), pos: 4831..4845, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 114, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@4845..4851, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4851..4864, kind: Error(Error { message: "bad 1" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad 1" }), pos: 4851..4864, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 116, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4864..4871, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4871..4872 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4872..4905, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4876..4889 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4905..4912, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4912..4913 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4913..4946, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4917..4930 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4946..4953, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4953..4954 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4954..4972, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4958..4971 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4972..4985, kind: Error(Error { message: "bad 2" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad 2" }), pos: 4972..4985, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 126, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ELSE@4985..4991, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4991..5005, kind: Error(Error { message: "good 1" }), errors: [Located { inner: Processing(ErrorDirective { message: "good 1" }), pos: 4991..5005, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 128, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5005..5012, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5012..5013 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5013..5041, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5017..5040 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5041..5055, kind: Error(Error { message: "good 3" }), errors: [Located { inner: Processing(ErrorDirective { message: "good 3" }), pos: 5041..5055, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 132, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@5055..5061, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5061..5074, kind: Error(Error { message: "bad 3" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad 3" }), pos: 5061..5074, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 134, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5074..5081, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5081..5082 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5082..5110, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5086..5109 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5110..5124, kind: Error(Error { message: "good 4" }), errors: [Located { inner: Processing(ErrorDirective { message: "good 4" }), pos: 5110..5124, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 138, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@5124..5130, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5130..5143, kind: Error(Error { message: "bad 4" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad 4" }), pos: 5130..5143, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 140, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5143..5150, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5150..5151 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5151..5206, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5155..5190 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5206..5213, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5213..5214 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5214..5254, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5218..5253 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5254..5261, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5261..5262 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5262..5290, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5266..5289 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5290..5297, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5297..5298 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5298..5342, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5302..5325 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5342..5349, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5349..5350 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5350..5396, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5354..5379 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5396..5403, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5403..5404 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5404..5450, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5408..5433 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5450..5457, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5457..5458 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@5458..5469, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@5464..5468 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5469..5510, kind: Error(Error { message: "line of this error should be 3000" }), errors: [Located { inner: Processing(ErrorDirective { message: "line of this error should be 3000" }), pos: 5469..5510, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 2999, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5510..5514 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5514..5515 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5515..5535, kind: Define(Define { name: "__LINE__", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5532..5534 }), protected: false }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__LINE__", is_undef: false }), pos: 5515..5535, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3001, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5535..5552, kind: Define(Define { name: "__FILE__", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5551..5551 }), protected: false }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__FILE__", is_undef: false }), pos: 5535..5552, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3002, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5552..5572, kind: Define(Define { name: "__VERSION__", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5571..5571 }), protected: false }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__VERSION__", is_undef: false }), pos: 5552..5572, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3003, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5572..5598, kind: Define(Define { name: "GL_SOME_EXTENSION", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5597..5597 }), protected: false }), errors: [Located { inner: Processing(ProtectedDefine { ident: "GL_SOME_EXTENSION", is_undef: false }), pos: 5572..5598, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3004, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@5598..5614, kind: Undef(Undef { ident: "__LINE__" }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__LINE__", is_undef: true }), pos: 5598..5614, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3005, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@5614..5630, kind: Undef(Undef { ident: "__FILE__" }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__FILE__", is_undef: true }), pos: 5614..5630, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3006, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@5630..5649, kind: Undef(Undef { ident: "__VERSION__" }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__VERSION__", is_undef: true }), pos: 5630..5649, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3007, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@5649..5674, kind: Undef(Undef { ident: "GL_SOME_EXTENSION" }), errors: [Located { inner: Processing(ProtectedDefine { ident: "GL_SOME_EXTENSION", is_undef: true }), pos: 5649..5674, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3008, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5674..5675 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@5675..5686, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@5681..5685 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectiveLine(InvalidLineNumber { token: Constant(Err(())) })), pos: 5686..5723, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3999, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@5723..5760, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5727..5739 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Constant(Err(())) }))), pos: 5723..5760, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 4000, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5760..5767, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5767..5768 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5768..5817, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5772..5774 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MissingExpr))), pos: 5768..5817, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 4003, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5817..5818 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@5818..5830, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@5824..5829 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@5830..5836, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5834..5835 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 5836..5849 } "// ERROR, EOF", token_kind: COMMENT, state: Masked })
