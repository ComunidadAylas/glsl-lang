Ok(EnterFile { file_id: FileId(0), path: "../data/cppNest.vert", canonical_path: "/data/cppNest.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 110, profile: None }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@14..25, kind: Define(Define { name: "ON", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@24..24 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 25..26 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 26..31 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 31..32 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 32..35 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 35..36 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 36..37 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 37..38 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 38..41 } "0.0", token_kind: FLOAT_CONST(0.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 41..42 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 42..43 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 43..44 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 44..48 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 48..49 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 49..53 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 53..54 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 54..55 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 55..56 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 56..57 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 57..58 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 58..59 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@59..69, kind: IfDef(IfDef { ident: "ON" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 69..74 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 74..75 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 75..78 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 78..79 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 79..81 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 81..82 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 82..85 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 85..86 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 86..87 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 87..88 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@88..103, kind: IfDef(IfDef { ident: "OFF" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 103..107 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 107..111 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 111..112 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 112..116 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 116..119 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 119..120 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 120..122 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 122..123 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 123..127 } "20.0", token_kind: FLOAT_CONST(20.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 127..128 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 128..129 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@129..140, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 140..141 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@141..161, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@149..160 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 161..165 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 165..170 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 170..171 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 171..175 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 175..178 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 178..179 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 179..181 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 181..182 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 182..187 } "300.0", token_kind: FLOAT_CONST(300.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 187..188 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 188..189 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@189..200, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 200..201 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@201..208, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 208..209 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 209..210 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@210..227, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@214..226 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 227..231 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 231..232 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 232..235 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 235..236 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 236..238 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 238..239 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 239..245 } "4000.0", token_kind: FLOAT_CONST(4000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 245..246 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 246..247 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 247..248 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_IF@248..265, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@252..264 }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 265..269 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 269..270 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 270..273 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 273..274 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 274..276 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 276..277 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 277..284 } "50000.0", token_kind: FLOAT_CONST(50000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 284..285 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 285..286 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@286..293, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 293..294 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 294..298 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 298..302 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 302..303 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 303..307 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 307..310 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 310..311 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 311..313 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 313..314 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 314..317 } "0.1", token_kind: FLOAT_CONST(0.1), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 317..318 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 318..319 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@319..333, kind: IfDef(IfDef { ident: "ON" }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 333..341 } "        ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 341..345 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 345..346 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 346..354 } "        ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 354..357 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 357..358 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 358..360 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 360..361 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 361..364 } "0.2", token_kind: FLOAT_CONST(0.2), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 364..365 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 365..366 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@366..377, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 377..378 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 378..382 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 382..386 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 386..387 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 387..391 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 391..394 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 394..395 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 395..397 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 397..398 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 398..402 } "0.01", token_kind: FLOAT_CONST(0.01), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 402..403 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 403..404 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@404..418, kind: IfDef(IfDef { ident: "ON" }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 418..426 } "        ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 426..430 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 430..431 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 431..439 } "        ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 439..442 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 442..443 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 443..445 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 445..446 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 446..450 } "0.02", token_kind: FLOAT_CONST(0.02), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 450..451 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 451..452 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@452..462, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 462..470 } "        ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 470..474 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 474..475 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 475..483 } "        ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 483..486 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 486..487 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 487..489 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 489..490 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 490..494 } "0.03", token_kind: FLOAT_CONST(0.03), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 494..495 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 495..496 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@496..507, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 507..508 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 508..512 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 512..513 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 513..517 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 517..520 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 520..521 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 521..522 } "+", token_kind: PLUS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 522..523 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 523..526 } "0.3", token_kind: FLOAT_CONST(0.3), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 526..527 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 527..528 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 528..529 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@529..536, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 536..537 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 537..538 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@538..556, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@542..555 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 556..561 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 561..562 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 562..565 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 565..566 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 566..568 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 568..569 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 569..577 } "600000.0", token_kind: FLOAT_CONST(600000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 577..578 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 578..579 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 579..580 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@580..617, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@588..616 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 617..621 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 621..626 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 626..627 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 627..631 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 631..634 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 634..635 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 635..637 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 637..638 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 638..648 } "80000000.0", token_kind: FLOAT_CONST(80000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 648..649 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 649..650 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 650..651 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@651..691, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@663..690 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 691..699 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 699..704 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 704..705 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 705..713 } "        ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 713..716 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 716..717 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 717..719 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 719..720 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 720..731 } "900000000.0", token_kind: FLOAT_CONST(900000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 731..732 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 732..733 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 733..734 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@734..778, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@750..777 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 778..794 } "                ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 794..798 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 798..799 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 799..815 } "                ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 815..818 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 818..819 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 819..821 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 821..822 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 822..825 } "0.7", token_kind: FLOAT_CONST(0.7), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 825..826 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 826..827 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELIF@827..859, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@845..858 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 859..875 } "                ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 875..880 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 880..881 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 881..897 } "                ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 897..900 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 900..901 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 901..903 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 903..904 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 904..913 } "7000000.0", token_kind: FLOAT_CONST(7000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 913..914 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 914..915 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@915..934, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 934..935 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@935..950, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 950..951 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@951..962, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 962..963 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@963..970, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 970..971 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 971..999 } "// sum should be 9876 ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 999..1000 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1000..1004 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1004..1015 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1015..1016 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1016..1017 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1017..1018 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1018..1022 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1022..1023 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1023..1026 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1026..1027 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1027..1028 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1028..1029 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 1029..1030 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1030..1031 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1031..1032 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1032..1045, kind: Define(Define { name: "A", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1043..1044 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1045..1058, kind: Define(Define { name: "C", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1056..1057 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1058..1071, kind: Define(Define { name: "E", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1069..1070 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1071..1084, kind: Define(Define { name: "F", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1082..1083 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1084..1090, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1088..1089 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1090..1100, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1098..1099 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1100..1114, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1112..1113 }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1114..1126 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1126..1129 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1129..1130 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1130..1139 } "selected4", token_kind: IDENT("selected4"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1139..1140 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1140..1141 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1141..1142 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1142..1143 } "1", token_kind: INT_CONST(1), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1143..1144 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1144..1145 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELIF@1145..1161, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@1159..1160 }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1161..1173 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1173..1176 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1176..1177 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1177..1186 } "selected4", token_kind: IDENT("selected4"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1186..1187 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1187..1188 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1188..1189 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1189..1190 } "2", token_kind: INT_CONST(2), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1190..1191 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1191..1192 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1192..1206, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1206..1218 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1218..1221 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1221..1222 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1222..1231 } "selected4", token_kind: IDENT("selected4"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1231..1232 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1232..1233 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1233..1234 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1234..1235 } "3", token_kind: INT_CONST(3), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1235..1236 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1236..1237 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1237..1252, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1252..1263, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1263..1267 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1267..1270 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1270..1271 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1271..1280 } "selected4", token_kind: IDENT("selected4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1280..1281 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1281..1282 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1282..1283 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1283..1284 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1284..1285 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1285..1286 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1286..1293, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1293..1294 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1294..1308, kind: Define(Define { name: "ZA", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1306..1307 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1308..1322, kind: Define(Define { name: "ZC", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1320..1321 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1322..1336, kind: Define(Define { name: "ZE", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1334..1335 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1336..1350, kind: Define(Define { name: "ZF", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1348..1349 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1350..1357, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1354..1356 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1357..1368, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1365..1367 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1368..1383, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1380..1382 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1383..1395 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1395..1398 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1398..1399 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1399..1408 } "selected2", token_kind: IDENT("selected2"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1408..1409 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1409..1410 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1410..1411 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1411..1412 } "1", token_kind: INT_CONST(1), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1412..1413 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1413..1414 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELIF@1414..1431, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@1428..1430 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1431..1443 } "            ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1443..1446 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1446..1447 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1447..1456 } "selected2", token_kind: IDENT("selected2"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1456..1457 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1457..1458 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1458..1459 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1459..1460 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1460..1461 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1461..1462 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1462..1476, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1476..1488 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1488..1491 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1491..1492 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1492..1501 } "selected2", token_kind: IDENT("selected2"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1501..1502 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1502..1503 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1503..1504 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1504..1505 } "3", token_kind: INT_CONST(3), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1505..1506 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1506..1507 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1507..1522, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1522..1533, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1533..1540, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1540..1541 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1541..1556, kind: Define(Define { name: "AZA", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1554..1555 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1556..1571, kind: Define(Define { name: "AZC", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1569..1570 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1571..1586, kind: Define(Define { name: "AZE", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1584..1585 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1586..1601, kind: Define(Define { name: "AZF", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1599..1600 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1601..1609, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1605..1608 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1609..1621, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1617..1620 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1621..1637, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1633..1636 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1637..1649 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1649..1652 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1652..1653 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1653..1662 } "selected3", token_kind: IDENT("selected3"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1662..1663 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1663..1664 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1664..1665 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1665..1666 } "1", token_kind: INT_CONST(1), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1666..1667 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1667..1668 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELIF@1668..1686, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@1682..1685 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1686..1698 } "            ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1698..1701 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1701..1702 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1702..1711 } "selected3", token_kind: IDENT("selected3"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1711..1712 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1712..1713 } "=", token_kind: EQUAL, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1713..1714 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1714..1715 } "2", token_kind: INT_CONST(2), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1715..1716 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1716..1717 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1717..1731, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1731..1743 } "            ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1743..1746 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1746..1747 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1747..1756 } "selected3", token_kind: IDENT("selected3"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1756..1757 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1757..1758 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1758..1759 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1759..1760 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1760..1761 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1761..1762 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1762..1777, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1777..1788, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1788..1795, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1795..1796 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1796..1813 } "// ERROR cases...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1813..1814 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1814..1815 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1815..1821, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1819..1820 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1821..1824 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1824..1825 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1825..1826 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1826..1832, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1832..1835 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1835..1836 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1836..1837 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ELIF@1837..1845, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@1843..1844 }), errors: [Located { inner: Processing(ExtraElif), pos: 1837..1845, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 143, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1845..1848 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1848..1849 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1849..1850 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1850..1857, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1857..1858 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1858..1864, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1862..1863 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1864..1867 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1867..1868 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1868..1869 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1869..1875, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1875..1878 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1878..1879 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1879..1880 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1880..1886, kind: Else(Else), errors: [Located { inner: Processing(ExtraElif), pos: 1880..1886, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 151, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1886..1889 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1889..1890 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1890..1891 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1891..1898, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1898..1899 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1899..1905, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1903..1904 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1905..1915, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1913..1914 }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1915..1919 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1919..1922 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1922..1923 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1923..1924 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1924..1934, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1934..1938 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1938..1941 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1941..1942 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1942..1943 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELIF@1943..1955, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@1953..1954 }), errors: [Located { inner: Processing(ExtraElif), pos: 1943..1955, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 160, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1955..1959 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1959..1962 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1962..1963 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1963..1964 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1964..1975, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1975..1976 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_IF@1976..1986, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1984..1985 }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1986..1990 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1990..1993 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1993..1994 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1994..1995 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1995..2005, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2005..2009 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2009..2012 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2012..2013 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2013..2014 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@2014..2024, kind: Else(Else), errors: [Located { inner: Processing(ExtraElif), pos: 2014..2024, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 168, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2024..2028 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2028..2031 } "int", token_kind: TYPE_NAME(INT), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2031..2032 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2032..2033 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@2033..2044, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@2044..2051, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2051..2052 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2052..2075, kind: Define(Define { name: "FUNC", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@2071..2074 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2075..2079 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2079..2080 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2080..2086 } "foo985", token_kind: IDENT("foo985"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2086..2087 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2087..2088 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 2088..2089 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2089..2090 } "\t", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2090..2113 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 2090..2113 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2090..2113 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2090..2113 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2090..2113 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2090..2113 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2113..2114 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2114..2115 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 2115..2116 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2116..2117 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2117..2149 } "// needs to be last t ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2149..2150 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2150..2154 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2154..2155 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2155..2161 } "foo987", token_kind: IDENT("foo987"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2161..2162 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2162..2163 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 2163..2164 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2164..2165 } "\t", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "FUNC" }), pos: 2165..2204, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 176, column: 15 }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2165..2169 } "FUNC", token_kind: IDENT("FUNC"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2169..2170 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2170..2171 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2171..2172 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2172..2173 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2173..2174 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2174..2175 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 2175..2176 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2176..2178 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2178..2203 } "// ERROR, EOF in argu ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2203..2204 } "\n", token_kind: WS, state: Active })
