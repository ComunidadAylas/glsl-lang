ROOT@0..1725
  PP_VERSION@0..14
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "110"
    NEWLINE@12..14 "\r\n"
  NEWLINE@14..16 "\r\n"
  IDENT_KW@16..19 "int"
  WS@19..20 " "
  IDENT_KW@20..21 "f"
  LPAREN@21..22 "("
  IDENT_KW@22..25 "int"
  WS@25..26 " "
  IDENT_KW@26..27 "a"
  COMMA@27..28 ","
  WS@28..29 " "
  IDENT_KW@29..32 "int"
  WS@32..33 " "
  IDENT_KW@33..34 "b"
  COMMA@34..35 ","
  WS@35..36 " "
  IDENT_KW@36..39 "int"
  WS@39..40 " "
  IDENT_KW@40..41 "c"
  RPAREN@41..42 ")"
  NEWLINE@42..44 "\r\n"
  LBRACE@44..45 "{"
  NEWLINE@45..47 "\r\n"
  WS@47..48 "\t"
  IDENT_KW@48..51 "int"
  WS@51..52 " "
  IDENT_KW@52..53 "a"
  WS@53..54 " "
  EQUAL@54..55 "="
  WS@55..56 " "
  IDENT_KW@56..57 "b"
  SEMICOLON@57..58 ";"
  WS@58..60 "  "
  COMMENT@60..82 "// ERROR, redefinition"
  NEWLINE@82..84 "\r\n"
  NEWLINE@84..86 "\r\n"
  WS@86..90 "    "
  LBRACE@90..91 "{"
  NEWLINE@91..93 "\r\n"
  WS@93..95 "\t\t"
  IDENT_KW@95..100 "float"
  WS@100..101 " "
  IDENT_KW@101..102 "a"
  WS@102..103 " "
  EQUAL@103..104 "="
  WS@104..105 " "
  IDENT_KW@105..110 "float"
  LPAREN@110..111 "("
  IDENT_KW@111..112 "a"
  RPAREN@112..113 ")"
  WS@113..114 " "
  PLUS@114..115 "+"
  WS@115..116 " "
  DIGITS@116..119 "1.0"
  SEMICOLON@119..120 ";"
  WS@120..121 " "
  COMMENT@121..128 "// okay"
  NEWLINE@128..130 "\r\n"
  WS@130..134 "    "
  RBRACE@134..135 "}"
  NEWLINE@135..137 "\r\n"
  NEWLINE@137..139 "\r\n"
  WS@139..140 "\t"
  IDENT_KW@140..146 "return"
  WS@146..147 " "
  IDENT_KW@147..148 "a"
  SEMICOLON@148..149 ";"
  NEWLINE@149..151 "\r\n"
  RBRACE@151..152 "}"
  NEWLINE@152..154 "\r\n"
  NEWLINE@154..156 "\r\n"
  IDENT_KW@156..159 "int"
  WS@159..160 " "
  IDENT_KW@160..161 "f"
  LPAREN@161..162 "("
  IDENT_KW@162..165 "int"
  WS@165..166 " "
  IDENT_KW@166..167 "a"
  COMMA@167..168 ","
  WS@168..169 " "
  IDENT_KW@169..172 "int"
  WS@172..173 " "
  IDENT_KW@173..174 "b"
  COMMA@174..175 ","
  WS@175..176 " "
  IDENT_KW@176..179 "int"
  WS@179..180 " "
  IDENT_KW@180..181 "c"
  RPAREN@181..182 ")"
  SEMICOLON@182..183 ";"
  WS@183..185 "  "
  COMMENT@185..205 "// okay to redeclare"
  NEWLINE@205..207 "\r\n"
  NEWLINE@207..209 "\r\n"
  IDENT_KW@209..213 "bool"
  WS@213..214 " "
  IDENT_KW@214..215 "b"
  SEMICOLON@215..216 ";"
  NEWLINE@216..218 "\r\n"
  IDENT_KW@218..223 "float"
  WS@223..224 " "
  IDENT_KW@224..225 "b"
  LPAREN@225..226 "("
  IDENT_KW@226..229 "int"
  WS@229..230 " "
  IDENT_KW@230..231 "a"
  RPAREN@231..232 ")"
  SEMICOLON@232..233 ";"
  WS@233..239 "      "
  COMMENT@239..271 "// okay, b and b() ar ..."
  NEWLINE@271..273 "\r\n"
  NEWLINE@273..275 "\r\n"
  IDENT_KW@275..280 "float"
  WS@280..281 " "
  IDENT_KW@281..282 "c"
  LPAREN@282..283 "("
  IDENT_KW@283..286 "int"
  WS@286..287 " "
  IDENT_KW@287..288 "a"
  RPAREN@288..289 ")"
  SEMICOLON@289..290 ";"
  NEWLINE@290..292 "\r\n"
  IDENT_KW@292..296 "bool"
  WS@296..297 " "
  IDENT_KW@297..298 "c"
  SEMICOLON@298..299 ";"
  WS@299..313 "              "
  COMMENT@313..343 "// okay, and c() are  ..."
  NEWLINE@343..345 "\r\n"
  NEWLINE@345..347 "\r\n"
  IDENT_KW@347..352 "float"
  WS@352..353 " "
  IDENT_KW@353..354 "f"
  SEMICOLON@354..355 ";"
  WS@355..368 "             "
  COMMENT@368..399 "// okay f and f() are ..."
  NEWLINE@399..401 "\r\n"
  IDENT_KW@401..406 "float"
  WS@406..407 " "
  IDENT_KW@407..410 "tan"
  SEMICOLON@410..411 ";"
  WS@411..422 "           "
  COMMENT@422..454 "// okay, hides built- ..."
  NEWLINE@454..456 "\r\n"
  IDENT_KW@456..461 "float"
  WS@461..462 " "
  IDENT_KW@462..465 "sin"
  LPAREN@465..466 "("
  IDENT_KW@466..471 "float"
  WS@471..472 " "
  IDENT_KW@472..473 "x"
  RPAREN@473..474 ")"
  SEMICOLON@474..475 ";"
  WS@475..477 "  "
  COMMENT@477..517 "// okay, can redefine ..."
  NEWLINE@517..519 "\r\n"
  IDENT_KW@519..524 "float"
  WS@524..525 " "
  IDENT_KW@525..528 "cos"
  LPAREN@528..529 "("
  IDENT_KW@529..534 "float"
  WS@534..535 " "
  IDENT_KW@535..536 "x"
  RPAREN@536..537 ")"
  WS@537..540 "   "
  COMMENT@540..580 "// okay, can redefine ..."
  NEWLINE@580..582 "\r\n"
  LBRACE@582..583 "{"
  NEWLINE@583..585 "\r\n"
  WS@585..586 "\t"
  IDENT_KW@586..592 "return"
  WS@592..593 " "
  DIGITS@593..596 "1.0"
  SEMICOLON@596..597 ";"
  NEWLINE@597..599 "\r\n"
  RBRACE@599..600 "}"
  NEWLINE@600..602 "\r\n"
  IDENT_KW@602..606 "bool"
  WS@606..607 " "
  IDENT_KW@607..614 "radians"
  LPAREN@614..615 "("
  IDENT_KW@615..619 "bool"
  WS@619..620 " "
  IDENT_KW@620..621 "x"
  RPAREN@621..622 ")"
  WS@622..623 " "
  COMMENT@623..663 "// okay, can overload ..."
  NEWLINE@663..665 "\r\n"
  LBRACE@665..666 "{"
  NEWLINE@666..668 "\r\n"
  WS@668..672 "    "
  IDENT_KW@672..678 "return"
  WS@678..679 " "
  IDENT_KW@679..683 "true"
  SEMICOLON@683..684 ";"
  NEWLINE@684..686 "\r\n"
  RBRACE@686..687 "}"
  NEWLINE@687..689 "\r\n"
  NEWLINE@689..691 "\r\n"
  IDENT_KW@691..694 "int"
  WS@694..695 " "
  IDENT_KW@695..697 "gi"
  WS@697..698 " "
  EQUAL@698..699 "="
  WS@699..700 " "
  IDENT_KW@700..701 "f"
  LPAREN@701..702 "("
  DIGITS@702..703 "1"
  COMMA@703..704 ","
  DIGITS@704..705 "2"
  COMMA@705..706 ","
  DIGITS@706..707 "3"
  RPAREN@707..708 ")"
  SEMICOLON@708..709 ";"
  WS@709..711 "  "
  COMMENT@711..771 "// ERROR, can't call  ..."
  NEWLINE@771..773 "\r\n"
  NEWLINE@773..775 "\r\n"
  IDENT_KW@775..779 "void"
  WS@779..780 " "
  IDENT_KW@780..784 "main"
  LPAREN@784..785 "("
  RPAREN@785..786 ")"
  NEWLINE@786..788 "\r\n"
  LBRACE@788..789 "{"
  NEWLINE@789..791 "\r\n"
  WS@791..795 "    "
  IDENT_KW@795..798 "int"
  WS@798..799 " "
  IDENT_KW@799..800 "g"
  LPAREN@800..801 "("
  RPAREN@801..802 ")"
  SEMICOLON@802..803 ";"
  WS@803..807 "    "
  COMMENT@807..814 "// okay"
  NEWLINE@814..816 "\r\n"
  WS@816..820 "    "
  IDENT_KW@820..821 "g"
  LPAREN@821..822 "("
  RPAREN@822..823 ")"
  SEMICOLON@823..824 ";"
  NEWLINE@824..826 "\r\n"
  NEWLINE@826..828 "\r\n"
  WS@828..832 "    "
  IDENT_KW@832..837 "float"
  WS@837..838 " "
  IDENT_KW@838..841 "sin"
  SEMICOLON@841..842 ";"
  WS@842..843 " "
  COMMENT@843..850 "// okay"
  NEWLINE@850..852 "\r\n"
  WS@852..856 "    "
  IDENT_KW@856..859 "sin"
  SEMICOLON@859..860 ";"
  NEWLINE@860..862 "\r\n"
  WS@862..866 "    "
  IDENT_KW@866..869 "sin"
  LPAREN@869..870 "("
  DIGITS@870..873 "0.7"
  RPAREN@873..874 ")"
  SEMICOLON@874..875 ";"
  WS@875..877 "  "
  COMMENT@877..884 "// okay"
  NEWLINE@884..886 "\r\n"
  WS@886..890 "    "
  IDENT_KW@890..891 "f"
  LPAREN@891..892 "("
  DIGITS@892..893 "1"
  COMMA@893..894 ","
  DIGITS@894..895 "2"
  COMMA@895..896 ","
  DIGITS@896..897 "3"
  RPAREN@897..898 ")"
  SEMICOLON@898..899 ";"
  NEWLINE@899..901 "\r\n"
  NEWLINE@901..903 "\r\n"
  WS@903..907 "    "
  IDENT_KW@907..912 "float"
  WS@912..913 " "
  IDENT_KW@913..914 "f"
  SEMICOLON@914..915 ";"
  NEWLINE@915..917 "\r\n"
  WS@917..921 "    "
  IDENT_KW@921..922 "f"
  WS@922..923 " "
  EQUAL@923..924 "="
  WS@924..925 " "
  DIGITS@925..928 "3.0"
  SEMICOLON@928..929 ";"
  NEWLINE@929..931 "\r\n"
  NEWLINE@931..933 "\r\n"
  WS@933..937 "    "
  IDENT_KW@937..948 "gl_Position"
  WS@948..949 " "
  EQUAL@949..950 "="
  WS@950..951 " "
  IDENT_KW@951..955 "vec4"
  LPAREN@955..956 "("
  IDENT_KW@956..957 "f"
  RPAREN@957..958 ")"
  SEMICOLON@958..959 ";"
  NEWLINE@959..961 "\r\n"
  NEWLINE@961..963 "\r\n"
  WS@963..967 "    "
  IDENT_KW@967..970 "for"
  WS@970..971 " "
  LPAREN@971..972 "("
  IDENT_KW@972..975 "int"
  WS@975..976 " "
  IDENT_KW@976..977 "f"
  WS@977..978 " "
  EQUAL@978..979 "="
  WS@979..980 " "
  DIGITS@980..981 "0"
  SEMICOLON@981..982 ";"
  WS@982..983 " "
  IDENT_KW@983..984 "f"
  WS@984..985 " "
  LANGLE@985..986 "<"
  WS@986..987 " "
  DIGITS@987..989 "10"
  SEMICOLON@989..990 ";"
  WS@990..991 " "
  INC_OP@991..993 "++"
  IDENT_KW@993..994 "f"
  RPAREN@994..995 ")"
  NEWLINE@995..997 "\r\n"
  WS@997..1005 "        "
  INC_OP@1005..1007 "++"
  IDENT_KW@1007..1008 "f"
  SEMICOLON@1008..1009 ";"
  NEWLINE@1009..1011 "\r\n"
  NEWLINE@1011..1013 "\r\n"
  WS@1013..1017 "    "
  IDENT_KW@1017..1020 "int"
  WS@1020..1021 " "
  IDENT_KW@1021..1022 "x"
  WS@1022..1023 " "
  EQUAL@1023..1024 "="
  WS@1024..1025 " "
  DIGITS@1025..1026 "1"
  SEMICOLON@1026..1027 ";"
  NEWLINE@1027..1029 "\r\n"
  WS@1029..1033 "    "
  LBRACE@1033..1034 "{"
  WS@1034..1035 " "
  NEWLINE@1035..1037 "\r\n"
  WS@1037..1045 "        "
  IDENT_KW@1045..1050 "float"
  WS@1050..1051 " "
  IDENT_KW@1051..1052 "x"
  WS@1052..1053 " "
  EQUAL@1053..1054 "="
  WS@1054..1055 " "
  DIGITS@1055..1058 "2.0"
  COMMA@1058..1059 ","
  WS@1059..1060 " "
  COMMENT@1060..1084 "/* 2nd x visible here */"
  WS@1084..1085 " "
  IDENT_KW@1085..1086 "y"
  WS@1086..1087 " "
  EQUAL@1087..1088 "="
  WS@1088..1089 " "
  IDENT_KW@1089..1090 "x"
  SEMICOLON@1090..1091 ";"
  WS@1091..1092 " "
  COMMENT@1092..1116 "// y is initialized to 2"
  NEWLINE@1116..1118 "\r\n"
  WS@1118..1126 "        "
  IDENT_KW@1126..1129 "int"
  WS@1129..1130 " "
  IDENT_KW@1130..1131 "z"
  WS@1131..1132 " "
  EQUAL@1132..1133 "="
  WS@1133..1134 " "
  IDENT_KW@1134..1135 "z"
  SEMICOLON@1135..1136 ";"
  WS@1136..1137 " "
  COMMENT@1137..1172 "// ERROR: z not previ ..."
  NEWLINE@1172..1174 "\r\n"
  WS@1174..1178 "    "
  RBRACE@1178..1179 "}"
  NEWLINE@1179..1181 "\r\n"
  WS@1181..1185 "    "
  LBRACE@1185..1186 "{"
  NEWLINE@1186..1188 "\r\n"
  WS@1188..1196 "        "
  IDENT_KW@1196..1199 "int"
  WS@1199..1200 " "
  IDENT_KW@1200..1201 "x"
  WS@1201..1202 " "
  EQUAL@1202..1203 "="
  WS@1203..1204 " "
  IDENT_KW@1204..1205 "x"
  SEMICOLON@1205..1206 ";"
  WS@1206..1207 " "
  COMMENT@1207..1233 "// x is initialized t ..."
  NEWLINE@1233..1235 "\r\n"
  WS@1235..1239 "    "
  RBRACE@1239..1240 "}"
  NEWLINE@1240..1242 "\r\n"
  NEWLINE@1242..1244 "\r\n"
  WS@1244..1248 "    "
  IDENT_KW@1248..1254 "struct"
  WS@1254..1255 " "
  IDENT_KW@1255..1256 "S"
  WS@1256..1257 " "
  NEWLINE@1257..1259 "\r\n"
  WS@1259..1263 "    "
  LBRACE@1263..1264 "{"
  WS@1264..1265 " "
  NEWLINE@1265..1267 "\r\n"
  WS@1267..1275 "        "
  IDENT_KW@1275..1278 "int"
  WS@1278..1279 " "
  IDENT_KW@1279..1280 "x"
  SEMICOLON@1280..1281 ";"
  WS@1281..1282 " "
  NEWLINE@1282..1284 "\r\n"
  WS@1284..1288 "    "
  RBRACE@1288..1289 "}"
  SEMICOLON@1289..1290 ";"
  NEWLINE@1290..1292 "\r\n"
  WS@1292..1296 "    "
  LBRACE@1296..1297 "{"
  NEWLINE@1297..1299 "\r\n"
  WS@1299..1307 "        "
  IDENT_KW@1307..1308 "S"
  WS@1308..1309 " "
  IDENT_KW@1309..1310 "S"
  WS@1310..1311 " "
  EQUAL@1311..1312 "="
  WS@1312..1313 " "
  IDENT_KW@1313..1314 "S"
  LPAREN@1314..1315 "("
  DIGITS@1315..1316 "0"
  RPAREN@1316..1317 ")"
  SEMICOLON@1317..1318 ";"
  WS@1318..1319 " "
  COMMENT@1319..1370 "// 'S' is only visibl ..."
  NEWLINE@1370..1372 "\r\n"
  WS@1372..1380 "        "
  IDENT_KW@1380..1381 "S"
  PERIOD@1381..1382 "."
  IDENT_KW@1382..1383 "x"
  SEMICOLON@1383..1384 ";"
  WS@1384..1392 "        "
  COMMENT@1392..1427 "// 'S' is now visible ..."
  NEWLINE@1427..1429 "\r\n"
  WS@1429..1433 "    "
  RBRACE@1433..1434 "}"
  NEWLINE@1434..1436 "\r\n"
  NEWLINE@1436..1438 "\r\n"
  WS@1438..1442 "    "
  IDENT_KW@1442..1445 "int"
  WS@1445..1446 " "
  IDENT_KW@1446..1453 "degrees"
  SEMICOLON@1453..1454 ";"
  NEWLINE@1454..1456 "\r\n"
  WS@1456..1460 "    "
  IDENT_KW@1460..1467 "degrees"
  LPAREN@1467..1468 "("
  DIGITS@1468..1471 "3.2"
  RPAREN@1471..1472 ")"
  SEMICOLON@1472..1473 ";"
  NEWLINE@1473..1475 "\r\n"
  NEWLINE@1475..1477 "\r\n"
  WS@1477..1481 "    "
  LBRACE@1481..1482 "{"
  NEWLINE@1482..1484 "\r\n"
  WS@1484..1492 "        "
  IDENT_KW@1492..1493 "S"
  WS@1493..1494 " "
  IDENT_KW@1494..1495 "s"
  SEMICOLON@1495..1496 ";"
  NEWLINE@1496..1498 "\r\n"
  WS@1498..1506 "        "
  IDENT_KW@1506..1507 "s"
  PERIOD@1507..1508 "."
  IDENT_KW@1508..1509 "x"
  WS@1509..1510 " "
  EQUAL@1510..1511 "="
  WS@1511..1512 " "
  DIGITS@1512..1513 "3"
  SEMICOLON@1513..1514 ";"
  NEWLINE@1514..1516 "\r\n"
  WS@1516..1524 "        "
  IDENT_KW@1524..1530 "struct"
  WS@1530..1531 " "
  IDENT_KW@1531..1532 "S"
  WS@1532..1533 " "
  LBRACE@1533..1534 "{"
  WS@1534..1537 "   "
  COMMENT@1537..1553 "// okay, hides S"
  NEWLINE@1553..1555 "\r\n"
  WS@1555..1567 "            "
  IDENT_KW@1567..1571 "bool"
  WS@1571..1572 " "
  IDENT_KW@1572..1573 "b"
  SEMICOLON@1573..1574 ";"
  NEWLINE@1574..1576 "\r\n"
  WS@1576..1584 "        "
  RBRACE@1584..1585 "}"
  SEMICOLON@1585..1586 ";"
  NEWLINE@1586..1588 "\r\n"
  WS@1588..1596 "        "
  IDENT_KW@1596..1597 "S"
  WS@1597..1598 " "
  IDENT_KW@1598..1599 "t"
  SEMICOLON@1599..1600 ";"
  NEWLINE@1600..1602 "\r\n"
  WS@1602..1610 "        "
  IDENT_KW@1610..1611 "t"
  PERIOD@1611..1612 "."
  IDENT_KW@1612..1613 "b"
  WS@1613..1614 " "
  EQUAL@1614..1615 "="
  WS@1615..1616 " "
  IDENT_KW@1616..1620 "true"
  SEMICOLON@1620..1621 ";"
  NEWLINE@1621..1623 "\r\n"
  WS@1623..1631 "        "
  IDENT_KW@1631..1637 "struct"
  WS@1637..1638 " "
  IDENT_KW@1638..1639 "S"
  WS@1639..1640 " "
  LBRACE@1640..1641 "{"
  WS@1641..1645 "    "
  COMMENT@1645..1679 "// ERROR, redefinitio ..."
  NEWLINE@1679..1681 "\r\n"
  WS@1681..1693 "            "
  IDENT_KW@1693..1698 "float"
  WS@1698..1699 " "
  IDENT_KW@1699..1700 "f"
  SEMICOLON@1700..1701 ";"
  NEWLINE@1701..1703 "\r\n"
  WS@1703..1711 "        "
  RBRACE@1711..1712 "}"
  SEMICOLON@1712..1713 ";"
  NEWLINE@1713..1715 "\r\n"
  WS@1715..1719 "    "
  RBRACE@1719..1720 "}"
  NEWLINE@1720..1722 "\r\n"
  RBRACE@1722..1723 "}"
  NEWLINE@1723..1725 "\r\n"
