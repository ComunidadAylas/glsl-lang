Ok(EnterFile { file_id: FileId(0), path: "../data/glsl.es320.subgroupShuffle.comp" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..17, kind: Version(Version { number: 320, profile: Es, parsed_profile: Some(Es) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 17..19 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@19..70, kind: Extension(Extension { name: Specific(Atom('GL_KHR_shader_subgroup_shuffle' type=dynamic)), behavior: Enable }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 70..72 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 72..78 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 78..79 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 79..80 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 80..92 } "local_size_x", token_kind: IDENT("local_size_x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 92..93 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 93..94 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 94..95 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 95..96 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 96..97 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 97..98 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 98..110 } "local_size_y", token_kind: IDENT("local_size_y"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 110..111 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 111..112 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 112..113 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 113..114 } "8", token_kind: INT_CONST(8), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 114..115 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 115..116 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 116..128 } "local_size_z", token_kind: IDENT("local_size_z"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 128..129 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 129..130 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 130..131 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 131..132 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 132..133 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 133..134 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 134..136 } "in", token_kind: IN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 136..137 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 137..139 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 139..141 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 141..147 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 147..148 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 148..155 } "binding", token_kind: IDENT("binding"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 155..156 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 156..157 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 157..158 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 158..159 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 159..160 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 160..161 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 161..167 } "buffer", token_kind: BUFFER, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 167..168 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 168..175 } "Buffers", token_kind: IDENT("Buffers"), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 175..177 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 177..178 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 178..180 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 180..184 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 184..188 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 188..190 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 190..192 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 192..193 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 193..195 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 195..199 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 199..204 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 204..205 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 205..207 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 207..208 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 208..210 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 210..214 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 214..219 } "uvec4", token_kind: TYPE_NAME(UVEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 219..220 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 220..222 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 222..223 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 223..225 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 225..226 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 226..227 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 227..231 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 231..232 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 232..233 } "4", token_kind: INT_CONST(4), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 233..234 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 234..235 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 235..237 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 237..239 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 239..243 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 243..244 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 244..248 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 248..249 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 249..250 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 250..252 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 252..253 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 253..255 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 255..259 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 259..263 } "uint", token_kind: TYPE_NAME(UINT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 263..264 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 264..274 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 274..275 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 275..276 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 276..277 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 277..278 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 278..301 } "gl_SubgroupInvocationID", token_kind: IDENT("gl_SubgroupInvocationID"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 301..302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 302..303 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 303..304 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 304..319 } "gl_SubgroupSize", token_kind: IDENT("gl_SubgroupSize"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 319..320 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 320..321 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PERCENT@NodeSpan { source_id: FileId(0), range: 321..322 } "%", token_kind: PERCENT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 322..323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 323..325 } "4u", token_kind: UINT_CONST(4), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 325..326 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 326..328 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 328..330 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 330..334 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 334..338 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 338..339 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 339..340 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 340..341 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 341..342 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 342..344 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 344..345 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 345..346 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 346..349 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 349..350 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 350..351 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 351..366 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 366..367 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 367..371 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 371..372 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 372..373 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 373..374 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 374..375 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 375..377 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 377..378 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 378..379 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 379..380 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 380..384 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 384..394 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 394..395 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 395..396 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 396..398 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 398..402 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 402..406 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 406..407 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 407..408 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 408..409 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 409..410 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 410..412 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 412..413 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 413..415 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 415..417 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 417..418 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 418..419 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 419..434 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 434..435 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 435..439 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 439..440 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 440..441 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 441..442 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 442..443 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 443..445 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 445..446 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 446..448 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 448..449 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 449..452 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 452..462 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 462..463 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 463..464 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 464..466 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 466..470 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 470..474 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 474..475 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 475..476 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 476..477 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 477..478 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 478..480 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 480..481 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 481..484 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 484..485 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 485..486 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 486..487 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 487..502 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 502..503 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 503..507 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 507..508 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 508..509 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 509..510 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 510..511 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 511..513 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 513..514 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 514..517 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 517..518 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 518..520 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 520..530 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 530..531 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 531..532 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 532..534 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 534..538 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 538..542 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 542..543 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 543..544 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 544..545 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 545..546 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 546..548 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 548..553 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 553..554 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 554..555 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 555..570 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 570..571 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 571..575 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 575..576 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 576..577 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 577..578 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 578..579 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 579..581 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 581..582 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 582..588 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 588..598 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 598..599 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 599..600 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 600..602 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 602..604 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 604..608 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 608..612 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 612..613 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 613..614 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 614..615 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 615..616 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 616..618 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 618..619 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 619..620 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 620..623 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 623..624 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 624..625 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 625..640 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 640..641 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 641..645 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 645..646 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 646..647 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 647..648 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 648..649 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 649..651 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 651..652 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 652..653 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 653..654 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 654..658 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 658..668 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 668..669 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 669..670 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 670..672 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 672..676 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 676..680 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 680..681 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 681..682 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 682..683 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 683..684 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 684..686 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 686..687 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 687..689 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 689..691 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 691..692 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 692..693 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 693..708 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 708..709 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 709..713 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 713..714 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 714..715 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 715..716 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 716..717 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 717..719 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 719..720 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 720..722 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 722..723 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 723..726 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 726..736 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 736..737 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 737..738 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 738..740 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 740..744 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 744..748 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 748..749 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 749..750 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 750..751 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 751..752 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 752..754 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 754..755 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 755..758 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 758..759 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 759..760 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 760..761 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 761..776 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 776..777 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 777..781 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 781..782 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 782..783 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 783..784 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 784..785 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 785..787 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 787..788 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 788..791 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 791..792 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 792..794 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 794..804 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 804..805 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 805..806 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 806..808 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 808..812 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 812..816 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 816..817 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 817..818 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 818..819 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 819..820 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 820..822 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 822..827 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 827..828 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 828..829 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 829..844 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 844..845 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 845..849 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 849..850 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 850..851 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 851..852 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 852..853 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 853..855 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 855..856 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 856..862 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 862..872 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 872..873 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 873..874 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 874..876 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 876..878 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 878..882 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 882..886 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 886..887 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 887..888 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 888..889 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 889..890 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 890..892 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 892..893 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 893..894 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 894..897 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 897..898 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 898..899 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 899..914 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 914..915 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 915..919 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 919..920 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 920..921 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 921..922 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 922..923 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 923..925 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 925..926 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 926..927 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 927..928 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 928..932 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 932..942 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 942..943 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 943..944 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 944..946 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 946..950 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 950..954 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 954..955 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 955..956 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 956..957 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 957..958 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 958..960 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 960..961 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 961..963 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 963..965 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 965..966 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 966..967 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 967..982 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 982..983 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 983..987 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 987..988 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 988..989 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 989..990 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 990..991 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 991..993 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 993..994 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 994..996 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 996..997 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 997..1000 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1000..1010 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1010..1011 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1011..1012 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1012..1014 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1014..1018 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1018..1022 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1022..1023 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1023..1024 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1024..1025 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1025..1026 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1026..1028 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1028..1029 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1029..1032 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1032..1033 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1033..1034 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1034..1035 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1035..1050 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1050..1051 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1051..1055 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1055..1056 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1056..1057 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1057..1058 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1058..1059 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1059..1061 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1061..1062 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1062..1065 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1065..1066 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1066..1068 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1068..1078 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1078..1079 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1079..1080 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1080..1082 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1082..1086 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1086..1090 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1090..1091 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1091..1092 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1092..1093 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1093..1094 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1094..1096 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1096..1101 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1101..1102 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1102..1103 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1103..1118 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1118..1119 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1119..1123 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1123..1124 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1124..1125 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1125..1126 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1126..1127 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1127..1129 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1129..1130 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1130..1136 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1136..1146 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1146..1147 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1147..1148 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1148..1150 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1150..1152 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1152..1156 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1156..1160 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1160..1161 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1161..1162 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1162..1163 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1163..1164 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1164..1166 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1166..1167 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1167..1168 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1168..1171 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1171..1172 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1172..1175 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1175..1178 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1178..1179 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1179..1194 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1194..1195 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1195..1199 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1199..1200 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1200..1201 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1201..1202 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1202..1203 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1203..1205 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1205..1206 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1206..1207 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1207..1208 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 1208..1209 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1209..1210 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1210..1211 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1211..1212 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1212..1231 } "                   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1231..1241 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1241..1242 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1242..1243 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1243..1244 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1244..1246 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1246..1250 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1250..1254 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1254..1255 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1255..1256 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1256..1257 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1257..1258 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1258..1260 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1260..1261 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1261..1263 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1263..1265 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1265..1266 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1266..1267 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1267..1272 } "ivec2", token_kind: TYPE_NAME(IVEC2), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1272..1273 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1273..1288 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1288..1289 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1289..1297 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1297..1298 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1298..1302 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1302..1303 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1303..1304 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1304..1305 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1305..1306 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1306..1308 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1308..1309 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1309..1311 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1311..1312 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1312..1313 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1313..1318 } "ivec2", token_kind: TYPE_NAME(IVEC2), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1318..1319 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1319..1320 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1320..1321 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1321..1322 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1322..1323 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1323..1325 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1325..1335 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1335..1336 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1336..1337 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1337..1338 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1338..1340 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1340..1344 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1344..1348 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1348..1349 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1349..1350 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1350..1351 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1351..1352 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1352..1354 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1354..1355 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1355..1358 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1358..1359 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1359..1360 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1360..1361 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1361..1366 } "ivec3", token_kind: TYPE_NAME(IVEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1366..1367 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1367..1382 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1382..1383 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1383..1391 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1391..1392 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1392..1396 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1396..1397 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1397..1398 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1398..1399 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1399..1400 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1400..1402 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1402..1403 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1403..1406 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1406..1407 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1407..1408 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1408..1413 } "ivec3", token_kind: TYPE_NAME(IVEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1413..1414 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1414..1415 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1415..1416 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1416..1417 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1417..1418 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1418..1419 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1419..1429 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1429..1430 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1430..1431 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1431..1432 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1432..1434 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1434..1438 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1438..1442 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1442..1443 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1443..1444 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1444..1445 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1445..1446 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1446..1448 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1448..1453 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1453..1454 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1454..1455 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1455..1460 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1460..1461 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1461..1476 } "subgroupShuffle", token_kind: IDENT("subgroupShuffle"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1476..1477 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1477..1485 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1485..1486 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1486..1490 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1490..1491 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1491..1492 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1492..1493 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1493..1494 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1494..1496 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1496..1497 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1497..1498 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1498..1503 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1503..1504 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1504..1505 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1505..1506 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1506..1507 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1507..1508 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1508..1513 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1513..1523 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1523..1524 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1524..1525 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1525..1526 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1526..1528 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1528..1530 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1530..1534 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1534..1538 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1538..1539 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1539..1540 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1540..1541 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1541..1542 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1542..1544 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1544..1545 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1545..1546 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1546..1549 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1549..1550 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1550..1551 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1551..1569 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1569..1570 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1570..1574 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1574..1575 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1575..1576 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1576..1577 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1577..1578 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1578..1580 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1580..1581 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1581..1582 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1582..1583 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1583..1587 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1587..1597 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1597..1598 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1598..1599 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1599..1601 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1601..1605 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1605..1609 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1609..1610 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1610..1611 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1611..1612 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1612..1613 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1613..1615 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1615..1616 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1616..1618 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1618..1620 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1620..1621 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1621..1622 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1622..1640 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1640..1641 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1641..1645 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1645..1646 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1646..1647 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1647..1648 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1648..1649 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1649..1651 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1651..1652 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1652..1654 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1654..1655 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1655..1658 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1658..1668 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1668..1669 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1669..1670 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1670..1672 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1672..1676 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1676..1680 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1680..1681 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1681..1682 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1682..1683 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1683..1684 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1684..1686 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1686..1687 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1687..1690 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1690..1691 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1691..1692 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1692..1693 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1693..1711 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1711..1712 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1712..1716 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1716..1717 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1717..1718 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1718..1719 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1719..1720 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1720..1722 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1722..1723 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1723..1726 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1726..1727 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1727..1729 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1729..1739 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1739..1740 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1740..1741 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1741..1743 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1743..1747 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1747..1751 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1751..1752 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1752..1753 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1753..1754 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1754..1755 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1755..1757 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1757..1762 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1762..1763 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1763..1764 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1764..1782 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1782..1783 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1783..1787 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1787..1788 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1788..1789 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1789..1790 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1790..1791 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1791..1793 } "f4", token_kind: IDENT("f4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1793..1794 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1794..1800 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1800..1810 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1810..1811 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1811..1812 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1812..1814 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1814..1816 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1816..1820 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1820..1824 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1824..1825 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1825..1826 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1826..1827 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1827..1828 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1828..1830 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1830..1831 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1831..1832 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1832..1835 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1835..1836 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1836..1837 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1837..1855 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1855..1856 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1856..1860 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1860..1861 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1861..1862 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1862..1863 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1863..1864 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1864..1866 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1866..1867 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1867..1868 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1868..1869 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1869..1873 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1873..1883 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1883..1884 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1884..1885 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1885..1887 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1887..1891 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1891..1895 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1895..1896 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1896..1897 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1897..1898 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1898..1899 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1899..1901 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1901..1902 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1902..1904 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1904..1906 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1906..1907 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1907..1908 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1908..1926 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1926..1927 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1927..1931 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1931..1932 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1932..1933 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1933..1934 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1934..1935 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1935..1937 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1937..1938 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1938..1940 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 1940..1941 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1941..1944 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1944..1954 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1954..1955 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1955..1956 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1956..1958 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1958..1962 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1962..1966 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 1966..1967 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1967..1968 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 1968..1969 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1969..1970 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1970..1972 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 1972..1973 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1973..1976 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1976..1977 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1977..1978 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1978..1979 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1979..1997 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1997..1998 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1998..2002 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2002..2003 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2003..2004 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2004..2005 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2005..2006 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2006..2008 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2008..2009 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2009..2012 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2012..2013 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2013..2015 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2015..2025 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2025..2026 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2026..2027 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2027..2029 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2029..2033 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2033..2037 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2037..2038 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2038..2039 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2039..2040 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2040..2041 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2041..2043 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2043..2048 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2048..2049 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2049..2050 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2050..2068 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2068..2069 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2069..2073 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2073..2074 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2074..2075 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2075..2076 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2076..2077 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2077..2079 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2079..2080 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2080..2086 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2086..2096 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2096..2097 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2097..2098 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2098..2100 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2100..2102 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2102..2106 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2106..2110 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2110..2111 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2111..2112 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2112..2113 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2113..2114 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2114..2116 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2116..2117 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2117..2118 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2118..2121 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2121..2122 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2122..2123 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2123..2141 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2141..2142 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2142..2146 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2146..2147 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2147..2148 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2148..2149 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2149..2150 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2150..2152 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2152..2153 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2153..2154 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2154..2155 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2155..2159 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2159..2169 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2169..2170 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2170..2171 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2171..2173 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2173..2177 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2177..2181 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2181..2182 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2182..2183 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2183..2184 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2184..2185 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2185..2187 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2187..2188 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2188..2190 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2190..2192 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2192..2193 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2193..2194 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2194..2212 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2212..2213 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2213..2217 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2217..2218 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2218..2219 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2219..2220 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2220..2221 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2221..2223 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2223..2224 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2224..2226 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2226..2227 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2227..2230 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2230..2240 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2240..2241 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2241..2242 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2242..2244 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2244..2248 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2248..2252 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2252..2253 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2253..2254 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2254..2255 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2255..2256 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2256..2258 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2258..2259 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2259..2262 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2262..2263 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2263..2264 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2264..2265 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2265..2283 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2283..2284 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2284..2288 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2288..2289 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2289..2290 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2290..2291 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2291..2292 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2292..2294 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2294..2295 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2295..2298 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2298..2299 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2299..2301 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2301..2311 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2311..2312 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2312..2313 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2313..2315 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2315..2319 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2319..2323 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2323..2324 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2324..2325 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2325..2326 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2326..2327 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2327..2329 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2329..2334 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2334..2335 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2335..2336 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2336..2354 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2354..2355 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2355..2359 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2359..2360 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2360..2361 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2361..2362 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2362..2363 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2363..2365 } "u4", token_kind: IDENT("u4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2365..2366 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2366..2372 } "      ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2372..2382 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2382..2383 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2383..2384 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2384..2386 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2386..2388 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2388..2392 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2392..2396 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2396..2397 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2397..2398 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2398..2399 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2399..2400 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2400..2402 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2402..2403 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2403..2404 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2404..2407 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2407..2408 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2408..2411 } "   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2411..2414 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2414..2415 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2415..2433 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2433..2434 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2434..2438 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2438..2439 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2439..2440 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2440..2441 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2441..2442 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2442..2444 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2444..2445 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2445..2446 } "x", token_kind: IDENT("x"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2446..2447 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LANGLE@NodeSpan { source_id: FileId(0), range: 2447..2448 } "<", token_kind: LANGLE, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2448..2449 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2449..2450 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2450..2451 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2451..2470 } "                   ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2470..2480 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2480..2481 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2481..2482 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2482..2483 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2483..2485 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2485..2489 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2489..2493 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2493..2494 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2494..2495 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2495..2496 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2496..2497 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2497..2499 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2499..2500 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2500..2502 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2502..2504 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2504..2505 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2505..2506 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2506..2511 } "ivec2", token_kind: TYPE_NAME(IVEC2), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2511..2512 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2512..2530 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2530..2531 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2531..2539 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2539..2540 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2540..2544 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2544..2545 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2545..2546 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2546..2547 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2547..2548 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2548..2550 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2550..2551 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2551..2553 } "xy", token_kind: IDENT("xy"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2553..2554 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2554..2555 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2555..2560 } "ivec2", token_kind: TYPE_NAME(IVEC2), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2560..2561 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2561..2562 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2562..2563 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2563..2564 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2564..2565 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2565..2567 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2567..2577 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2577..2578 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2578..2579 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2579..2580 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2580..2582 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2582..2586 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2586..2590 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2590..2591 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2591..2592 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2592..2593 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2593..2594 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2594..2596 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2596..2597 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2597..2600 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2600..2601 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2601..2602 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2602..2603 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2603..2608 } "ivec3", token_kind: TYPE_NAME(IVEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2608..2609 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2609..2627 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2627..2628 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2628..2636 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2636..2637 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2637..2641 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2641..2642 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2642..2643 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2643..2644 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2644..2645 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2645..2647 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2647..2648 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2648..2651 } "xyz", token_kind: IDENT("xyz"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2651..2652 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2652..2653 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2653..2658 } "ivec3", token_kind: TYPE_NAME(IVEC3), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2658..2659 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2659..2660 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2660..2661 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2661..2662 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2662..2663 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2663..2664 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2664..2674 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2674..2675 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2675..2676 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2676..2677 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2677..2679 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2679..2683 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2683..2687 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2687..2688 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2688..2689 } "3", token_kind: INT_CONST(3), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2689..2690 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2690..2691 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2691..2693 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2693..2698 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2698..2699 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2699..2700 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2700..2705 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2705..2706 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2706..2724 } "subgroupShuffleXor", token_kind: IDENT("subgroupShuffleXor"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2724..2725 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2725..2733 } "lessThan", token_kind: IDENT("lessThan"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2733..2734 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2734..2738 } "data", token_kind: IDENT("data"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 2738..2739 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2739..2740 } "1", token_kind: INT_CONST(1), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 2740..2741 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: PERIOD@NodeSpan { source_id: FileId(0), range: 2741..2742 } ".", token_kind: PERIOD, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2742..2744 } "i4", token_kind: IDENT("i4"), state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2744..2745 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2745..2746 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2746..2751 } "ivec4", token_kind: TYPE_NAME(IVEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 2751..2752 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2752..2753 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2753..2754 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2754..2755 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: COMMA@NodeSpan { source_id: FileId(0), range: 2755..2756 } ",", token_kind: COMMA, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2756..2761 } "     ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2761..2771 } "invocation", token_kind: IDENT("invocation"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2771..2772 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 2772..2773 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2773..2774 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2774..2776 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 2776..2777 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2777..2779 } "\r\n", token_kind: WS, state: Active })
