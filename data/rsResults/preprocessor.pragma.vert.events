Ok(EnterFile { file_id: FileId(0), path: "../data/preprocessor.pragma.vert", canonical_path: "/data/preprocessor.pragma.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..17, kind: Version(Version { number: 310, profile: Es, parsed_profile: Some(Es) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 17..19 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@19..41, kind: Pragma(Pragma { value: Optimize(true), raw: "optimize(on)" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@41..64, kind: Pragma(Pragma { value: Optimize(false), raw: "optimize(off)" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@64..83, kind: Pragma(Pragma { value: Debug(true), raw: "debug(on)" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@83..103, kind: Pragma(Pragma { value: Debug(false), raw: "debug(off)" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 103..105 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@105..137, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@113..135), raw: "undefined_pragma(x, 4)" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 137..139 } "\r\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@139..153, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@147..151), raw: "once" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 153..155 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 155..158 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 158..159 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 159..163 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 163..164 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 164..165 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 165..166 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 166..167 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 167..169 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 169..170 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 170..172 } "\r\n", token_kind: WS, state: Active })
