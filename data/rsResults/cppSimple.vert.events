Ok(EnterFile { file_id: FileId(0), path: "../data/cppSimple.vert", canonical_path: "/home/vincent/Applications/apps/glsl-lang/data/cppSimple.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..13, kind: Version(Version { number: 400, profile: Core }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 13..14 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@14..25, kind: Define(Define { name: "ON", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@24..24 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 25..26 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 26..31 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 31..32 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 32..35 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 35..36 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 36..37 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 37..38 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 38..41 } "0.0", token_kind: FLOAT_CONST(0.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 41..42 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 42..43 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 43..44 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 44..48 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 48..49 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 49..53 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 53..54 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 54..55 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 55..56 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 56..57 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 57..58 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 58..59 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@59..69, kind: IfDef(IfDef { ident: "ON" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 69..74 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 74..75 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 75..78 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 78..79 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 79..81 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 81..82 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 82..85 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 85..86 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 86..87 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@87..94, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 94..95 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@95..106, kind: IfDef(IfDef { ident: "OFF" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 106..110 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 110..111 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 111..114 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 114..115 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 115..117 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 117..118 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 118..122 } "20.0", token_kind: FLOAT_CONST(20.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 122..123 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 123..124 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@124..131, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 131..132 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@132..148, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@136..147 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 148..153 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 153..154 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 154..157 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 157..158 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 158..160 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 160..161 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 161..166 } "300.0", token_kind: FLOAT_CONST(300.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 166..167 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 167..168 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@168..175, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 175..176 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@176..193, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@180..192 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 193..197 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 197..198 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 198..201 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 201..202 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 202..204 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 204..205 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 205..211 } "4000.0", token_kind: FLOAT_CONST(4000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 211..212 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 212..213 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@213..220, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 220..221 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@221..238, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@225..237 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 238..242 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 242..243 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 243..246 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 246..247 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 247..249 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 249..250 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 250..257 } "50000.0", token_kind: FLOAT_CONST(50000.0), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 257..258 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 258..259 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@259..266, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 266..267 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IFNDEF@267..279, kind: IfNDef(IfNDef { ident: "OFF" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 279..284 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 284..285 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 285..288 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 288..289 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 289..291 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 291..292 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 292..300 } "600000.0", token_kind: FLOAT_CONST(600000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 300..301 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 301..302 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ELSE@302..308, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 308..312 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 312..313 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 313..316 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 316..317 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 317..319 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 319..320 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 320..323 } "0.6", token_kind: FLOAT_CONST(0.6), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 323..324 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 324..325 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@325..332, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 332..333 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@333..365, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@337..364 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 365..369 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 369..370 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 370..373 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 373..374 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 374..376 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 376..377 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 377..380 } "0.7", token_kind: FLOAT_CONST(0.7), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 380..381 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 381..382 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELIF@382..402, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@388..401 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 402..407 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 407..408 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 408..411 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 411..412 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 412..414 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 414..415 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 415..424 } "7000000.0", token_kind: FLOAT_CONST(7000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 424..425 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 425..426 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@426..433, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 433..434 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@434..467, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@438..466 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 467..472 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 472..473 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 473..476 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 476..477 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 477..479 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 479..480 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 480..490 } "80000000.0", token_kind: FLOAT_CONST(80000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 490..491 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 491..492 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@492..499, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 499..500 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@500..532, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@504..531 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 532..537 } "//yes", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 537..538 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 538..541 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 541..542 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 542..544 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 544..545 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 545..556 } "900000000.0", token_kind: FLOAT_CONST(900000000.0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 556..557 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 557..558 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@558..565, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 565..566 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@566..584, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@570..583 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 584..588 } "//no", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 588..589 } "\n", token_kind: WS, state: Masked })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 589..592 } "sum", token_kind: IDENT("sum"), state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 592..593 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 593..595 } "+=", token_kind: ADD_ASSIGN, state: Masked })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 595..596 } " ", token_kind: WS, state: Masked })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 596..600 } "0.04", token_kind: FLOAT_CONST(0.04), state: Masked })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 600..601 } ";", token_kind: SEMICOLON, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 601..602 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ELSE@602..608, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 608..611 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 611..612 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ADD_ASSIGN@NodeSpan { source_id: FileId(0), range: 612..614 } "+=", token_kind: ADD_ASSIGN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 614..615 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 615..619 } "0.05", token_kind: FLOAT_CONST(0.05), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 619..620 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 620..621 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@621..628, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 628..629 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 629..657 } "// sum should be 9876 ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 657..658 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 658..662 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 662..673 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 673..674 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 674..675 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 675..676 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 676..680 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 680..681 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 681..684 } "sum", token_kind: IDENT("sum"), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 684..685 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 685..686 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 686..687 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 687..688 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 688..689 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 689..690 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@690..702, kind: Define(Define { name: "A", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@700..701 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@702..715, kind: Define(Define { name: "B", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@713..714 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@715..731, kind: Define(Define { name: "C", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@729..730 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 731..732 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@732..757, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@736..756 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@757..770, kind: Error(Error { message: "good1" }), errors: [Located { inner: Processing(ErrorDirective { message: "good1" }), pos: 757..770, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 76, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@770..777, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 777..778 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@778..801, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@782..800 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@801..814, kind: Error(Error { message: "good2" }), errors: [Located { inner: Processing(ErrorDirective { message: "good2" }), pos: 801..814, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 80, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@814..821, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 821..822 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@822..847, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@826..846 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@847..860, kind: Error(Error { message: "good3" }), errors: [Located { inner: Processing(ErrorDirective { message: "good3" }), pos: 847..860, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 84, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@860..867, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 867..868 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@868..897, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@872..896 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@897..910, kind: Error(Error { message: "good4" }), errors: [Located { inner: Processing(ErrorDirective { message: "good4" }), pos: 897..910, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 88, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@910..917, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 917..918 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@918..945, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@922..944 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@945..958, kind: Error(Error { message: "good5" }), errors: [Located { inner: Processing(ErrorDirective { message: "good5" }), pos: 945..958, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 92, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@958..965, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 965..966 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@966..997, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@970..996 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@997..1010, kind: Error(Error { message: "good6" }), errors: [Located { inner: Processing(ErrorDirective { message: "good6" }), pos: 997..1010, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 96, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1010..1017, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1017..1018 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1018..1042, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1022..1041 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MissingExpr))), pos: 1018..1042, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 99, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@1042..1054, kind: Error(Error { message: "bad1" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad1" }), pos: 1042..1054, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 100, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1054..1061, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1061..1062 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1062..1084, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1066..1083 }), errors: [Located { inner: Processing(DirectiveIf(Eval(ExtraTokens { tokens: [Token(RPAREN@NodeSpan { source_id: FileId(0), range: 1082..1083 } ")")] }))), pos: 1062..1084, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 103, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@1084..1096, kind: Error(Error { message: "bad2" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad2" }), pos: 1084..1096, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 104, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1096..1103, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1103..1104 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1104..1128, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1108..1127 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MissingExpr))), pos: 1104..1128, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 107, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@1128..1140, kind: Error(Error { message: "bad3" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad3" }), pos: 1128..1140, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 108, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1140..1147, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1147..1148 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1148..1176, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1152..1175 }), errors: [Located { inner: Processing(DirectiveIf(Eval(ExtraTokens { tokens: [Token(RPAREN@NodeSpan { source_id: FileId(0), range: 1160..1161 } ")")] }))), pos: 1148..1176, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 111, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@1176..1188, kind: Error(Error { message: "bad4" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad4" }), pos: 1176..1188, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 112, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1188..1195, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1195..1196 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1196..1222, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1200..1221 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MissingExpr))), pos: 1196..1222, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 115, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@1222..1234, kind: Error(Error { message: "bad5" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad5" }), pos: 1222..1234, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 116, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1234..1241, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1241..1242 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1242..1274, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1246..1273 }), errors: [Located { inner: Processing(DirectiveIf(Eval(ExtraTokens { tokens: [Token(RPAREN@NodeSpan { source_id: FileId(0), range: 1272..1273 } ")")] }))), pos: 1242..1274, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 119, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@1274..1286, kind: Error(Error { message: "bad6" }), errors: [Located { inner: Processing(ErrorDirective { message: "bad6" }), pos: 1274..1286, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 120, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Parse(UnknownPreprocessorDirective { name: "error\\" }), pos: 1286..1306, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 121, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1286..1306, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Parse(UnknownPreprocessorDirective { name: "if\\" }), pos: 1306..1307, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 122, column: 0 }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1306..1307 } "\n", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Parse(UnknownPreprocessorDirective { name: "directive" }), pos: 1307..1310, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 0 }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1307..1310 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Error { error: Located { inner: Parse(UnknownPreprocessorDirective { name: "flizbit" }), pos: 1310..1311, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 3 }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1310..1311 } " ", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Parse(UnknownPreprocessorDirective { name: "0x25" }), pos: 1311..1321, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 4 }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1311..1321 } "linenumber", token_kind: IDENT("linenumber"), state: Active })
Ok(Error { error: Located { inner: Parse(UnknownPreprocessorDirective { name: "#" }), pos: 1321..1322, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 14 }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1321..1322 } " ", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Parse(ExtraTokensInPreprocessorDirective { name: "endif" }), pos: 1322..1323, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 15 }, masked: false })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1322..1323 } "=", token_kind: EQUAL, state: Active })
Ok(Error { error: Located { inner: Parse(ExtraTokensInPreprocessorDirective { name: "else" }), pos: 1323..1324, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 16 }, masked: false })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1323..1324 } " ", token_kind: WS, state: Active })
Ok(Error { error: Located { inner: Parse(ExtraTokensInPreprocessorDirective { name: "else" }), pos: 1324..1332, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 17 }, masked: false })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1324..1332 } "123", token_kind: INT_CONST(123), state: Active })
Ok(Error { error: Located { inner: Parse(ExtraTokensInPreprocessorDirective { name: "endif" }), pos: 1332..1333, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 123, column: 25 }, masked: false })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1332..1333 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1333..1334 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1334..1337 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1337..1338 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1338..1348 } "filenumber", token_kind: IDENT("filenumber"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1348..1349 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1349..1350 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1350..1351 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1351..1359 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1359..1360 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1360..1361 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1361..1364 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1364..1365 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1365..1372 } "version", token_kind: IDENT("version"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1372..1373 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1373..1374 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1374..1375 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1375..1386 } "400", token_kind: INT_CONST(400), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1386..1387 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1387..1388 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1388..1389 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1389..1407, kind: Define(Define { name: "PI", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1400..1406 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1407..1432, kind: Define(Define { name: "TWOPI", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1421..1431 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1432..1437 } "float", token_kind: TYPE_NAME(FLOAT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1437..1438 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1438..1443 } "twoPi", token_kind: IDENT("twoPi"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1443..1444 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1444..1445 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1445..1446 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1446..1451 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1446..1451 } "2.0", token_kind: FLOAT_CONST(2.0), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1446..1451 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 1446..1451 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1446..1451 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1446..1451 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 1446..1451 } "3.14", token_kind: FLOAT_CONST(3.14), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1446..1451 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1446..1451 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1451..1452 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1452..1453 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1453..1454 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1454..1481 } "//#define PASTE(a,b)  ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1481..1482 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1482..1510 } "//float PASTE(tod, ay ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1510..1511 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1511..1512 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: QUOTE_STRING@NodeSpan { source_id: FileId(0), range: 1512..1517 } "\"boo\"", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1517..1518 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1518..1526 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1526..1527 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1527..1530 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1530..1531 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1531..1532 } "a", token_kind: IDENT("a"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1532..1533 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 1533..1534 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1534..1535 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1535..1541 } "length", token_kind: IDENT("length"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 1541..1542 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: QUOTE_STRING@NodeSpan { source_id: FileId(0), range: 1542..1552 } "\"aoenatuh\"", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 1552..1553 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1553..1554 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1554..1556 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1556..1564 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1564..1565 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1565..1595, kind: Define(Define { name: "QUOTE", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1579..1585 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: ERROR@NodeSpan { source_id: FileId(0), range: 1595..1596 } "'", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 1596..1599 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: ERROR@NodeSpan { source_id: FileId(0), range: 1599..1600 } "'", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 1600..1601 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1601..1603 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1603..1611 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1611..1612 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1612..1641, kind: Define(Define { name: "SINGLE", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1627..1630 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1641..1681 } "// ERROR: all the fol ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1681..1682 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1682..1694, kind: Define(Define { name: "GL_", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1693..1693 }), protected: false }), errors: [Located { inner: Processing(ProtectedDefine { ident: "GL_", is_undef: false }), pos: 1682..1694, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 140, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1694..1713, kind: Define(Define { name: "GL_Macro", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1711..1712 }), protected: false }), errors: [Located { inner: Processing(ProtectedDefine { ident: "GL_Macro", is_undef: false }), pos: 1694..1713, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 141, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1713..1726, kind: Define(Define { name: "__M", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1725..1725 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1726..1738, kind: Define(Define { name: "M__", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1737..1737 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1738..1758, kind: Define(Define { name: "ABC__DE", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@1754..1757 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1758..1759 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1759..1765, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1763..1764 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1765..1777, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELIF@1777..1783, kind: Elif(Elif { file_id: FileId(0), body: PP_IF_EXPR@1782..1782 }), errors: [Located { inner: Processing(DirectiveElif(Eval(MissingExpr))), pos: 1777..1783, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 148, column: 0 }, Located { inner: Processing(ExtraElif), pos: 1777..1783, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 148, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1783..1807 } "// ERROR elif after else", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1807..1808 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1808..1815, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1815..1816 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@1816..1825, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1820..1824 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@1825..1833, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@1831..1832 }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1833..1847, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_IFDEF@1847..1860, kind: IfDef(IfDef { ident: "M" }), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1860..1870, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ELSE@1870..1880, kind: Else(Else), errors: [Located { inner: Processing(ExtraElif), pos: 1870..1880, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 157, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 1880..1884 } "    ", token_kind: WS, state: Masked })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1884..1908 } "// ERROR else after else", token_kind: COMMENT, state: Masked })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1908..1909 } "\n", token_kind: WS, state: Masked })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1909..1927, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1927..1936, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@1936..1943, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1943..1944 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1944..1970, kind: Define(Define { name: "m1", kind: Function(DefineFunction { args: ["a", "a"], tokens: PP_DEFINE_BODY@1969..1969 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1970..1986, kind: Define(Define { name: "m2", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@1985..1985 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1986..1987 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 1987..1994 } "// okay", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 1994..1995 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@1995..2010, kind: Define(Define { name: "m3", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2006..2009 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2010..2025, kind: Define(Define { name: "m3", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2021..2024 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2025..2026 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2026..2034 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2034..2035 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2035..2049, kind: Define(Define { name: "m4", kind: Function(DefineFunction { args: ["b"], tokens: PP_DEFINE_BODY@2048..2048 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2049..2060, kind: Define(Define { name: "m4", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2059..2059 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2060..2061 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2061..2069 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2069..2070 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2070..2085, kind: Define(Define { name: "m5", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2081..2084 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2085..2099, kind: Define(Define { name: "m5", kind: Function(DefineFunction { args: ["b"], tokens: PP_DEFINE_BODY@2098..2098 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2099..2100 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2100..2108 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2108..2109 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2109..2123, kind: Define(Define { name: "m6", kind: Function(DefineFunction { args: ["a"], tokens: PP_DEFINE_BODY@2122..2122 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2123..2139, kind: Define(Define { name: "m6", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@2138..2138 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2139..2140 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2140..2161 } "// ERROR (whitespace)", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2161..2162 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2162..2177, kind: Define(Define { name: "m7", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2173..2176 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2177..2193, kind: Define(Define { name: "m7", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2188..2192 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2193..2194 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2194..2236, kind: Define(Define { name: "m80", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@2211..2235 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2236..2278, kind: Define(Define { name: "m80", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@2253..2277 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2278..2279 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2279..2287 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2287..2288 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2288..2333, kind: Define(Define { name: "m8", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@2304..2332 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2333..2379, kind: Define(Define { name: "m8", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@2349..2378 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2379..2380 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 2380..2388 } "// ERROR", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2388..2389 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2389..2411, kind: Define(Define { name: "m9", kind: Function(DefineFunction { args: ["a", "b", "c"], tokens: PP_DEFINE_BODY@2407..2410 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2411..2433, kind: Define(Define { name: "m9", kind: Function(DefineFunction { args: ["a", "d", "c"], tokens: PP_DEFINE_BODY@2429..2432 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2433..2434 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2434..2449, kind: Define(Define { name: "n1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2445..2448 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2449..2452 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2452..2453 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2453..2454 } "n", token_kind: IDENT("n"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2454..2455 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2455..2456 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2456..2457 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2457..2459 } "0xf", token_kind: INT_CONST(15), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2459..2460 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2460..2461 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2461..2462 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@2462..2482, kind: Define(Define { name: "f1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@2473..2481 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2482..2488 } "double", token_kind: TYPE_NAME(DOUBLE), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2488..2489 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2489..2490 } "f", token_kind: IDENT("f"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2490..2491 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 2491..2492 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2492..2493 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2493..2495 } ".08e-2Lf", token_kind: ERROR(InvalidFloatLiteral), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 2495..2496 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2496..2497 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2497..2498 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@2498..2517, kind: Undef(Undef { ident: "__VERSION__" }), errors: [Located { inner: Processing(ProtectedDefine { ident: "__VERSION__", is_undef: true }), pos: 2498..2517, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 203, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@2517..2549, kind: Undef(Undef { ident: "GL_ARB_texture_rectangle" }), errors: [Located { inner: Processing(ProtectedDefine { ident: "GL_ARB_texture_rectangle", is_undef: true }), pos: 2517..2549, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 204, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2549..2550 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@2550..2552, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@2552..2556, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@2556..2561, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2561..2563 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2563..2564 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: ERROR@2564..2569, kind: Invalid(Invalid), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: ERROR@2569..2576, kind: Invalid(Invalid), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2576..2578 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2578..2580 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2580..2581 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2581..2583 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2583..2585 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2585..2587 } "ff", token_kind: IDENT("ff"), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2587..2588 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2588..2590 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2590..2592 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2592..2594 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: PP_CONCAT_OP@NodeSpan { source_id: FileId(0), range: 2594..2596 } "##", token_kind: ERROR(InvalidToken), state: Active })
Ok(Token { source_token: HASH@NodeSpan { source_id: FileId(0), range: 2596..2597 } "#", token_kind: HASH, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2597..2599 } "ff", token_kind: IDENT("ff"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2599..2600 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 2600..2602 } "fg", token_kind: IDENT("fg"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 2602..2603 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 2603..2607 } "0x25", token_kind: INT_CONST(37), state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 2607..2608 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2608..2616, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@2615..2615) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2616..2631, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@2623..2630) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2631..2641, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@2640..2640) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2641..2655, kind: Pragma(Pragma { value: StdGl(PP_PRAGMA_BODY@2649..2654) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2655..2678, kind: Pragma(Pragma { value: Optimize(true) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2678..2701, kind: Pragma(Pragma { value: Optimize(false) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2701..2720, kind: Pragma(Pragma { value: Debug(true) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2720..2740, kind: Pragma(Pragma { value: Debug(false) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectivePragma(IncorrectSyntax { name: "optimize" })), pos: 2740..2771, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 223, column: 0 }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectivePragma(IncorrectSyntax { name: "optimize" })), pos: 2771..2793, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 224, column: 0 }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectivePragma(IncorrectSyntax { name: "debug" })), pos: 2793..2814, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 225, column: 0 }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectivePragma(IncorrectSyntax { name: "debug" })), pos: 2814..2839, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 226, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2839..2862, kind: Pragma(Pragma { value: Optimize(true) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectivePragma(IncorrectSyntax { name: "optimize" })), pos: 2862..2886, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 228, column: 0 }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectivePragma(IncorrectSyntax { name: "debug" })), pos: 2886..2911, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 229, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2911..2930, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@2919..2929) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_PRAGMA@2930..3094, kind: Pragma(Pragma { value: Unknown(PP_PRAGMA_BODY@2938..3093) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EMPTY@3094..3099, kind: Empty(Empty), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3099..3128, kind: Error(Error { message: "good continuation" }), errors: [Located { inner: Processing(ErrorDirective { message: "good continuation" }), pos: 3099..3128, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 234, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3128..3129 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: ERROR@3129..3138, kind: Invalid(Invalid), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3138..3139 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3139..3163, kind: Define(Define { name: "directive", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3157..3162 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3163..3164 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: ERROR@3164..3198, kind: Invalid(Invalid), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 3198..3199 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@3199..3211, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3205..3210 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3211..3239, kind: Error(Error { message: "line should be 12000" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 12000" }), pos: 3211..3239, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 11999, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3239..3253, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3245..3252 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3253..3291, kind: Error(Error { message: "line should be 13000, string 7" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 13000, string 7" }), pos: 3253..3291, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 12999, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3291..3308, kind: Define(Define { name: "L1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3302..3307 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3308..3322, kind: Define(Define { name: "L2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3319..3321 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3322..3335, kind: Define(Define { name: "F1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3333..3334 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3335..3348, kind: Define(Define { name: "F2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3346..3347 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3348..3362, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3354..3361 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3362..3400, kind: Error(Error { message: "line should be 14013, string 7" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 14013, string 7" }), pos: 3362..3400, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 14012, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3400..3447, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3406..3421 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3447..3486, kind: Error(Error { message: "line should be 14013, string 12" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 14013, string 12" }), pos: 3447..3486, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 14012, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3486..3510, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3492..3509 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3510..3549, kind: Error(Error { message: "line should be 14025, string 12" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 14025, string 12" }), pos: 3510..3549, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 14024, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectiveLine(ExtraTokens { tokens: [Constant(Ok(1234)), Constant(Ok(12)), Constant(Ok(0))] })), pos: 3549..3574, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 14025, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3574..3594, kind: Define(Define { name: "empty_extra", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3593..3593 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3594..3625, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3600..3624 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@3625..3655, kind: Define(Define { name: "moreEmpty", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@3643..3654 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3655..3720, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3661..3695 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Error { error: Located { inner: Processing(DirectiveLine(ExtraTokens { tokens: [Constant(Ok(1237)), Constant(Ok(12)), Constant(Ok(0))] })), pos: 3720..3786, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 1235, column: 0 }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3786..3827, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3792..3826 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3827..3916, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3833..3915 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3916..3930, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3922..3929 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3930..3958, kind: Error(Error { message: "line should be 20000" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 20000" }), pos: 3930..3958, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 19999, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@3958..3975, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@3964..3974 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@3975..4003, kind: Error(Error { message: "line should be 20010" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 20010" }), pos: 3975..4003, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 20009, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_LINE@4003..4016, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@4009..4015 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4016..4044, kind: Error(Error { message: "line should be 20020" }), errors: [Located { inner: Processing(ErrorDirective { message: "line should be 20020" }), pos: 4016..4044, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 20019, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4044..4045 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4045..4062, kind: Define(Define { name: "VAL1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4058..4061 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4062..4079, kind: Define(Define { name: "VAL2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4075..4078 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4079..4080 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4080..4176, kind: Define(Define { name: "RES2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4162..4175 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4176..4207, kind: Define(Define { name: "RES1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4192..4205 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4207..4250, kind: Define(Define { name: "RES2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4236..4249 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4250..4290, kind: Define(Define { name: "SUM_VALUES", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4276..4289 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4290..4291 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4291..4295 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4295..4296 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4296..4302 } "foo234", token_kind: IDENT("foo234"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 4302..4303 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4303..4304 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4304..4305 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 4305..4306 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4306..4307 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4307..4311 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4311..4322 } "gl_Position", token_kind: IDENT("gl_Position"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4322..4323 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 4323..4324 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4324..4325 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 4325..4329 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 4329..4330 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4330..4340 } "2.0", token_kind: FLOAT_CONST(2.0), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: SLASH@NodeSpan { source_id: FileId(0), range: 4330..4340 } "/", token_kind: SLASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4330..4340 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: ASTERISK@NodeSpan { source_id: FileId(0), range: 4330..4340 } "*", token_kind: ASTERISK, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4330..4340 } "2.0", token_kind: FLOAT_CONST(2.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: PLUS@NodeSpan { source_id: FileId(0), range: 4330..4340 } "+", token_kind: PLUS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4330..4340 } "2.0", token_kind: FLOAT_CONST(2.0), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: SLASH@NodeSpan { source_id: FileId(0), range: 4330..4340 } "/", token_kind: SLASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 4330..4340 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 4330..4340 } "1.0", token_kind: FLOAT_CONST(1.0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4330..4340 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 4340..4341 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 4341..4342 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4342..4343 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 4343..4344 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4344..4345 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4345..4346 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 4346..4380 } "// more whitespace re ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4380..4381 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4381..4424, kind: Define(Define { name: "SPACE_AT_END", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4407..4423 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4424..4483, kind: Define(Define { name: "SPACE_AT_END", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4450..4466 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4483..4484 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4484..4530, kind: Define(Define { name: "SPACE_AT_BEGIN", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4511..4529 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4530..4577, kind: Define(Define { name: "SPACE_AT_BEGIN", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4558..4576 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4577..4578 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 4578..4608 } "// space in middle is ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4608..4609 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4609..4655, kind: Define(Define { name: "SPACE_IN_MIDDLE", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4638..4654 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4655..4702, kind: Define(Define { name: "SPACE_IN_MIDDLE", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@4684..4701 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4702..4703 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4703..4724, kind: Define(Define { name: "FIRSTPART", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4721..4723 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@4724..4747, kind: Define(Define { name: "SECONDPART", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@4743..4746 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4747..4748 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4748..4779, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4752..4778 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4779..4804, kind: Error(Error { message: "good evaluation 1" }), errors: [Located { inner: Processing(ErrorDirective { message: "good evaluation 1" }), pos: 4779..4804, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 20050, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4804..4811, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4811..4812 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@4812..4893, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4816..4892 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@4893..4918, kind: Error(Error { message: "good evaluation 2" }), errors: [Located { inner: Processing(ErrorDirective { message: "good evaluation 2" }), pos: 4893..4918, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 20054, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4918..4925, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4925..4926 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 4926..4938 } "// ERRORS...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4938..4939 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@4939..4950, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@4945..4949 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@4950..4967, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4954..4966 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MissingExpr))), pos: 4950..4967, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 8999, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4967..4974, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@4974..4992, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4978..4991 }), errors: [Located { inner: Processing(DirectiveIf(Eval(ExtraTokens { tokens: [Token(RPAREN@NodeSpan { source_id: FileId(0), range: 4990..4991 } ")")] }))), pos: 4974..4992, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9001, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@4992..4999, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 4999..5000 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 5000..5019 } "// recursion (okay)", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5019..5020 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5020..5044, kind: Define(Define { name: "RECURSE", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5036..5043 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5044..5047 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5047..5048 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5048..5055 } "RECURSE", token_kind: IDENT("RECURSE"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 5055..5056 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5056..5057 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5057..5071, kind: Define(Define { name: "R2", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5068..5070 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5071..5085, kind: Define(Define { name: "R1", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5082..5084 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_UNDEF@5085..5100, kind: Undef(Undef { ident: "RECURSE" }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5100..5103 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5103..5104 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5104..5106 } "R1", token_kind: IDENT("R1"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5106..5107 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 5107..5108 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5108..5109 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5109..5116 } "RECURSE", token_kind: IDENT("RECURSE"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 5116..5117 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5117..5118 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5118..5119 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5119..5144, kind: Define(Define { name: "FOOOM", kind: Function(DefineFunction { args: ["a", "b"], tokens: PP_DEFINE_BODY@5138..5143 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5144..5147 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5147..5148 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5148..5153 } "aoeua", token_kind: IDENT("aoeua"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5153..5154 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 5154..5155 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 5155..5156 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 5156..5161 } "FOOOM", token_kind: IDENT("FOOOM"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 5161..5162 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5162..5163 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_IF@5163..5173, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5167..5172 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MalformedExpr { tokens: [Error { error: Located { inner: Processing(UnterminatedMacroInvocation { ident: "FOOOM" }), pos: 5167..5167, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9014, column: 4 }, masked: false }] }))), pos: 5163..5173, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9014, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5173..5180, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5180..5181 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@5181..5192, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@5187..5191 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: ERROR@5192..5200, kind: Invalid(Invalid), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5200..5207, kind: EndIf(EndIf), errors: [Located { inner: Processing(ExtraEndIf), pos: 5200..5207, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9500, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@5207..5216, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5211..5215 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(BACKSLASH@NodeSpan { source_id: FileId(0), range: 5211..5212 } "\\") }))), pos: 5207..5216, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9501, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5216..5223, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@5223..5232, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5227..5231 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(BACKSLASH@NodeSpan { source_id: FileId(0), range: 5227..5228 } "\\") }))), pos: 5223..5232, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9503, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5232..5239, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: ERROR@5239..5250, kind: Invalid(Invalid), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5250..5263, kind: Error(Error { message: "\\ 376" }), errors: [Located { inner: Processing(ErrorDirective { message: "\\ 376" }), pos: 5250..5263, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9506, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5263..5275, kind: Error(Error { message: "\\377" }), errors: [Located { inner: Processing(ErrorDirective { message: "\\377" }), pos: 5263..5275, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9507, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5275..5276 } "\n", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 5276..5323 } "// ERROR for macro ex ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5323..5324 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@5324..5335, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@5330..5334 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5335..5351, kind: Define(Define { name: "DEF_MAC", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5350..5350 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@5351..5379, kind: Define(Define { name: "DEF_DEFINED", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@5371..5378 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@5379..5403, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5383..5402 }), errors: [Located { inner: Processing(DirectiveIf(Eval(MissingExpr))), pos: 5379..5403, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9601, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5403..5427, kind: Error(Error { message: "DEF_DEFINED then" }), errors: [Located { inner: Processing(ErrorDirective { message: "DEF_DEFINED then" }), pos: 5403..5427, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9602, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@5427..5433, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@5433..5457, kind: Error(Error { message: "DEF_DEFINED else" }), errors: [Located { inner: Processing(ErrorDirective { message: "DEF_DEFINED else" }), pos: 5433..5457, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 9604, column: 0 }], source_id: FileId(0) }, masked: true })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@5457..5464, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 5464..5465 } "\n", token_kind: WS, state: Active })
Ok(Directive { directive: EventDirective { node: PP_LINE@5465..5477, kind: Line(Line { file_id: FileId(0), body: PP_LINE_BODY@5471..5476 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@5477..5483, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@5481..5482 }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ELSE@5483..5489, kind: Else(Else), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 5489..5513 } "// ERROR, missing #endif", token_kind: COMMENT, state: Masked })
