Ok(EnterFile { file_id: FileId(0), path: "../data/cppIntMinOverNegativeOne.frag", canonical_path: "/home/vincent/Applications/apps/glsl-lang/data/cppIntMinOverNegativeOne.frag" })
Ok(Directive { directive: EventDirective { node: PP_IF@0..28, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@4..27 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(DIGITS@NodeSpan { source_id: FileId(0), range: 6..16 } "2147483648") }))), pos: 0..28, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 0, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@28..86, kind: Error(Error { message: "INT_MIN / -1 should yield 0, something went wrong." }), errors: [Located { inner: Processing(ErrorDirective { message: "INT_MIN / -1 should yield 0, something went wrong." }), pos: 28..86, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 1, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@86..93, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@93..121, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@97..120 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(DIGITS@NodeSpan { source_id: FileId(0), range: 99..109 } "2147483648") }))), pos: 93..121, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 3, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ERROR@121..179, kind: Error(Error { message: "INT_MIN % -1 should yield 0, something went wrong." }), errors: [Located { inner: Processing(ErrorDirective { message: "INT_MIN % -1 should yield 0, something went wrong." }), pos: 121..179, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 4, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@179..185, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
