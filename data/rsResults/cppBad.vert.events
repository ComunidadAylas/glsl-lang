Ok(EnterFile { file_id: FileId(0), path: "../data/cppBad.vert", canonical_path: "/home/vincent/Applications/apps/glsl-lang/data/cppBad.vert" })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@0..14, kind: Define(Define { name: "n", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@9..12 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@14..29, kind: Define(Define { name: "m", kind: Object(DefineObject { tokens: PP_DEFINE_BODY@24..27 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_IF@29..36, kind: If(If { file_id: FileId(0), body: PP_IF_EXPR@33..34 }), errors: [Located { inner: Processing(DirectiveIf(Eval(InvalidExpr { token: Token(HASH@NodeSpan { source_id: FileId(0), range: 33..34 } "#") }))), pos: 29..36, current_file: Some(FileId(0)), path: None, file_override: None, line_number: 2, column: 0 }], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_ENDIF@36..44, kind: EndIf(EndIf), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_DEFINE@44..57, kind: Define(Define { name: "n", kind: Function(DefineFunction { args: [], tokens: PP_DEFINE_BODY@55..55 }), protected: false }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 57..60 } "int", token_kind: TYPE_NAME(INT), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 60..61 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 61..62 } "n", token_kind: IDENT("n"), state: Active })
Ok(Token { source_token: ERROR@NodeSpan { source_id: FileId(0), range: 62..63 } "\"", token_kind: ERROR(InvalidToken), state: Active })
