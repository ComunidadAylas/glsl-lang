ROOT@0..650
  PP_VERSION@0..14
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "450"
    NEWLINE@12..14 "\r\n"
  NEWLINE@14..16 "\r\n"
  PP_IFDEF@16..33
    HASH@16..17 "#"
    IDENT_KW@17..22 "ifdef"
    WS@22..23 " "
    PP_IDENT@23..31
      IDENT_KW@23..31 "GL_SPIRV"
    NEWLINE@31..33 "\r\n"
  PP_ERROR@33..83
    HASH@33..34 "#"
    IDENT_KW@34..39 "error"
    WS@39..40 " "
    PP_ERROR_BODY@40..81
      IDENT_KW@40..48 "GL_SPIRV"
      WS@48..49 " "
      IDENT_KW@49..51 "is"
      WS@51..52 " "
      IDENT_KW@52..55 "set"
      WS@55..56 " "
      LPAREN@56..57 "("
      WS@57..58 " "
      IDENT_KW@58..65 "correct"
      COMMA@65..66 ","
      WS@66..67 " "
      IDENT_KW@67..70 "not"
      WS@70..71 " "
      IDENT_KW@71..73 "an"
      WS@73..74 " "
      IDENT_KW@74..79 "error"
      WS@79..80 " "
      RPAREN@80..81 ")"
    NEWLINE@81..83 "\r\n"
  PP_IF@83..104
    HASH@83..84 "#"
    IDENT_KW@84..86 "if"
    WS@86..87 " "
    PP_IF_EXPR@87..102
      IDENT_KW@87..95 "GL_SPIRV"
      WS@95..96 " "
      EQ_OP@96..98 "=="
      WS@98..99 " "
      DIGITS@99..102 "100"
    NEWLINE@102..104 "\r\n"
  PP_ERROR@104..127
    HASH@104..105 "#"
    IDENT_KW@105..110 "error"
    WS@110..111 " "
    PP_ERROR_BODY@111..125
      IDENT_KW@111..118 "GL_SPIR"
      WS@118..119 " "
      IDENT_KW@119..121 "is"
      WS@121..122 " "
      DIGITS@122..125 "100"
    NEWLINE@125..127 "\r\n"
  PP_ENDIF@127..135
    HASH@127..128 "#"
    IDENT_KW@128..133 "endif"
    NEWLINE@133..135 "\r\n"
  PP_ENDIF@135..143
    HASH@135..136 "#"
    IDENT_KW@136..141 "endif"
    NEWLINE@141..143 "\r\n"
  NEWLINE@143..145 "\r\n"
  IDENT_KW@145..149 "void"
  WS@149..150 " "
  IDENT_KW@150..154 "main"
  LPAREN@154..155 "("
  RPAREN@155..156 ")"
  NEWLINE@156..158 "\r\n"
  LBRACE@158..159 "{"
  NEWLINE@159..161 "\r\n"
  RBRACE@161..162 "}"
  NEWLINE@162..164 "\r\n"
  NEWLINE@164..166 "\r\n"
  IDENT_KW@166..173 "uniform"
  WS@173..174 " "
  IDENT_KW@174..179 "float"
  WS@179..180 " "
  IDENT_KW@180..181 "f"
  SEMICOLON@181..182 ";"
  WS@182..209 "                      ..."
  COMMENT@209..230 "// ERROR, no location"
  NEWLINE@230..232 "\r\n"
  IDENT_KW@232..238 "layout"
  LPAREN@238..239 "("
  IDENT_KW@239..247 "location"
  WS@247..248 " "
  EQUAL@248..249 "="
  WS@249..250 " "
  DIGITS@250..251 "2"
  RPAREN@251..252 ")"
  WS@252..253 " "
  IDENT_KW@253..260 "uniform"
  WS@260..261 " "
  IDENT_KW@261..266 "float"
  WS@266..267 " "
  IDENT_KW@267..268 "g"
  SEMICOLON@268..269 ";"
  NEWLINE@269..271 "\r\n"
  IDENT_KW@271..278 "uniform"
  WS@278..279 " "
  IDENT_KW@279..288 "sampler2D"
  WS@288..289 " "
  IDENT_KW@289..291 "s1"
  SEMICOLON@291..292 ";"
  WS@292..314 "                      "
  COMMENT@314..334 "// ERROR, no binding"
  NEWLINE@334..336 "\r\n"
  IDENT_KW@336..342 "layout"
  LPAREN@342..343 "("
  IDENT_KW@343..351 "location"
  WS@351..352 " "
  EQUAL@352..353 "="
  WS@353..354 " "
  DIGITS@354..355 "3"
  RPAREN@355..356 ")"
  WS@356..357 " "
  IDENT_KW@357..364 "uniform"
  WS@364..365 " "
  IDENT_KW@365..374 "sampler2D"
  WS@374..375 " "
  IDENT_KW@375..377 "s2"
  SEMICOLON@377..378 ";"
  WS@378..379 " "
  COMMENT@379..399 "// ERROR, no binding"
  NEWLINE@399..401 "\r\n"
  NEWLINE@401..403 "\r\n"
  IDENT_KW@403..407 "void"
  WS@407..408 " "
  IDENT_KW@408..413 "noise"
  LPAREN@413..414 "("
  RPAREN@414..415 ")"
  NEWLINE@415..417 "\r\n"
  LBRACE@417..418 "{"
  NEWLINE@418..420 "\r\n"
  WS@420..424 "    "
  IDENT_KW@424..430 "noise1"
  LPAREN@430..431 "("
  IDENT_KW@431..435 "vec4"
  LPAREN@435..436 "("
  DIGITS@436..437 "1"
  RPAREN@437..438 ")"
  RPAREN@438..439 ")"
  SEMICOLON@439..440 ";"
  NEWLINE@440..442 "\r\n"
  WS@442..446 "    "
  IDENT_KW@446..452 "noise2"
  LPAREN@452..453 "("
  DIGITS@453..456 "4.0"
  RPAREN@456..457 ")"
  SEMICOLON@457..458 ";"
  NEWLINE@458..460 "\r\n"
  WS@460..464 "    "
  IDENT_KW@464..470 "noise3"
  LPAREN@470..471 "("
  IDENT_KW@471..475 "vec2"
  LPAREN@475..476 "("
  DIGITS@476..477 "3"
  RPAREN@477..478 ")"
  RPAREN@478..479 ")"
  SEMICOLON@479..480 ";"
  NEWLINE@480..482 "\r\n"
  WS@482..486 "    "
  IDENT_KW@486..492 "noise4"
  LPAREN@492..493 "("
  DIGITS@493..494 "1"
  RPAREN@494..495 ")"
  SEMICOLON@495..496 ";"
  NEWLINE@496..498 "\r\n"
  RBRACE@498..499 "}"
  NEWLINE@499..501 "\r\n"
  NEWLINE@501..503 "\r\n"
  IDENT_KW@503..510 "uniform"
  WS@510..511 " "
  IDENT_KW@511..522 "atomic_uint"
  WS@522..523 " "
  IDENT_KW@523..529 "atomic"
  SEMICOLON@529..530 ";"
  WS@530..546 "                "
  COMMENT@546..566 "// ERROR, no binding"
  NEWLINE@566..568 "\r\n"
  IDENT_KW@568..574 "layout"
  LPAREN@574..575 "("
  IDENT_KW@575..597 "input_attachment_index"
  WS@597..598 " "
  EQUAL@598..599 "="
  WS@599..600 " "
  DIGITS@600..601 "1"
  RPAREN@601..602 ")"
  WS@602..603 " "
  IDENT_KW@603..610 "uniform"
  WS@610..611 " "
  IDENT_KW@611..623 "subpassInput"
  WS@623..624 " "
  IDENT_KW@624..627 "sub"
  SEMICOLON@627..628 ";"
  WS@628..629 " "
  COMMENT@629..648 "// ERROR, no inputs"
  NEWLINE@648..650 "\r\n"
