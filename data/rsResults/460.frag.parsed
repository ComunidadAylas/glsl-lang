ROOT@0..632
  PP_VERSION@0..19
    HASH@0..1 "#"
    IDENT_KW@1..8 "version"
    WS@8..9 " "
    PP_VERSION_NUMBER@9..12
      DIGITS@9..12 "460"
    WS@12..13 " "
    PP_VERSION_PROFILE@13..17
      IDENT_KW@13..17 "core"
    NEWLINE@17..19 "\r\n"
  NEWLINE@19..21 "\r\n"
  IDENT_KW@21..27 "struct"
  WS@27..28 " "
  IDENT_KW@28..29 "S"
  WS@29..30 " "
  LBRACE@30..31 "{"
  NEWLINE@31..33 "\r\n"
  WS@33..37 "    "
  IDENT_KW@37..42 "float"
  WS@42..43 " "
  IDENT_KW@43..44 "f"
  SEMICOLON@44..45 ";"
  NEWLINE@45..47 "\r\n"
  WS@47..51 "    "
  IDENT_KW@51..55 "vec4"
  WS@55..56 " "
  IDENT_KW@56..57 "v"
  SEMICOLON@57..58 ";"
  NEWLINE@58..60 "\r\n"
  RBRACE@60..61 "}"
  SEMICOLON@61..62 ";"
  NEWLINE@62..64 "\r\n"
  NEWLINE@64..66 "\r\n"
  IDENT_KW@66..68 "in"
  WS@68..69 " "
  IDENT_KW@69..70 "S"
  WS@70..71 " "
  IDENT_KW@71..72 "s"
  SEMICOLON@72..73 ";"
  NEWLINE@73..75 "\r\n"
  NEWLINE@75..77 "\r\n"
  IDENT_KW@77..81 "void"
  WS@81..82 " "
  IDENT_KW@82..86 "main"
  LPAREN@86..87 "("
  RPAREN@87..88 ")"
  NEWLINE@88..90 "\r\n"
  LBRACE@90..91 "{"
  NEWLINE@91..93 "\r\n"
  WS@93..97 "    "
  IDENT_KW@97..118 "interpolateAtCentroid"
  LPAREN@118..119 "("
  IDENT_KW@119..120 "s"
  PERIOD@120..121 "."
  IDENT_KW@121..122 "v"
  RPAREN@122..123 ")"
  SEMICOLON@123..124 ";"
  NEWLINE@124..126 "\r\n"
  WS@126..130 "    "
  IDENT_KW@130..134 "bool"
  WS@134..135 " "
  IDENT_KW@135..137 "b1"
  SEMICOLON@137..138 ";"
  NEWLINE@138..140 "\r\n"
  WS@140..144 "    "
  IDENT_KW@144..146 "b1"
  WS@146..147 " "
  EQUAL@147..148 "="
  WS@148..149 " "
  IDENT_KW@149..162 "anyInvocation"
  LPAREN@162..163 "("
  IDENT_KW@163..165 "b1"
  RPAREN@165..166 ")"
  SEMICOLON@166..167 ";"
  NEWLINE@167..169 "\r\n"
  WS@169..173 "    "
  IDENT_KW@173..175 "b1"
  WS@175..176 " "
  EQUAL@176..177 "="
  WS@177..178 " "
  IDENT_KW@178..192 "allInvocations"
  LPAREN@192..193 "("
  IDENT_KW@193..195 "b1"
  RPAREN@195..196 ")"
  SEMICOLON@196..197 ";"
  NEWLINE@197..199 "\r\n"
  WS@199..203 "    "
  IDENT_KW@203..205 "b1"
  WS@205..206 " "
  EQUAL@206..207 "="
  WS@207..208 " "
  IDENT_KW@208..227 "allInvocationsEqual"
  LPAREN@227..228 "("
  IDENT_KW@228..230 "b1"
  RPAREN@230..231 ")"
  SEMICOLON@231..232 ";"
  NEWLINE@232..234 "\r\n"
  RBRACE@234..235 "}"
  NEWLINE@235..237 "\r\n"
  NEWLINE@237..239 "\r\n"
  IDENT_KW@239..243 "void"
  WS@243..244 " "
  IDENT_KW@244..253 "attExtBad"
  LPAREN@253..254 "("
  RPAREN@254..255 ")"
  NEWLINE@255..257 "\r\n"
  LBRACE@257..258 "{"
  NEWLINE@258..260 "\r\n"
  WS@260..264 "    "
  COMMENT@264..286 "// ERRORs, not enabled"
  NEWLINE@286..288 "\r\n"
  WS@288..292 "    "
  LBRACKET@292..293 "["
  LBRACKET@293..294 "["
  IDENT_KW@294..311 "dependency_length"
  LPAREN@311..312 "("
  DIGITS@312..313 "1"
  PLUS@313..314 "+"
  DIGITS@314..315 "3"
  RPAREN@315..316 ")"
  RBRACKET@316..317 "]"
  RBRACKET@317..318 "]"
  WS@318..319 " "
  IDENT_KW@319..322 "for"
  WS@322..323 " "
  LPAREN@323..324 "("
  IDENT_KW@324..327 "int"
  WS@327..328 " "
  IDENT_KW@328..329 "i"
  WS@329..330 " "
  EQUAL@330..331 "="
  WS@331..332 " "
  DIGITS@332..333 "0"
  SEMICOLON@333..334 ";"
  WS@334..335 " "
  IDENT_KW@335..336 "i"
  WS@336..337 " "
  LANGLE@337..338 "<"
  WS@338..339 " "
  DIGITS@339..340 "8"
  SEMICOLON@340..341 ";"
  WS@341..342 " "
  INC_OP@342..344 "++"
  IDENT_KW@344..345 "i"
  RPAREN@345..346 ")"
  WS@346..347 " "
  LBRACE@347..348 "{"
  WS@348..349 " "
  RBRACE@349..350 "}"
  NEWLINE@350..351 "\n"
  WS@351..355 "    "
  LBRACKET@355..356 "["
  LBRACKET@356..357 "["
  IDENT_KW@357..364 "flatten"
  RBRACKET@364..365 "]"
  RBRACKET@365..366 "]"
  WS@366..382 "                "
  IDENT_KW@382..384 "if"
  WS@384..385 " "
  LPAREN@385..386 "("
  IDENT_KW@386..390 "true"
  RPAREN@390..391 ")"
  WS@391..392 " "
  LBRACE@392..393 "{"
  WS@393..394 " "
  RBRACE@394..395 "}"
  WS@395..396 " "
  IDENT_KW@396..400 "else"
  WS@400..401 " "
  LBRACE@401..402 "{"
  WS@402..403 " "
  RBRACE@403..404 "}"
  NEWLINE@404..405 "\n"
  RBRACE@405..406 "}"
  NEWLINE@406..408 "\n\r"
  NEWLINE@408..409 "\n"
  PP_EXTENSION@409..461
    HASH@409..410 "#"
    IDENT_KW@410..419 "extension"
    WS@419..420 " "
    IDENT_KW@420..450 "GL_EXT_control_flow_a ..."
    WS@450..451 " "
    COLON@451..452 ":"
    WS@452..453 " "
    IDENT_KW@453..459 "enable"
    NEWLINE@459..461 "\r\n"
  NEWLINE@461..463 "\r\n"
  IDENT_KW@463..467 "void"
  WS@467..468 " "
  IDENT_KW@468..474 "attExt"
  LPAREN@474..475 "("
  RPAREN@475..476 ")"
  NEWLINE@476..478 "\r\n"
  LBRACE@478..479 "{"
  NEWLINE@479..481 "\r\n"
  WS@481..485 "    "
  LBRACKET@485..486 "["
  LBRACKET@486..487 "["
  IDENT_KW@487..504 "dependency_length"
  LPAREN@504..505 "("
  DASH@505..506 "-"
  DIGITS@506..507 "3"
  RPAREN@507..508 ")"
  RBRACKET@508..509 "]"
  RBRACKET@509..510 "]"
  WS@510..511 " "
  IDENT_KW@511..513 "do"
  WS@513..514 " "
  LBRACE@514..515 "{"
  WS@515..517 "  "
  RBRACE@517..518 "}"
  WS@518..519 " "
  IDENT_KW@519..524 "while"
  LPAREN@524..525 "("
  IDENT_KW@525..529 "true"
  RPAREN@529..530 ")"
  SEMICOLON@530..531 ";"
  WS@531..532 " "
  COMMENT@532..554 "// ERROR, not positive"
  NEWLINE@554..556 "\r\n"
  WS@556..560 "    "
  LBRACKET@560..561 "["
  LBRACKET@561..562 "["
  IDENT_KW@562..579 "dependency_length"
  LPAREN@579..580 "("
  DIGITS@580..581 "0"
  RPAREN@581..582 ")"
  RBRACKET@582..583 "]"
  RBRACKET@583..584 "]"
  WS@584..585 " "
  IDENT_KW@585..587 "do"
  WS@587..588 " "
  LBRACE@588..589 "{"
  WS@589..591 "  "
  RBRACE@591..592 "}"
  WS@592..593 " "
  IDENT_KW@593..598 "while"
  LPAREN@598..599 "("
  IDENT_KW@599..603 "true"
  RPAREN@603..604 ")"
  SEMICOLON@604..605 ";"
  WS@605..607 "  "
  COMMENT@607..629 "// ERROR, not positive"
  NEWLINE@629..630 "\n"
  RBRACE@630..631 "}"
  NEWLINE@631..632 "\n"
