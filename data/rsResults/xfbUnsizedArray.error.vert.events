Ok(EnterFile { file_id: FileId(0), path: "../data/xfbUnsizedArray.error.vert" })
Ok(Directive { directive: EventDirective { node: PP_VERSION@0..19, kind: Version(Version { number: 430, profile: Core, parsed_profile: Some(Core) }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Directive { directive: EventDirective { node: PP_EXTENSION@19..65, kind: Extension(Extension { name: Specific(Atom('GL_ARB_enhanced_layouts' type=dynamic)), behavior: Require }), errors: [], source_id: FileId(0) }, masked: false })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 65..67 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 67..73 } "layout", token_kind: LAYOUT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 73..74 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 74..75 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 75..85 } "xfb_offset", token_kind: IDENT("xfb_offset"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 85..86 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 86..87 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 87..88 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 88..89 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 89..90 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 90..91 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 91..94 } "out", token_kind: OUT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 94..95 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 95..99 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 99..100 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 100..110 } "xfb_buffer", token_kind: IDENT("xfb_buffer"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 110..111 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 111..112 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 112..113 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 113..114 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: COMMENT@NodeSpan { source_id: FileId(0), range: 114..171 } "// ERROR: unsized arr ...", token_kind: COMMENT, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 171..173 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 173..175 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 175..177 } "in", token_kind: IN, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 177..179 } "  ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 179..183 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 183..184 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 184..189 } "in_vs", token_kind: IDENT("in_vs"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 189..190 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 190..192 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 192..195 } "out", token_kind: OUT, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 195..196 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 196..200 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 200..201 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 201..207 } "out_vs", token_kind: IDENT("out_vs"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 207..208 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 208..210 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 210..212 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 212..216 } "void", token_kind: TYPE_NAME(VOID), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 216..217 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 217..221 } "main", token_kind: IDENT("main"), state: Active })
Ok(Token { source_token: LPAREN@NodeSpan { source_id: FileId(0), range: 221..222 } "(", token_kind: LPAREN, state: Active })
Ok(Token { source_token: RPAREN@NodeSpan { source_id: FileId(0), range: 222..223 } ")", token_kind: RPAREN, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 223..225 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: LBRACE@NodeSpan { source_id: FileId(0), range: 225..226 } "{", token_kind: LBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 226..228 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 228..232 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 232..236 } "vec4", token_kind: TYPE_NAME(VEC4), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 236..237 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 237..243 } "result", token_kind: IDENT("result"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 243..244 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 244..245 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 245..246 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 246..251 } "in_vs", token_kind: IDENT("in_vs"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 251..252 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 252..254 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 254..256 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 256..260 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 260..270 } "xfb_buffer", token_kind: IDENT("xfb_buffer"), state: Active })
Ok(Token { source_token: LBRACKET@NodeSpan { source_id: FileId(0), range: 270..271 } "[", token_kind: LBRACKET, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 271..272 } "0", token_kind: INT_CONST(0), state: Active })
Ok(Token { source_token: RBRACKET@NodeSpan { source_id: FileId(0), range: 272..273 } "]", token_kind: RBRACKET, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 273..274 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 274..275 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 275..276 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 276..282 } "result", token_kind: IDENT("result"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 282..283 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: SLASH@NodeSpan { source_id: FileId(0), range: 283..284 } "/", token_kind: SLASH, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 284..285 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: DIGITS@NodeSpan { source_id: FileId(0), range: 285..286 } "2", token_kind: INT_CONST(2), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 286..287 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 287..289 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 289..291 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 291..295 } "    ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 295..301 } "out_vs", token_kind: IDENT("out_vs"), state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 301..302 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: EQUAL@NodeSpan { source_id: FileId(0), range: 302..303 } "=", token_kind: EQUAL, state: Active })
Ok(Token { source_token: WS@NodeSpan { source_id: FileId(0), range: 303..304 } " ", token_kind: WS, state: Active })
Ok(Token { source_token: IDENT_KW@NodeSpan { source_id: FileId(0), range: 304..310 } "result", token_kind: IDENT("result"), state: Active })
Ok(Token { source_token: SEMICOLON@NodeSpan { source_id: FileId(0), range: 310..311 } ";", token_kind: SEMICOLON, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 311..313 } "\r\n", token_kind: WS, state: Active })
Ok(Token { source_token: RBRACE@NodeSpan { source_id: FileId(0), range: 313..314 } "}", token_kind: RBRACE, state: Active })
Ok(Token { source_token: NEWLINE@NodeSpan { source_id: FileId(0), range: 314..316 } "\r\n", token_kind: WS, state: Active })
